{
    "audited_account": "975049982984",
    "audited_account_arn": "arn:aws:iam::975049982984:root",
    "audited_partition": "aws",
    "audit_resources": [],
    "audited_checks": [],
    "service": "iam",
    "region": "us-east-1",
    "role_arn_template": "arn:aws:iam:us-east-1:975049982984:role",
    "password_policy_arn_template": "arn:aws:iam:us-east-1:975049982984:password-policy",
    "mfa_arn_template": "arn:aws:iam:us-east-1:975049982984:mfa",
    "users": [
        {
            "name": "iyersri",
            "arn": "arn:aws:iam::975049982984:user/iyersri",
            "mfa_devices": [],
            "password_last_used": "2024-08-28T03:14:02+00:00",
            "console_access": true,
            "attached_policies": [],
            "inline_policies": [],
            "tags": []
        },
        {
            "name": "service-account-backend",
            "arn": "arn:aws:iam::975049982984:user/service-account-backend",
            "mfa_devices": [],
            "password_last_used": null,
            "console_access": false,
            "attached_policies": [],
            "inline_policies": [
                "Dev-Cognito-Policy",
                "RMFX-Dev-SES-Policy",
                "Service-Account-Local-S3-Policy",
                "Service-Account-RDS"
            ],
            "tags": [
                {
                    "Key": "AKIA6GBMCAQEHSSED556",
                    "Value": "Local Access to dev instances"
                }
            ]
        },
        {
            "name": "vibhor",
            "arn": "arn:aws:iam::975049982984:user/vibhor",
            "mfa_devices": [
                {
                    "serial_number": "arn:aws:iam::975049982984:mfa/pixel",
                    "type": "mfa"
                }
            ],
            "password_last_used": "2024-08-30T13:02:23+00:00",
            "console_access": true,
            "attached_policies": [
                {
                    "PolicyName": "IAMUserChangePassword",
                    "PolicyArn": "arn:aws:iam::aws:policy/IAMUserChangePassword"
                }
            ],
            "inline_policies": [],
            "tags": [
                {
                    "Key": "AKIA6GBMCAQEK46HXF56",
                    "Value": "vibhor-user-access-key"
                }
            ]
        }
    ],
    "roles": [
        {
            "name": "AmazonSageMaker-ExecutionRole-20240819T212690",
            "arn": "arn:aws:iam::975049982984:role/service-role/AmazonSageMaker-ExecutionRole-20240819T212690",
            "assume_role_policy": {
                "Version": "2012-10-17",
                "Statement": [
                    {
                        "Effect": "Allow",
                        "Principal": {
                            "Service": "sagemaker.amazonaws.com"
                        },
                        "Action": "sts:AssumeRole"
                    }
                ]
            },
            "is_service_role": true,
            "attached_policies": [
                {
                    "PolicyName": "AmazonSageMakerFullAccess",
                    "PolicyArn": "arn:aws:iam::aws:policy/AmazonSageMakerFullAccess"
                },
                {
                    "PolicyName": "AmazonSageMakerCanvasAIServicesAccess",
                    "PolicyArn": "arn:aws:iam::aws:policy/AmazonSageMakerCanvasAIServicesAccess"
                },
                {
                    "PolicyName": "AmazonSageMakerCanvasFullAccess",
                    "PolicyArn": "arn:aws:iam::aws:policy/AmazonSageMakerCanvasFullAccess"
                },
                {
                    "PolicyName": "AmazonSageMakerCanvasDataPrepFullAccess",
                    "PolicyArn": "arn:aws:iam::aws:policy/AmazonSageMakerCanvasDataPrepFullAccess"
                },
                {
                    "PolicyName": "AmazonSageMaker-ExecutionPolicy-20240819T212690",
                    "PolicyArn": "arn:aws:iam::975049982984:policy/service-role/AmazonSageMaker-ExecutionPolicy-20240819T212690"
                }
            ],
            "inline_policies": [],
            "tags": []
        },
        {
            "name": "AmazonSagemakerCanvasBedrockRole-20240819T212689",
            "arn": "arn:aws:iam::975049982984:role/service-role/AmazonSagemakerCanvasBedrockRole-20240819T212689",
            "assume_role_policy": {
                "Version": "2012-10-17",
                "Statement": [
                    {
                        "Sid": "BedrockAssumeRole",
                        "Effect": "Allow",
                        "Principal": {
                            "Service": "bedrock.amazonaws.com"
                        },
                        "Action": "sts:AssumeRole",
                        "Condition": {
                            "StringEquals": {
                                "aws:SourceAccount": "975049982984"
                            }
                        }
                    }
                ]
            },
            "is_service_role": true,
            "attached_policies": [
                {
                    "PolicyName": "AmazonSageMakerCanvasBedrockAccess",
                    "PolicyArn": "arn:aws:iam::aws:policy/AmazonSageMakerCanvasBedrockAccess"
                }
            ],
            "inline_policies": [],
            "tags": []
        },
        {
            "name": "AmazonSageMakerCanvasEMRSExecutionAccess-20240819T212689",
            "arn": "arn:aws:iam::975049982984:role/service-role/AmazonSageMakerCanvasEMRSExecutionAccess-20240819T212689",
            "assume_role_policy": {
                "Version": "2012-10-17",
                "Statement": [
                    {
                        "Sid": "EMRServerlessTrustPolicy",
                        "Effect": "Allow",
                        "Principal": {
                            "Service": "emr-serverless.amazonaws.com"
                        },
                        "Action": "sts:AssumeRole",
                        "Condition": {
                            "StringEquals": {
                                "aws:SourceAccount": "975049982984"
                            }
                        }
                    }
                ]
            },
            "is_service_role": true,
            "attached_policies": [
                {
                    "PolicyName": "AmazonSageMakerCanvasEMRServerlessExecutionRolePolicy",
                    "PolicyArn": "arn:aws:iam::aws:policy/AmazonSageMakerCanvasEMRServerlessExecutionRolePolicy"
                }
            ],
            "inline_policies": [],
            "tags": []
        },
        {
            "name": "AmazonSagemakerCanvasForecastRole-20240819T212689",
            "arn": "arn:aws:iam::975049982984:role/service-role/AmazonSagemakerCanvasForecastRole-20240819T212689",
            "assume_role_policy": {
                "Version": "2012-10-17",
                "Statement": [
                    {
                        "Effect": "Allow",
                        "Principal": {
                            "Service": "forecast.amazonaws.com"
                        },
                        "Action": "sts:AssumeRole"
                    }
                ]
            },
            "is_service_role": true,
            "attached_policies": [
                {
                    "PolicyName": "AmazonSageMakerCanvasForecastAccess",
                    "PolicyArn": "arn:aws:iam::aws:policy/service-role/AmazonSageMakerCanvasForecastAccess"
                }
            ],
            "inline_policies": [],
            "tags": []
        },
        {
            "name": "AmazonSageMakerServiceCatalogProductsApiGatewayRole",
            "arn": "arn:aws:iam::975049982984:role/service-role/AmazonSageMakerServiceCatalogProductsApiGatewayRole",
            "assume_role_policy": {
                "Version": "2012-10-17",
                "Statement": [
                    {
                        "Effect": "Allow",
                        "Principal": {
                            "Service": "apigateway.amazonaws.com"
                        },
                        "Action": "sts:AssumeRole"
                    }
                ]
            },
            "is_service_role": true,
            "attached_policies": [
                {
                    "PolicyName": "AmazonSageMakerServiceCatalogProductsApiGatewayServiceRolePolicy",
                    "PolicyArn": "arn:aws:iam::aws:policy/service-role/AmazonSageMakerServiceCatalogProductsApiGatewayServiceRolePolicy"
                }
            ],
            "inline_policies": [],
            "tags": []
        },
        {
            "name": "AmazonSageMakerServiceCatalogProductsCloudformationRole",
            "arn": "arn:aws:iam::975049982984:role/service-role/AmazonSageMakerServiceCatalogProductsCloudformationRole",
            "assume_role_policy": {
                "Version": "2012-10-17",
                "Statement": [
                    {
                        "Effect": "Allow",
                        "Principal": {
                            "Service": "cloudformation.amazonaws.com"
                        },
                        "Action": "sts:AssumeRole"
                    }
                ]
            },
            "is_service_role": true,
            "attached_policies": [
                {
                    "PolicyName": "AmazonSageMakerServiceCatalogProductsCloudformationServiceRolePolicy",
                    "PolicyArn": "arn:aws:iam::aws:policy/service-role/AmazonSageMakerServiceCatalogProductsCloudformationServiceRolePolicy"
                }
            ],
            "inline_policies": [],
            "tags": []
        },
        {
            "name": "AmazonSageMakerServiceCatalogProductsCodeBuildRole",
            "arn": "arn:aws:iam::975049982984:role/service-role/AmazonSageMakerServiceCatalogProductsCodeBuildRole",
            "assume_role_policy": {
                "Version": "2012-10-17",
                "Statement": [
                    {
                        "Effect": "Allow",
                        "Principal": {
                            "Service": "codebuild.amazonaws.com"
                        },
                        "Action": "sts:AssumeRole"
                    }
                ]
            },
            "is_service_role": true,
            "attached_policies": [
                {
                    "PolicyName": "AmazonSageMakerServiceCatalogProductsCodeBuildServiceRolePolicy",
                    "PolicyArn": "arn:aws:iam::aws:policy/AmazonSageMakerServiceCatalogProductsCodeBuildServiceRolePolicy"
                }
            ],
            "inline_policies": [],
            "tags": []
        },
        {
            "name": "AmazonSageMakerServiceCatalogProductsCodePipelineRole",
            "arn": "arn:aws:iam::975049982984:role/service-role/AmazonSageMakerServiceCatalogProductsCodePipelineRole",
            "assume_role_policy": {
                "Version": "2012-10-17",
                "Statement": [
                    {
                        "Sid": "",
                        "Effect": "Allow",
                        "Principal": {
                            "Service": "codepipeline.amazonaws.com"
                        },
                        "Action": "sts:AssumeRole"
                    }
                ]
            },
            "is_service_role": true,
            "attached_policies": [
                {
                    "PolicyName": "AmazonSageMakerServiceCatalogProductsCodePipelineServiceRolePolicy",
                    "PolicyArn": "arn:aws:iam::aws:policy/service-role/AmazonSageMakerServiceCatalogProductsCodePipelineServiceRolePolicy"
                }
            ],
            "inline_policies": [],
            "tags": []
        },
        {
            "name": "AmazonSageMakerServiceCatalogProductsEventsRole",
            "arn": "arn:aws:iam::975049982984:role/service-role/AmazonSageMakerServiceCatalogProductsEventsRole",
            "assume_role_policy": {
                "Version": "2012-10-17",
                "Statement": [
                    {
                        "Sid": "",
                        "Effect": "Allow",
                        "Principal": {
                            "Service": "events.amazonaws.com"
                        },
                        "Action": "sts:AssumeRole"
                    }
                ]
            },
            "is_service_role": true,
            "attached_policies": [
                {
                    "PolicyName": "AmazonSageMakerServiceCatalogProductsEventsServiceRolePolicy",
                    "PolicyArn": "arn:aws:iam::aws:policy/service-role/AmazonSageMakerServiceCatalogProductsEventsServiceRolePolicy"
                }
            ],
            "inline_policies": [],
            "tags": []
        },
        {
            "name": "AmazonSageMakerServiceCatalogProductsExecutionRole",
            "arn": "arn:aws:iam::975049982984:role/service-role/AmazonSageMakerServiceCatalogProductsExecutionRole",
            "assume_role_policy": {
                "Version": "2012-10-17",
                "Statement": [
                    {
                        "Effect": "Allow",
                        "Principal": {
                            "Service": "sagemaker.amazonaws.com"
                        },
                        "Action": "sts:AssumeRole"
                    }
                ]
            },
            "is_service_role": true,
            "attached_policies": [
                {
                    "PolicyName": "AmazonSageMakerFullAccess",
                    "PolicyArn": "arn:aws:iam::aws:policy/AmazonSageMakerFullAccess"
                }
            ],
            "inline_policies": [],
            "tags": []
        },
        {
            "name": "AmazonSageMakerServiceCatalogProductsFirehoseRole",
            "arn": "arn:aws:iam::975049982984:role/service-role/AmazonSageMakerServiceCatalogProductsFirehoseRole",
            "assume_role_policy": {
                "Version": "2012-10-17",
                "Statement": [
                    {
                        "Effect": "Allow",
                        "Principal": {
                            "Service": "firehose.amazonaws.com"
                        },
                        "Action": "sts:AssumeRole"
                    }
                ]
            },
            "is_service_role": true,
            "attached_policies": [
                {
                    "PolicyName": "AmazonSageMakerServiceCatalogProductsFirehoseServiceRolePolicy",
                    "PolicyArn": "arn:aws:iam::aws:policy/service-role/AmazonSageMakerServiceCatalogProductsFirehoseServiceRolePolicy"
                }
            ],
            "inline_policies": [],
            "tags": []
        },
        {
            "name": "AmazonSageMakerServiceCatalogProductsGlueRole",
            "arn": "arn:aws:iam::975049982984:role/service-role/AmazonSageMakerServiceCatalogProductsGlueRole",
            "assume_role_policy": {
                "Version": "2012-10-17",
                "Statement": [
                    {
                        "Effect": "Allow",
                        "Principal": {
                            "Service": "glue.amazonaws.com"
                        },
                        "Action": "sts:AssumeRole"
                    }
                ]
            },
            "is_service_role": true,
            "attached_policies": [
                {
                    "PolicyName": "AmazonSageMakerServiceCatalogProductsGlueServiceRolePolicy",
                    "PolicyArn": "arn:aws:iam::aws:policy/service-role/AmazonSageMakerServiceCatalogProductsGlueServiceRolePolicy"
                }
            ],
            "inline_policies": [],
            "tags": []
        },
        {
            "name": "AmazonSageMakerServiceCatalogProductsLambdaRole",
            "arn": "arn:aws:iam::975049982984:role/service-role/AmazonSageMakerServiceCatalogProductsLambdaRole",
            "assume_role_policy": {
                "Version": "2012-10-17",
                "Statement": [
                    {
                        "Effect": "Allow",
                        "Principal": {
                            "Service": "lambda.amazonaws.com"
                        },
                        "Action": "sts:AssumeRole"
                    }
                ]
            },
            "is_service_role": true,
            "attached_policies": [
                {
                    "PolicyName": "AmazonSageMakerServiceCatalogProductsLambdaServiceRolePolicy",
                    "PolicyArn": "arn:aws:iam::aws:policy/service-role/AmazonSageMakerServiceCatalogProductsLambdaServiceRolePolicy"
                }
            ],
            "inline_policies": [],
            "tags": []
        },
        {
            "name": "AmazonSageMakerServiceCatalogProductsLaunchRole",
            "arn": "arn:aws:iam::975049982984:role/service-role/AmazonSageMakerServiceCatalogProductsLaunchRole",
            "assume_role_policy": {
                "Version": "2012-10-17",
                "Statement": [
                    {
                        "Effect": "Allow",
                        "Principal": {
                            "Service": "servicecatalog.amazonaws.com"
                        },
                        "Action": "sts:AssumeRole"
                    }
                ]
            },
            "is_service_role": true,
            "attached_policies": [
                {
                    "PolicyName": "AmazonSageMakerAdmin-ServiceCatalogProductsServiceRolePolicy",
                    "PolicyArn": "arn:aws:iam::aws:policy/AmazonSageMakerAdmin-ServiceCatalogProductsServiceRolePolicy"
                }
            ],
            "inline_policies": [],
            "tags": []
        },
        {
            "name": "AmazonSageMakerServiceCatalogProductsUseRole",
            "arn": "arn:aws:iam::975049982984:role/service-role/AmazonSageMakerServiceCatalogProductsUseRole",
            "assume_role_policy": {
                "Version": "2012-10-17",
                "Statement": [
                    {
                        "Effect": "Allow",
                        "Principal": {
                            "Service": [
                                "firehose.amazonaws.com",
                                "glue.amazonaws.com",
                                "codebuild.amazonaws.com",
                                "sagemaker.amazonaws.com",
                                "cloudformation.amazonaws.com",
                                "apigateway.amazonaws.com",
                                "events.amazonaws.com",
                                "states.amazonaws.com",
                                "lambda.amazonaws.com",
                                "codepipeline.amazonaws.com"
                            ]
                        },
                        "Action": "sts:AssumeRole"
                    }
                ]
            },
            "is_service_role": true,
            "attached_policies": [
                {
                    "PolicyName": "AmazonSageMakerServiceCatalogProductsUseRole-20240819T212777",
                    "PolicyArn": "arn:aws:iam::975049982984:policy/service-role/AmazonSageMakerServiceCatalogProductsUseRole-20240819T212777"
                }
            ],
            "inline_policies": [],
            "tags": []
        },
        {
            "name": "AWS-Config-Read-Only-Cross-Account-Role",
            "arn": "arn:aws:iam::975049982984:role/AWS-Config-Read-Only-Cross-Account-Role",
            "assume_role_policy": {
                "Version": "2012-10-17",
                "Statement": [
                    {
                        "Effect": "Allow",
                        "Principal": {
                            "AWS": "arn:aws:iam::536697263363:root"
                        },
                        "Action": "sts:AssumeRole",
                        "Condition": {}
                    }
                ]
            },
            "is_service_role": false,
            "attached_policies": [
                {
                    "PolicyName": "ReadOnlyAccess",
                    "PolicyArn": "arn:aws:iam::aws:policy/ReadOnlyAccess"
                }
            ],
            "inline_policies": [],
            "tags": []
        },
        {
            "name": "AWSNeptuneNotebookRole-1723958063619",
            "arn": "arn:aws:iam::975049982984:role/service-role/AWSNeptuneNotebookRole-1723958063619",
            "assume_role_policy": {
                "Version": "2012-10-17",
                "Statement": [
                    {
                        "Sid": "NeptuneSagemakerNotebookAccess",
                        "Effect": "Allow",
                        "Principal": {
                            "Service": "sagemaker.amazonaws.com"
                        },
                        "Action": "sts:AssumeRole"
                    }
                ]
            },
            "is_service_role": true,
            "attached_policies": [
                {
                    "PolicyName": "AWSNeptuneNotebook-1723958063619",
                    "PolicyArn": "arn:aws:iam::975049982984:policy/service-role/AWSNeptuneNotebook-1723958063619"
                }
            ],
            "inline_policies": [],
            "tags": []
        },
        {
            "name": "AWSNeptuneNotebookRole-1724132302637",
            "arn": "arn:aws:iam::975049982984:role/service-role/AWSNeptuneNotebookRole-1724132302637",
            "assume_role_policy": {
                "Version": "2012-10-17",
                "Statement": [
                    {
                        "Sid": "NeptuneSagemakerNotebookAccess",
                        "Effect": "Allow",
                        "Principal": {
                            "Service": "sagemaker.amazonaws.com"
                        },
                        "Action": "sts:AssumeRole"
                    }
                ]
            },
            "is_service_role": true,
            "attached_policies": [
                {
                    "PolicyName": "AWSNeptuneNotebook-1724132302637",
                    "PolicyArn": "arn:aws:iam::975049982984:policy/service-role/AWSNeptuneNotebook-1724132302637"
                }
            ],
            "inline_policies": [],
            "tags": []
        },
        {
            "name": "AWSNeptuneNotebookRole-1724208407913",
            "arn": "arn:aws:iam::975049982984:role/service-role/AWSNeptuneNotebookRole-1724208407913",
            "assume_role_policy": {
                "Version": "2012-10-17",
                "Statement": [
                    {
                        "Sid": "NeptuneSagemakerNotebookAccess",
                        "Effect": "Allow",
                        "Principal": {
                            "Service": "sagemaker.amazonaws.com"
                        },
                        "Action": "sts:AssumeRole"
                    }
                ]
            },
            "is_service_role": true,
            "attached_policies": [
                {
                    "PolicyName": "AWSNeptuneNotebook-1724208407913",
                    "PolicyArn": "arn:aws:iam::975049982984:policy/service-role/AWSNeptuneNotebook-1724208407913"
                }
            ],
            "inline_policies": [],
            "tags": []
        },
        {
            "name": "AWSNeptuneNotebookRole-1724209661436",
            "arn": "arn:aws:iam::975049982984:role/service-role/AWSNeptuneNotebookRole-1724209661436",
            "assume_role_policy": {
                "Version": "2012-10-17",
                "Statement": [
                    {
                        "Sid": "NeptuneSagemakerNotebookAccess",
                        "Effect": "Allow",
                        "Principal": {
                            "Service": "sagemaker.amazonaws.com"
                        },
                        "Action": "sts:AssumeRole"
                    }
                ]
            },
            "is_service_role": true,
            "attached_policies": [
                {
                    "PolicyName": "AWSNeptuneNotebook-1724209661436",
                    "PolicyArn": "arn:aws:iam::975049982984:policy/service-role/AWSNeptuneNotebook-1724209661436"
                }
            ],
            "inline_policies": [],
            "tags": []
        },
        {
            "name": "AWSReservedSSO_Admin_6e47d669e2396138",
            "arn": "arn:aws:iam::975049982984:role/aws-reserved/sso.amazonaws.com/AWSReservedSSO_Admin_6e47d669e2396138",
            "assume_role_policy": {
                "Version": "2012-10-17",
                "Statement": [
                    {
                        "Effect": "Allow",
                        "Principal": {
                            "Federated": "arn:aws:iam::975049982984:saml-provider/AWSSSO_a6c158234b02d7c0_DO_NOT_DELETE"
                        },
                        "Action": [
                            "sts:AssumeRoleWithSAML",
                            "sts:TagSession"
                        ],
                        "Condition": {
                            "StringEquals": {
                                "SAML:aud": "https://signin.aws.amazon.com/saml"
                            }
                        }
                    }
                ]
            },
            "is_service_role": false,
            "attached_policies": [
                {
                    "PolicyName": "AdministratorAccess",
                    "PolicyArn": "arn:aws:iam::aws:policy/AdministratorAccess"
                },
                {
                    "PolicyName": "Billing",
                    "PolicyArn": "arn:aws:iam::aws:policy/job-function/Billing"
                },
                {
                    "PolicyName": "AWSBillingConductorFullAccess",
                    "PolicyArn": "arn:aws:iam::aws:policy/AWSBillingConductorFullAccess"
                }
            ],
            "inline_policies": [],
            "tags": []
        },
        {
            "name": "AWSReservedSSO_SysAdmin_23b4b21fed44945d",
            "arn": "arn:aws:iam::975049982984:role/aws-reserved/sso.amazonaws.com/AWSReservedSSO_SysAdmin_23b4b21fed44945d",
            "assume_role_policy": {
                "Version": "2012-10-17",
                "Statement": [
                    {
                        "Effect": "Allow",
                        "Principal": {
                            "Federated": "arn:aws:iam::975049982984:saml-provider/AWSSSO_a6c158234b02d7c0_DO_NOT_DELETE"
                        },
                        "Action": [
                            "sts:AssumeRoleWithSAML",
                            "sts:TagSession"
                        ],
                        "Condition": {
                            "StringEquals": {
                                "SAML:aud": "https://signin.aws.amazon.com/saml"
                            }
                        }
                    }
                ]
            },
            "is_service_role": false,
            "attached_policies": [
                {
                    "PolicyName": "SystemAdministrator",
                    "PolicyArn": "arn:aws:iam::aws:policy/job-function/SystemAdministrator"
                },
                {
                    "PolicyName": "DataScientist",
                    "PolicyArn": "arn:aws:iam::aws:policy/job-function/DataScientist"
                },
                {
                    "PolicyName": "SupportUser",
                    "PolicyArn": "arn:aws:iam::aws:policy/job-function/SupportUser"
                },
                {
                    "PolicyName": "DatabaseAdministrator",
                    "PolicyArn": "arn:aws:iam::aws:policy/job-function/DatabaseAdministrator"
                },
                {
                    "PolicyName": "PowerUserAccess",
                    "PolicyArn": "arn:aws:iam::aws:policy/PowerUserAccess"
                },
                {
                    "PolicyName": "NetworkAdministrator",
                    "PolicyArn": "arn:aws:iam::aws:policy/job-function/NetworkAdministrator"
                },
                {
                    "PolicyName": "multiplePolicies",
                    "PolicyArn": "arn:aws:iam::975049982984:policy/multiplePolicies"
                }
            ],
            "inline_policies": [],
            "tags": []
        },
        {
            "name": "AWSServiceRoleForAmazonCognitoIdpEmailService",
            "arn": "arn:aws:iam::975049982984:role/aws-service-role/email.cognito-idp.amazonaws.com/AWSServiceRoleForAmazonCognitoIdpEmailService",
            "assume_role_policy": {
                "Version": "2012-10-17",
                "Statement": [
                    {
                        "Effect": "Allow",
                        "Principal": {
                            "Service": "email.cognito-idp.amazonaws.com"
                        },
                        "Action": "sts:AssumeRole"
                    }
                ]
            },
            "is_service_role": true,
            "attached_policies": [
                {
                    "PolicyName": "AmazonCognitoIdpEmailServiceRolePolicy",
                    "PolicyArn": "arn:aws:iam::aws:policy/aws-service-role/AmazonCognitoIdpEmailServiceRolePolicy"
                }
            ],
            "inline_policies": [],
            "tags": []
        },
        {
            "name": "AWSServiceRoleForAmazonEMRServerless",
            "arn": "arn:aws:iam::975049982984:role/aws-service-role/ops.emr-serverless.amazonaws.com/AWSServiceRoleForAmazonEMRServerless",
            "assume_role_policy": {
                "Version": "2012-10-17",
                "Statement": [
                    {
                        "Effect": "Allow",
                        "Principal": {
                            "Service": "ops.emr-serverless.amazonaws.com"
                        },
                        "Action": "sts:AssumeRole"
                    }
                ]
            },
            "is_service_role": true,
            "attached_policies": [
                {
                    "PolicyName": "AmazonEMRServerlessServiceRolePolicy",
                    "PolicyArn": "arn:aws:iam::aws:policy/aws-service-role/AmazonEMRServerlessServiceRolePolicy"
                }
            ],
            "inline_policies": [],
            "tags": []
        },
        {
            "name": "AWSServiceRoleForDAX",
            "arn": "arn:aws:iam::975049982984:role/aws-service-role/dax.amazonaws.com/AWSServiceRoleForDAX",
            "assume_role_policy": {
                "Version": "2012-10-17",
                "Statement": [
                    {
                        "Effect": "Allow",
                        "Principal": {
                            "Service": "dax.amazonaws.com"
                        },
                        "Action": "sts:AssumeRole"
                    }
                ]
            },
            "is_service_role": true,
            "attached_policies": [
                {
                    "PolicyName": "DAXServiceRolePolicy",
                    "PolicyArn": "arn:aws:iam::aws:policy/aws-service-role/DAXServiceRolePolicy"
                }
            ],
            "inline_policies": [],
            "tags": []
        },
        {
            "name": "AWSServiceRoleForDevOpsGuru",
            "arn": "arn:aws:iam::975049982984:role/aws-service-role/devops-guru.amazonaws.com/AWSServiceRoleForDevOpsGuru",
            "assume_role_policy": {
                "Version": "2012-10-17",
                "Statement": [
                    {
                        "Effect": "Allow",
                        "Principal": {
                            "Service": "devops-guru.amazonaws.com"
                        },
                        "Action": "sts:AssumeRole"
                    }
                ]
            },
            "is_service_role": true,
            "attached_policies": [
                {
                    "PolicyName": "AmazonDevOpsGuruServiceRolePolicy",
                    "PolicyArn": "arn:aws:iam::aws:policy/aws-service-role/AmazonDevOpsGuruServiceRolePolicy"
                }
            ],
            "inline_policies": [],
            "tags": []
        },
        {
            "name": "AWSServiceRoleForElastiCache",
            "arn": "arn:aws:iam::975049982984:role/aws-service-role/elasticache.amazonaws.com/AWSServiceRoleForElastiCache",
            "assume_role_policy": {
                "Version": "2012-10-17",
                "Statement": [
                    {
                        "Effect": "Allow",
                        "Principal": {
                            "Service": "elasticache.amazonaws.com"
                        },
                        "Action": "sts:AssumeRole"
                    }
                ]
            },
            "is_service_role": true,
            "attached_policies": [
                {
                    "PolicyName": "ElastiCacheServiceRolePolicy",
                    "PolicyArn": "arn:aws:iam::aws:policy/aws-service-role/ElastiCacheServiceRolePolicy"
                }
            ],
            "inline_policies": [],
            "tags": []
        },
        {
            "name": "AWSServiceRoleForElasticLoadBalancing",
            "arn": "arn:aws:iam::975049982984:role/aws-service-role/elasticloadbalancing.amazonaws.com/AWSServiceRoleForElasticLoadBalancing",
            "assume_role_policy": {
                "Version": "2012-10-17",
                "Statement": [
                    {
                        "Effect": "Allow",
                        "Principal": {
                            "Service": "elasticloadbalancing.amazonaws.com"
                        },
                        "Action": "sts:AssumeRole"
                    }
                ]
            },
            "is_service_role": true,
            "attached_policies": [
                {
                    "PolicyName": "AWSElasticLoadBalancingServiceRolePolicy",
                    "PolicyArn": "arn:aws:iam::aws:policy/aws-service-role/AWSElasticLoadBalancingServiceRolePolicy"
                }
            ],
            "inline_policies": [],
            "tags": []
        },
        {
            "name": "AWSServiceRoleForGlobalAccelerator",
            "arn": "arn:aws:iam::975049982984:role/aws-service-role/globalaccelerator.amazonaws.com/AWSServiceRoleForGlobalAccelerator",
            "assume_role_policy": {
                "Version": "2012-10-17",
                "Statement": [
                    {
                        "Effect": "Allow",
                        "Principal": {
                            "Service": "globalaccelerator.amazonaws.com"
                        },
                        "Action": "sts:AssumeRole"
                    }
                ]
            },
            "is_service_role": true,
            "attached_policies": [
                {
                    "PolicyName": "AWSGlobalAcceleratorSLRPolicy",
                    "PolicyArn": "arn:aws:iam::aws:policy/aws-service-role/AWSGlobalAcceleratorSLRPolicy"
                }
            ],
            "inline_policies": [],
            "tags": []
        },
        {
            "name": "AWSServiceRoleForOrganizations",
            "arn": "arn:aws:iam::975049982984:role/aws-service-role/organizations.amazonaws.com/AWSServiceRoleForOrganizations",
            "assume_role_policy": {
                "Version": "2012-10-17",
                "Statement": [
                    {
                        "Effect": "Allow",
                        "Principal": {
                            "Service": "organizations.amazonaws.com"
                        },
                        "Action": "sts:AssumeRole"
                    }
                ]
            },
            "is_service_role": true,
            "attached_policies": [
                {
                    "PolicyName": "AWSOrganizationsServiceTrustPolicy",
                    "PolicyArn": "arn:aws:iam::aws:policy/aws-service-role/AWSOrganizationsServiceTrustPolicy"
                }
            ],
            "inline_policies": [],
            "tags": []
        },
        {
            "name": "AWSServiceRoleForRDS",
            "arn": "arn:aws:iam::975049982984:role/aws-service-role/rds.amazonaws.com/AWSServiceRoleForRDS",
            "assume_role_policy": {
                "Version": "2012-10-17",
                "Statement": [
                    {
                        "Effect": "Allow",
                        "Principal": {
                            "Service": "rds.amazonaws.com"
                        },
                        "Action": "sts:AssumeRole"
                    }
                ]
            },
            "is_service_role": true,
            "attached_policies": [
                {
                    "PolicyName": "AmazonRDSServiceRolePolicy",
                    "PolicyArn": "arn:aws:iam::aws:policy/aws-service-role/AmazonRDSServiceRolePolicy"
                }
            ],
            "inline_policies": [],
            "tags": []
        },
        {
            "name": "AWSServiceRoleForServiceQuotas",
            "arn": "arn:aws:iam::975049982984:role/aws-service-role/servicequotas.amazonaws.com/AWSServiceRoleForServiceQuotas",
            "assume_role_policy": {
                "Version": "2012-10-17",
                "Statement": [
                    {
                        "Effect": "Allow",
                        "Principal": {
                            "Service": "servicequotas.amazonaws.com"
                        },
                        "Action": "sts:AssumeRole"
                    }
                ]
            },
            "is_service_role": true,
            "attached_policies": [
                {
                    "PolicyName": "ServiceQuotasServiceRolePolicy",
                    "PolicyArn": "arn:aws:iam::aws:policy/aws-service-role/ServiceQuotasServiceRolePolicy"
                }
            ],
            "inline_policies": [],
            "tags": []
        },
        {
            "name": "AWSServiceRoleForSSO",
            "arn": "arn:aws:iam::975049982984:role/aws-service-role/sso.amazonaws.com/AWSServiceRoleForSSO",
            "assume_role_policy": {
                "Version": "2012-10-17",
                "Statement": [
                    {
                        "Effect": "Allow",
                        "Principal": {
                            "Service": "sso.amazonaws.com"
                        },
                        "Action": "sts:AssumeRole"
                    }
                ]
            },
            "is_service_role": true,
            "attached_policies": [
                {
                    "PolicyName": "AWSSSOServiceRolePolicy",
                    "PolicyArn": "arn:aws:iam::aws:policy/aws-service-role/AWSSSOServiceRolePolicy"
                }
            ],
            "inline_policies": [],
            "tags": []
        },
        {
            "name": "AWSServiceRoleForSupport",
            "arn": "arn:aws:iam::975049982984:role/aws-service-role/support.amazonaws.com/AWSServiceRoleForSupport",
            "assume_role_policy": {
                "Version": "2012-10-17",
                "Statement": [
                    {
                        "Effect": "Allow",
                        "Principal": {
                            "Service": "support.amazonaws.com"
                        },
                        "Action": "sts:AssumeRole"
                    }
                ]
            },
            "is_service_role": true,
            "attached_policies": [
                {
                    "PolicyName": "AWSSupportServiceRolePolicy",
                    "PolicyArn": "arn:aws:iam::aws:policy/aws-service-role/AWSSupportServiceRolePolicy"
                }
            ],
            "inline_policies": [],
            "tags": []
        },
        {
            "name": "AWSServiceRoleForTrustedAdvisor",
            "arn": "arn:aws:iam::975049982984:role/aws-service-role/trustedadvisor.amazonaws.com/AWSServiceRoleForTrustedAdvisor",
            "assume_role_policy": {
                "Version": "2012-10-17",
                "Statement": [
                    {
                        "Effect": "Allow",
                        "Principal": {
                            "Service": "trustedadvisor.amazonaws.com"
                        },
                        "Action": "sts:AssumeRole"
                    }
                ]
            },
            "is_service_role": true,
            "attached_policies": [
                {
                    "PolicyName": "AWSTrustedAdvisorServiceRolePolicy",
                    "PolicyArn": "arn:aws:iam::aws:policy/aws-service-role/AWSTrustedAdvisorServiceRolePolicy"
                }
            ],
            "inline_policies": [],
            "tags": []
        },
        {
            "name": "bedrock-invocation-logging",
            "arn": "arn:aws:iam::975049982984:role/service-role/bedrock-invocation-logging",
            "assume_role_policy": {
                "Version": "2012-10-17",
                "Statement": [
                    {
                        "Sid": "AmazonBedrockModelInvocationCWDeliveryRole",
                        "Effect": "Allow",
                        "Principal": {
                            "Service": "bedrock.amazonaws.com"
                        },
                        "Action": "sts:AssumeRole",
                        "Condition": {
                            "StringEquals": {
                                "aws:SourceAccount": "975049982984"
                            },
                            "ArnLike": {
                                "aws:SourceArn": "arn:aws:bedrock:us-east-1:975049982984:*"
                            }
                        }
                    }
                ]
            },
            "is_service_role": true,
            "attached_policies": [
                {
                    "PolicyName": "bedrock-invocation-logging-policy-1724815136544",
                    "PolicyArn": "arn:aws:iam::975049982984:policy/service-role/bedrock-invocation-logging-policy-1724815136544"
                }
            ],
            "inline_policies": [],
            "tags": []
        },
        {
            "name": "bedrock-invocation-logs",
            "arn": "arn:aws:iam::975049982984:role/service-role/bedrock-invocation-logs",
            "assume_role_policy": {
                "Version": "2012-10-17",
                "Statement": [
                    {
                        "Sid": "AmazonBedrockModelInvocationCWDeliveryRole",
                        "Effect": "Allow",
                        "Principal": {
                            "Service": "bedrock.amazonaws.com"
                        },
                        "Action": "sts:AssumeRole",
                        "Condition": {
                            "StringEquals": {
                                "aws:SourceAccount": "975049982984"
                            },
                            "ArnLike": {
                                "aws:SourceArn": "arn:aws:bedrock:us-east-1:975049982984:*"
                            }
                        }
                    }
                ]
            },
            "is_service_role": true,
            "attached_policies": [
                {
                    "PolicyName": "bedrock-invocation-logs-policy-1724815008598",
                    "PolicyArn": "arn:aws:iam::975049982984:policy/service-role/bedrock-invocation-logs-policy-1724815008598"
                }
            ],
            "inline_policies": [],
            "tags": []
        },
        {
            "name": "Dev-Application-Role",
            "arn": "arn:aws:iam::975049982984:role/Dev-Application-Role",
            "assume_role_policy": {
                "Version": "2012-10-17",
                "Statement": [
                    {
                        "Effect": "Allow",
                        "Principal": {
                            "Service": "ec2.amazonaws.com"
                        },
                        "Action": "sts:AssumeRole"
                    }
                ]
            },
            "is_service_role": true,
            "attached_policies": [],
            "inline_policies": [
                "dev-cloudfront-policy",
                "Dev-Cognito-Policy",
                "RDS-Postgress-Dev-Instance"
            ],
            "tags": []
        },
        {
            "name": "EC2S3AccessRoleRmfx-app-file-upload",
            "arn": "arn:aws:iam::975049982984:role/EC2S3AccessRoleRmfx-app-file-upload",
            "assume_role_policy": {
                "Version": "2012-10-17",
                "Statement": [
                    {
                        "Effect": "Allow",
                        "Principal": {
                            "Service": "ec2.amazonaws.com"
                        },
                        "Action": "sts:AssumeRole"
                    }
                ]
            },
            "is_service_role": true,
            "attached_policies": [
                {
                    "PolicyName": "s3FullAccessRmfx-app-file-uploads",
                    "PolicyArn": "arn:aws:iam::975049982984:policy/s3FullAccessRmfx-app-file-uploads"
                }
            ],
            "inline_policies": [],
            "tags": []
        },
        {
            "name": "NeptuneAccessRole",
            "arn": "arn:aws:iam::975049982984:role/NeptuneAccessRole",
            "assume_role_policy": {
                "Version": "2012-10-17",
                "Statement": [
                    {
                        "Effect": "Allow",
                        "Principal": {
                            "Service": [
                                "ec2.amazonaws.com",
                                "neptune-graph.amazonaws.com"
                            ]
                        },
                        "Action": "sts:AssumeRole"
                    }
                ]
            },
            "is_service_role": true,
            "attached_policies": [
                {
                    "PolicyName": "AmazonS3ReadOnlyAccess",
                    "PolicyArn": "arn:aws:iam::aws:policy/AmazonS3ReadOnlyAccess"
                },
                {
                    "PolicyName": "NeptuneFullAccess",
                    "PolicyArn": "arn:aws:iam::aws:policy/NeptuneFullAccess"
                }
            ],
            "inline_policies": [],
            "tags": [
                {
                    "Key": "neptune",
                    "Value": "access_role"
                }
            ]
        },
        {
            "name": "Prod-Application-Role",
            "arn": "arn:aws:iam::975049982984:role/Prod-Application-Role",
            "assume_role_policy": {
                "Version": "2012-10-17",
                "Statement": [
                    {
                        "Effect": "Allow",
                        "Principal": {
                            "Service": "ec2.amazonaws.com"
                        },
                        "Action": "sts:AssumeRole"
                    }
                ]
            },
            "is_service_role": true,
            "attached_policies": [],
            "inline_policies": [
                "Prod-Cognito-Policy",
                "Prod-RDS-Policy",
                "Prod-S3-Bucket-Policy"
            ],
            "tags": []
        },
        {
            "name": "rds-monitoring-role",
            "arn": "arn:aws:iam::975049982984:role/rds-monitoring-role",
            "assume_role_policy": {
                "Version": "2012-10-17",
                "Statement": [
                    {
                        "Sid": "",
                        "Effect": "Allow",
                        "Principal": {
                            "Service": "monitoring.rds.amazonaws.com"
                        },
                        "Action": "sts:AssumeRole"
                    }
                ]
            },
            "is_service_role": true,
            "attached_policies": [
                {
                    "PolicyName": "AmazonRDSEnhancedMonitoringRole",
                    "PolicyArn": "arn:aws:iam::aws:policy/service-role/AmazonRDSEnhancedMonitoringRole"
                }
            ],
            "inline_policies": [],
            "tags": []
        },
        {
            "name": "rds-proxy-role-1724735674544",
            "arn": "arn:aws:iam::975049982984:role/service-role/rds-proxy-role-1724735674544",
            "assume_role_policy": {
                "Version": "2012-10-17",
                "Statement": [
                    {
                        "Effect": "Allow",
                        "Principal": {
                            "Service": "rds.amazonaws.com"
                        },
                        "Action": "sts:AssumeRole"
                    }
                ]
            },
            "is_service_role": true,
            "attached_policies": [
                {
                    "PolicyName": "rds-proxy-policy-1724735674544",
                    "PolicyArn": "arn:aws:iam::975049982984:policy/service-role/rds-proxy-policy-1724735674544"
                }
            ],
            "inline_policies": [],
            "tags": []
        },
        {
            "name": "rmfx-prod-backend-server",
            "arn": "arn:aws:iam::975049982984:role/rmfx-prod-backend-server",
            "assume_role_policy": {
                "Version": "2012-10-17",
                "Statement": [
                    {
                        "Effect": "Allow",
                        "Principal": {
                            "Service": "ec2.amazonaws.com"
                        },
                        "Action": "sts:AssumeRole"
                    }
                ]
            },
            "is_service_role": true,
            "attached_policies": [
                {
                    "PolicyName": "rmfx-prod-backend-server-cognito",
                    "PolicyArn": "arn:aws:iam::975049982984:policy/rmfx-prod-backend-server-cognito"
                },
                {
                    "PolicyName": "rmfx-prod-backend-server-s3-access",
                    "PolicyArn": "arn:aws:iam::975049982984:policy/rmfx-prod-backend-server-s3-access"
                }
            ],
            "inline_policies": [],
            "tags": []
        },
        {
            "name": "samlAdmin",
            "arn": "arn:aws:iam::975049982984:role/samlAdmin",
            "assume_role_policy": {
                "Version": "2012-10-17",
                "Statement": [
                    {
                        "Effect": "Allow",
                        "Principal": {
                            "Federated": "arn:aws:iam::975049982984:saml-provider/microsoft"
                        },
                        "Action": "sts:AssumeRoleWithSAML",
                        "Condition": {
                            "StringEquals": {
                                "SAML:aud": "https://signin.aws.amazon.com/saml"
                            }
                        }
                    }
                ]
            },
            "is_service_role": false,
            "attached_policies": [
                {
                    "PolicyName": "SystemAdministrator",
                    "PolicyArn": "arn:aws:iam::aws:policy/job-function/SystemAdministrator"
                },
                {
                    "PolicyName": "DataScientist",
                    "PolicyArn": "arn:aws:iam::aws:policy/job-function/DataScientist"
                },
                {
                    "PolicyName": "SupportUser",
                    "PolicyArn": "arn:aws:iam::aws:policy/job-function/SupportUser"
                },
                {
                    "PolicyName": "DatabaseAdministrator",
                    "PolicyArn": "arn:aws:iam::aws:policy/job-function/DatabaseAdministrator"
                },
                {
                    "PolicyName": "PowerUserAccess",
                    "PolicyArn": "arn:aws:iam::aws:policy/PowerUserAccess"
                },
                {
                    "PolicyName": "NetworkAdministrator",
                    "PolicyArn": "arn:aws:iam::aws:policy/job-function/NetworkAdministrator"
                }
            ],
            "inline_policies": [],
            "tags": []
        },
        {
            "name": "vibhor-s3-access",
            "arn": "arn:aws:iam::975049982984:role/vibhor-s3-access",
            "assume_role_policy": {
                "Version": "2012-10-17",
                "Statement": [
                    {
                        "Effect": "Allow",
                        "Principal": {
                            "Service": [
                                "rds.amazonaws.com",
                                "s3.amazonaws.com"
                            ]
                        },
                        "Action": "sts:AssumeRole"
                    }
                ]
            },
            "is_service_role": true,
            "attached_policies": [
                {
                    "PolicyName": "AmazonS3FullAccess",
                    "PolicyArn": "arn:aws:iam::aws:policy/AmazonS3FullAccess"
                }
            ],
            "inline_policies": [],
            "tags": []
        }
    ],
    "account_summary": {
        "SummaryMap": {
            "GroupPolicySizeQuota": 5120,
            "InstanceProfilesQuota": 1000,
            "Policies": 15,
            "GroupsPerUserQuota": 10,
            "InstanceProfiles": 5,
            "AttachedPoliciesPerUserQuota": 10,
            "Users": 3,
            "PoliciesQuota": 1500,
            "Providers": 2,
            "AccountMFAEnabled": 1,
            "AccessKeysPerUserQuota": 2,
            "AssumeRolePolicySizeQuota": 2048,
            "PolicyVersionsInUseQuota": 10000,
            "GlobalEndpointTokenVersion": 1,
            "VersionsPerPolicyQuota": 5,
            "AttachedPoliciesPerGroupQuota": 10,
            "PolicySizeQuota": 6144,
            "Groups": 3,
            "AccountSigningCertificatesPresent": 0,
            "UsersQuota": 5000,
            "ServerCertificatesQuota": 20,
            "MFADevices": 2,
            "UserPolicySizeQuota": 2048,
            "PolicyVersionsInUse": 62,
            "ServerCertificates": 0,
            "Roles": 46,
            "RolesQuota": 1000,
            "SigningCertificatesPerUserQuota": 2,
            "MFADevicesInUse": 2,
            "RolePolicySizeQuota": 10240,
            "AttachedPoliciesPerRoleQuota": 10,
            "AccountAccessKeysPresent": 0,
            "AccountPasswordPresent": 1,
            "GroupsQuota": 300
        },
        "ResponseMetadata": {
            "RequestId": "7afaa2d5-6a15-4473-adb8-bafc51f85608",
            "HTTPStatusCode": 200,
            "HTTPHeaders": {
                "date": "Tue, 01 Oct 2024 08:05:18 GMT",
                "x-amzn-requestid": "7afaa2d5-6a15-4473-adb8-bafc51f85608",
                "content-type": "text/xml",
                "content-length": "3485"
            },
            "RetryAttempts": 0
        }
    },
    "virtual_mfa_devices": [
        {
            "SerialNumber": "arn:aws:iam::975049982984:mfa/rmfx-dev",
            "User": {
                "UserId": "975049982984",
                "Arn": "arn:aws:iam::975049982984:root",
                "CreateDate": "2024-07-22T10:58:37+00:00",
                "PasswordLastUsed": "2024-08-24T17:36:20+00:00"
            },
            "EnableDate": "2024-08-20T01:18:04+00:00"
        },
        {
            "SerialNumber": "arn:aws:iam::975049982984:mfa/pixel",
            "User": {
                "Path": "/",
                "UserName": "vibhor",
                "UserId": "AIDA6GBMCAQEARS7BAWSQ",
                "Arn": "arn:aws:iam::975049982984:user/vibhor",
                "CreateDate": "2024-07-22T11:04:00+00:00",
                "PasswordLastUsed": "2024-08-30T13:02:23+00:00"
            },
            "EnableDate": "2024-07-23T10:02:09+00:00"
        }
    ],
    "credential_report": [
        {
            "user": "<root_account>",
            "arn": "arn:aws:iam::975049982984:root",
            "user_creation_time": "2024-07-22T10:58:37Z",
            "password_enabled": "true",
            "password_last_used": "2024-08-24T17:36:20Z",
            "password_last_changed": "2024-07-22T10:58:37Z",
            "password_next_rotation": "not_supported",
            "mfa_active": "true",
            "access_key_1_active": "false",
            "access_key_1_last_rotated": "N/A",
            "access_key_1_last_used_date": "N/A",
            "access_key_1_last_used_region": "N/A",
            "access_key_1_last_used_service": "N/A",
            "access_key_2_active": "false",
            "access_key_2_last_rotated": "N/A",
            "access_key_2_last_used_date": "N/A",
            "access_key_2_last_used_region": "N/A",
            "access_key_2_last_used_service": "N/A",
            "cert_1_active": "false",
            "cert_1_last_rotated": "N/A",
            "cert_2_active": "false",
            "cert_2_last_rotated": "N/A"
        },
        {
            "user": "iyersri",
            "arn": "arn:aws:iam::975049982984:user/iyersri",
            "user_creation_time": "2024-08-20T01:19:08Z",
            "password_enabled": "true",
            "password_last_used": "2024-08-28T03:14:02Z",
            "password_last_changed": "2024-08-20T01:19:08Z",
            "password_next_rotation": "N/A",
            "mfa_active": "false",
            "access_key_1_active": "false",
            "access_key_1_last_rotated": "N/A",
            "access_key_1_last_used_date": "N/A",
            "access_key_1_last_used_region": "N/A",
            "access_key_1_last_used_service": "N/A",
            "access_key_2_active": "false",
            "access_key_2_last_rotated": "N/A",
            "access_key_2_last_used_date": "N/A",
            "access_key_2_last_used_region": "N/A",
            "access_key_2_last_used_service": "N/A",
            "cert_1_active": "false",
            "cert_1_last_rotated": "N/A",
            "cert_2_active": "false",
            "cert_2_last_rotated": "N/A"
        },
        {
            "user": "service-account-backend",
            "arn": "arn:aws:iam::975049982984:user/service-account-backend",
            "user_creation_time": "2024-07-26T11:04:56Z",
            "password_enabled": "false",
            "password_last_used": "N/A",
            "password_last_changed": "N/A",
            "password_next_rotation": "N/A",
            "mfa_active": "false",
            "access_key_1_active": "true",
            "access_key_1_last_rotated": "2024-09-15T06:45:20Z",
            "access_key_1_last_used_date": "2024-09-15T11:10:00Z",
            "access_key_1_last_used_region": "us-east-1",
            "access_key_1_last_used_service": "iam",
            "access_key_2_active": "true",
            "access_key_2_last_rotated": "2024-09-26T13:09:27Z",
            "access_key_2_last_used_date": "2024-10-01T05:52:00Z",
            "access_key_2_last_used_region": "us-east-1",
            "access_key_2_last_used_service": "cognito-idp",
            "cert_1_active": "false",
            "cert_1_last_rotated": "N/A",
            "cert_2_active": "false",
            "cert_2_last_rotated": "N/A"
        },
        {
            "user": "vibhor",
            "arn": "arn:aws:iam::975049982984:user/vibhor",
            "user_creation_time": "2024-07-22T11:04:00Z",
            "password_enabled": "true",
            "password_last_used": "2024-08-30T13:02:23Z",
            "password_last_changed": "2024-07-22T11:26:12Z",
            "password_next_rotation": "N/A",
            "mfa_active": "true",
            "access_key_1_active": "true",
            "access_key_1_last_rotated": "2024-07-25T10:40:26Z",
            "access_key_1_last_used_date": "2024-07-25T10:52:00Z",
            "access_key_1_last_used_region": "ap-northeast-3",
            "access_key_1_last_used_service": "ec2",
            "access_key_2_active": "false",
            "access_key_2_last_rotated": "N/A",
            "access_key_2_last_used_date": "N/A",
            "access_key_2_last_used_region": "N/A",
            "access_key_2_last_used_service": "N/A",
            "cert_1_active": "false",
            "cert_1_last_rotated": "N/A",
            "cert_2_active": "false",
            "cert_2_last_rotated": "N/A"
        }
    ],
    "groups": [
        {
            "name": "billing",
            "arn": "arn:aws:iam::975049982984:group/billing",
            "attached_policies": [
                {
                    "PolicyName": "Billing",
                    "PolicyArn": "arn:aws:iam::aws:policy/job-function/Billing"
                },
                {
                    "PolicyName": "AWSBillingConductorFullAccess",
                    "PolicyArn": "arn:aws:iam::aws:policy/AWSBillingConductorFullAccess"
                },
                {
                    "PolicyName": "CostOptimizationHubAdminAccess",
                    "PolicyArn": "arn:aws:iam::aws:policy/CostOptimizationHubAdminAccess"
                },
                {
                    "PolicyName": "AWSBillingReadOnlyAccess",
                    "PolicyArn": "arn:aws:iam::aws:policy/AWSBillingReadOnlyAccess"
                },
                {
                    "PolicyName": "AWSCostAndUsageReportAutomationPolicy",
                    "PolicyArn": "arn:aws:iam::aws:policy/service-role/AWSCostAndUsageReportAutomationPolicy"
                }
            ],
            "inline_policies": [],
            "users": [
                {
                    "name": "vibhor",
                    "arn": "arn:aws:iam::975049982984:user/vibhor",
                    "mfa_devices": [],
                    "password_last_used": "2024-08-30T13:02:23+00:00",
                    "console_access": null,
                    "attached_policies": [],
                    "inline_policies": [],
                    "tags": []
                }
            ]
        },
        {
            "name": "GlobalAdmin",
            "arn": "arn:aws:iam::975049982984:group/GlobalAdmin",
            "attached_policies": [
                {
                    "PolicyName": "SystemAdministrator",
                    "PolicyArn": "arn:aws:iam::aws:policy/job-function/SystemAdministrator"
                },
                {
                    "PolicyName": "AdministratorAccess",
                    "PolicyArn": "arn:aws:iam::aws:policy/AdministratorAccess"
                },
                {
                    "PolicyName": "DataScientist",
                    "PolicyArn": "arn:aws:iam::aws:policy/job-function/DataScientist"
                },
                {
                    "PolicyName": "Billing",
                    "PolicyArn": "arn:aws:iam::aws:policy/job-function/Billing"
                },
                {
                    "PolicyName": "SupportUser",
                    "PolicyArn": "arn:aws:iam::aws:policy/job-function/SupportUser"
                },
                {
                    "PolicyName": "DatabaseAdministrator",
                    "PolicyArn": "arn:aws:iam::aws:policy/job-function/DatabaseAdministrator"
                },
                {
                    "PolicyName": "SecurityAudit",
                    "PolicyArn": "arn:aws:iam::aws:policy/SecurityAudit"
                },
                {
                    "PolicyName": "PowerUserAccess",
                    "PolicyArn": "arn:aws:iam::aws:policy/PowerUserAccess"
                },
                {
                    "PolicyName": "NetworkAdministrator",
                    "PolicyArn": "arn:aws:iam::aws:policy/job-function/NetworkAdministrator"
                }
            ],
            "inline_policies": [],
            "users": [
                {
                    "name": "vibhor",
                    "arn": "arn:aws:iam::975049982984:user/vibhor",
                    "mfa_devices": [],
                    "password_last_used": "2024-08-30T13:02:23+00:00",
                    "console_access": null,
                    "attached_policies": [],
                    "inline_policies": [],
                    "tags": []
                },
                {
                    "name": "iyersri",
                    "arn": "arn:aws:iam::975049982984:user/iyersri",
                    "mfa_devices": [],
                    "password_last_used": "2024-08-28T03:14:02+00:00",
                    "console_access": null,
                    "attached_policies": [],
                    "inline_policies": [],
                    "tags": []
                }
            ]
        },
        {
            "name": "Supertal",
            "arn": "arn:aws:iam::975049982984:group/Supertal",
            "attached_policies": [
                {
                    "PolicyName": "SystemAdministrator",
                    "PolicyArn": "arn:aws:iam::aws:policy/job-function/SystemAdministrator"
                },
                {
                    "PolicyName": "AmazonEC2FullAccess",
                    "PolicyArn": "arn:aws:iam::aws:policy/AmazonEC2FullAccess"
                },
                {
                    "PolicyName": "ReadOnlyAccess",
                    "PolicyArn": "arn:aws:iam::aws:policy/ReadOnlyAccess"
                },
                {
                    "PolicyName": "DataScientist",
                    "PolicyArn": "arn:aws:iam::aws:policy/job-function/DataScientist"
                },
                {
                    "PolicyName": "SupportUser",
                    "PolicyArn": "arn:aws:iam::aws:policy/job-function/SupportUser"
                },
                {
                    "PolicyName": "DatabaseAdministrator",
                    "PolicyArn": "arn:aws:iam::aws:policy/job-function/DatabaseAdministrator"
                },
                {
                    "PolicyName": "PowerUserAccess",
                    "PolicyArn": "arn:aws:iam::aws:policy/PowerUserAccess"
                },
                {
                    "PolicyName": "NetworkAdministrator",
                    "PolicyArn": "arn:aws:iam::aws:policy/job-function/NetworkAdministrator"
                },
                {
                    "PolicyName": "AmazonS3FullAccess",
                    "PolicyArn": "arn:aws:iam::aws:policy/AmazonS3FullAccess"
                },
                {
                    "PolicyName": "multiplePolicies",
                    "PolicyArn": "arn:aws:iam::975049982984:policy/multiplePolicies"
                }
            ],
            "inline_policies": [],
            "users": [
                {
                    "name": "vibhor",
                    "arn": "arn:aws:iam::975049982984:user/vibhor",
                    "mfa_devices": [],
                    "password_last_used": "2024-08-30T13:02:23+00:00",
                    "console_access": null,
                    "attached_policies": [],
                    "inline_policies": [],
                    "tags": []
                }
            ]
        }
    ],
    "password_policy": {
        "length": 8,
        "symbols": false,
        "numbers": false,
        "uppercase": false,
        "lowercase": false,
        "allow_change": true,
        "expiration": false,
        "max_age": null,
        "reuse_prevention": null,
        "hard_expiry": null
    },
    "entities_role_attached_to_support_policy": [
        {
            "RoleName": "AWSServiceRoleForSupport",
            "RoleId": "AROA6GBMCAQEMSE3J7VM4"
        }
    ],
    "entities_role_attached_to_securityaudit_policy": [],
    "policies": [
        {
            "name": "ElastiCacheServiceRolePolicy",
            "arn": "arn:aws:iam::aws:policy/aws-service-role/ElastiCacheServiceRolePolicy",
            "entity": "ANPAIML5LIBUZBVCSF7PI",
            "version_id": "v4",
            "type": "AWS",
            "attached": true,
            "document": {
                "Version": "2012-10-17",
                "Statement": [
                    {
                        "Sid": "ElastiCacheManagementActions",
                        "Effect": "Allow",
                        "Action": [
                            "ec2:AuthorizeSecurityGroupIngress",
                            "ec2:CreateNetworkInterface",
                            "ec2:CreateSecurityGroup",
                            "ec2:DeleteNetworkInterface",
                            "ec2:DeleteSecurityGroup",
                            "ec2:DescribeAvailabilityZones",
                            "ec2:DescribeNetworkInterfaces",
                            "ec2:DescribeSecurityGroups",
                            "ec2:DescribeSubnets",
                            "ec2:DescribeVpcs",
                            "ec2:DescribeVpcEndpoints",
                            "ec2:ModifyNetworkInterfaceAttribute",
                            "ec2:RevokeSecurityGroupIngress",
                            "cloudwatch:PutMetricData",
                            "outposts:GetOutpost",
                            "outposts:GetOutpostInstanceTypes",
                            "outposts:ListOutposts",
                            "outposts:ListSites"
                        ],
                        "Resource": "*"
                    },
                    {
                        "Sid": "CreateDeleteVPCEndpoints",
                        "Effect": "Allow",
                        "Action": [
                            "ec2:CreateVpcEndpoint",
                            "ec2:DeleteVpcEndpoints"
                        ],
                        "Resource": "arn:aws:ec2:*:*:vpc-endpoint/*",
                        "Condition": {
                            "StringLike": {
                                "ec2:VpceServiceName": "com.amazonaws.elasticache.serverless.*"
                            }
                        }
                    },
                    {
                        "Sid": "TagVPCEndpointsOnCreation",
                        "Effect": "Allow",
                        "Action": [
                            "ec2:CreateTags"
                        ],
                        "Resource": "arn:aws:ec2:*:*:vpc-endpoint/*",
                        "Condition": {
                            "StringEquals": {
                                "ec2:CreateAction": "CreateVpcEndpoint",
                                "aws:RequestTag/AmazonElastiCacheManaged": "true"
                            }
                        }
                    },
                    {
                        "Sid": "ModifyVpcEndpoints",
                        "Effect": "Allow",
                        "Action": [
                            "ec2:ModifyVpcEndpoint"
                        ],
                        "Resource": "arn:aws:ec2:*:*:vpc-endpoint/*",
                        "Condition": {
                            "StringEquals": {
                                "ec2:ResourceTag/AmazonElastiCacheManaged": "true"
                            }
                        }
                    },
                    {
                        "Sid": "AllowAccessToElastiCacheTaggedVpcEndpoints",
                        "Effect": "Allow",
                        "Action": [
                            "ec2:CreateVpcEndpoint",
                            "ec2:ModifyVpcEndpoint"
                        ],
                        "NotResource": "arn:aws:ec2:*:*:vpc-endpoint/*"
                    }
                ]
            },
            "tags": []
        },
        {
            "name": "SystemAdministrator",
            "arn": "arn:aws:iam::aws:policy/job-function/SystemAdministrator",
            "entity": "ANPAITJPEZXCYCBXANDSW",
            "version_id": "v6",
            "type": "AWS",
            "attached": true,
            "document": {
                "Statement": [
                    {
                        "Action": [
                            "acm:Describe*",
                            "acm:Get*",
                            "acm:List*",
                            "acm:Request*",
                            "acm:Resend*",
                            "autoscaling:*",
                            "cloudtrail:DescribeTrails",
                            "cloudtrail:GetTrailStatus",
                            "cloudtrail:ListPublicKeys",
                            "cloudtrail:ListTags",
                            "cloudtrail:LookupEvents",
                            "cloudtrail:StartLogging",
                            "cloudtrail:StopLogging",
                            "cloudwatch:*",
                            "codecommit:BatchGetRepositories",
                            "codecommit:CreateBranch",
                            "codecommit:CreateRepository",
                            "codecommit:Get*",
                            "codecommit:GitPull",
                            "codecommit:GitPush",
                            "codecommit:List*",
                            "codecommit:Put*",
                            "codecommit:Test*",
                            "codecommit:Update*",
                            "codedeploy:*",
                            "codepipeline:*",
                            "config:*",
                            "ds:*",
                            "ec2:Allocate*",
                            "ec2:AssignPrivateIpAddresses*",
                            "ec2:Associate*",
                            "ec2:Allocate*",
                            "ec2:AttachInternetGateway",
                            "ec2:AttachNetworkInterface",
                            "ec2:AttachVpnGateway",
                            "ec2:Bundle*",
                            "ec2:Cancel*",
                            "ec2:Copy*",
                            "ec2:CreateCustomerGateway",
                            "ec2:CreateDhcpOptions",
                            "ec2:CreateFlowLogs",
                            "ec2:CreateImage",
                            "ec2:CreateInstanceExportTask",
                            "ec2:CreateInternetGateway",
                            "ec2:CreateKeyPair",
                            "ec2:CreateLaunchTemplate",
                            "ec2:CreateLaunchTemplateVersion",
                            "ec2:CreateNatGateway",
                            "ec2:CreateNetworkInterface",
                            "ec2:CreatePlacementGroup",
                            "ec2:CreateReservedInstancesListing",
                            "ec2:CreateRoute",
                            "ec2:CreateRouteTable",
                            "ec2:CreateSecurityGroup",
                            "ec2:CreateSnapshot",
                            "ec2:CreateSpotDatafeedSubscription",
                            "ec2:CreateSubnet",
                            "ec2:CreateTags",
                            "ec2:CreateVolume",
                            "ec2:CreateVpc",
                            "ec2:CreateVpcEndpoint",
                            "ec2:CreateVpnConnection",
                            "ec2:CreateVpnConnectionRoute",
                            "ec2:CreateVpnGateway",
                            "ec2:DeleteFlowLogs",
                            "ec2:DeleteKeyPair",
                            "ec2:DeleteLaunchTemplate",
                            "ec2:DeleteLaunchTemplateVersions",
                            "ec2:DeleteNatGateway",
                            "ec2:DeleteNetworkInterface",
                            "ec2:DeletePlacementGroup",
                            "ec2:DeleteSnapshot",
                            "ec2:DeleteSpotDatafeedSubscription",
                            "ec2:DeleteSubnet",
                            "ec2:DeleteTags",
                            "ec2:DeleteVpc",
                            "ec2:DeleteVpcEndpoints",
                            "ec2:DeleteVpnConnection",
                            "ec2:DeleteVpnConnectionRoute",
                            "ec2:DeleteVpnGateway",
                            "ec2:DeregisterImage",
                            "ec2:Describe*",
                            "ec2:DetachInternetGateway",
                            "ec2:DetachNetworkInterface",
                            "ec2:DetachVpnGateway",
                            "ec2:DisableVgwRoutePropagation",
                            "ec2:DisableVpcClassicLinkDnsSupport",
                            "ec2:DisassociateAddress",
                            "ec2:DisassociateRouteTable",
                            "ec2:EnableVgwRoutePropagation",
                            "ec2:EnableVolumeIO",
                            "ec2:EnableVpcClassicLinkDnsSupport",
                            "ec2:GetConsoleOutput",
                            "ec2:GetHostReservationPurchasePreview",
                            "ec2:GetLaunchTemplateData",
                            "ec2:GetPasswordData",
                            "ec2:Import*",
                            "ec2:Modify*",
                            "ec2:MonitorInstances",
                            "ec2:MoveAddressToVpc",
                            "ec2:Purchase*",
                            "ec2:RegisterImage",
                            "ec2:Release*",
                            "ec2:Replace*",
                            "ec2:ReportInstanceStatus",
                            "ec2:Request*",
                            "ec2:Reset*",
                            "ec2:RestoreAddressToClassic",
                            "ec2:RunScheduledInstances",
                            "ec2:UnassignPrivateIpAddresses",
                            "ec2:UnmonitorInstances",
                            "ec2:UpdateSecurityGroupRuleDescriptionsEgress",
                            "ec2:UpdateSecurityGroupRuleDescriptionsIngress",
                            "elasticloadbalancing:*",
                            "events:*",
                            "iam:GetAccount*",
                            "iam:GetContextKeys*",
                            "iam:GetCredentialReport",
                            "iam:ListAccountAliases",
                            "iam:ListGroups",
                            "iam:ListOpenIDConnectProviders",
                            "iam:ListPolicies",
                            "iam:ListPoliciesGrantingServiceAccess",
                            "iam:ListRoles",
                            "iam:ListSAMLProviders",
                            "iam:ListServerCertificates",
                            "iam:Simulate*",
                            "iam:UpdateServerCertificate",
                            "iam:UpdateSigningCertificate",
                            "kinesis:ListStreams",
                            "kinesis:PutRecord",
                            "kms:CreateAlias",
                            "kms:CreateKey",
                            "kms:DeleteAlias",
                            "kms:Describe*",
                            "kms:GenerateRandom",
                            "kms:Get*",
                            "kms:List*",
                            "kms:Encrypt",
                            "kms:ReEncrypt*",
                            "lambda:Create*",
                            "lambda:Delete*",
                            "lambda:Get*",
                            "lambda:InvokeFunction",
                            "lambda:List*",
                            "lambda:PublishVersion",
                            "lambda:Update*",
                            "logs:*",
                            "rds:Describe*",
                            "rds:ListTagsForResource",
                            "route53:*",
                            "route53domains:*",
                            "ses:*",
                            "sns:*",
                            "sqs:*",
                            "trustedadvisor:*"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    },
                    {
                        "Action": [
                            "ec2:AcceptVpcPeeringConnection",
                            "ec2:AttachClassicLinkVpc",
                            "ec2:AttachVolume",
                            "ec2:AuthorizeSecurityGroupEgress",
                            "ec2:AuthorizeSecurityGroupIngress",
                            "ec2:CreateVpcPeeringConnection",
                            "ec2:DeleteCustomerGateway",
                            "ec2:DeleteDhcpOptions",
                            "ec2:DeleteInternetGateway",
                            "ec2:DeleteNetworkAcl*",
                            "ec2:DeleteRoute",
                            "ec2:DeleteRouteTable",
                            "ec2:DeleteSecurityGroup",
                            "ec2:DeleteVolume",
                            "ec2:DeleteVpcPeeringConnection",
                            "ec2:DetachClassicLinkVpc",
                            "ec2:DetachVolume",
                            "ec2:DisableVpcClassicLink",
                            "ec2:EnableVpcClassicLink",
                            "ec2:GetConsoleScreenshot",
                            "ec2:RebootInstances",
                            "ec2:RejectVpcPeeringConnection",
                            "ec2:RevokeSecurityGroupEgress",
                            "ec2:RevokeSecurityGroupIngress",
                            "ec2:RunInstances",
                            "ec2:StartInstances",
                            "ec2:StopInstances",
                            "ec2:TerminateInstances"
                        ],
                        "Effect": "Allow",
                        "Resource": [
                            "*"
                        ]
                    },
                    {
                        "Action": "s3:*",
                        "Effect": "Allow",
                        "Resource": [
                            "*"
                        ]
                    },
                    {
                        "Action": [
                            "iam:GetAccessKeyLastUsed",
                            "iam:GetGroup*",
                            "iam:GetInstanceProfile",
                            "iam:GetLoginProfile",
                            "iam:GetOpenIDConnectProvider",
                            "iam:GetPolicy*",
                            "iam:GetRole*",
                            "iam:GetSAMLProvider",
                            "iam:GetSSHPublicKey",
                            "iam:GetServerCertificate",
                            "iam:GetServiceLastAccessed*",
                            "iam:GetUser*",
                            "iam:ListAccessKeys",
                            "iam:ListAttached*",
                            "iam:ListEntitiesForPolicy",
                            "iam:ListGroupPolicies",
                            "iam:ListGroupsForUser",
                            "iam:ListInstanceProfiles*",
                            "iam:ListMFADevices",
                            "iam:ListPolicyVersions",
                            "iam:ListRolePolicies",
                            "iam:ListSSHPublicKeys",
                            "iam:ListSigningCertificates",
                            "iam:ListUserPolicies",
                            "iam:Upload*"
                        ],
                        "Effect": "Allow",
                        "Resource": [
                            "*"
                        ]
                    },
                    {
                        "Action": [
                            "iam:GetRole",
                            "iam:ListRoles",
                            "iam:PassRole"
                        ],
                        "Effect": "Allow",
                        "Resource": [
                            "arn:aws:iam::*:role/rds-monitoring-role",
                            "arn:aws:iam::*:role/ec2-sysadmin-*",
                            "arn:aws:iam::*:role/ecr-sysadmin-*",
                            "arn:aws:iam::*:role/lambda-sysadmin-*"
                        ]
                    }
                ],
                "Version": "2012-10-17"
            },
            "tags": []
        },
        {
            "name": "AWSSSOServiceRolePolicy",
            "arn": "arn:aws:iam::aws:policy/aws-service-role/AWSSSOServiceRolePolicy",
            "entity": "ANPAIJ52KSWOD4GI54XP2",
            "version_id": "v17",
            "type": "AWS",
            "attached": true,
            "document": {
                "Version": "2012-10-17",
                "Statement": [
                    {
                        "Sid": "IAMRoleProvisioningActions",
                        "Effect": "Allow",
                        "Action": [
                            "iam:AttachRolePolicy",
                            "iam:CreateRole",
                            "iam:PutRolePolicy",
                            "iam:UpdateRole",
                            "iam:UpdateRoleDescription",
                            "iam:UpdateAssumeRolePolicy",
                            "iam:PutRolePermissionsBoundary",
                            "iam:DeleteRolePermissionsBoundary"
                        ],
                        "Resource": [
                            "arn:aws:iam::*:role/aws-reserved/sso.amazonaws.com/*"
                        ],
                        "Condition": {
                            "StringNotEquals": {
                                "aws:PrincipalOrgMasterAccountId": "${aws:PrincipalAccount}"
                            }
                        }
                    },
                    {
                        "Sid": "IAMRoleReadActions",
                        "Effect": "Allow",
                        "Action": [
                            "iam:GetRole",
                            "iam:ListRoles"
                        ],
                        "Resource": [
                            "*"
                        ]
                    },
                    {
                        "Sid": "IAMRoleCleanupActions",
                        "Effect": "Allow",
                        "Action": [
                            "iam:DeleteRole",
                            "iam:DeleteRolePolicy",
                            "iam:DetachRolePolicy",
                            "iam:ListRolePolicies",
                            "iam:ListAttachedRolePolicies"
                        ],
                        "Resource": [
                            "arn:aws:iam::*:role/aws-reserved/sso.amazonaws.com/*"
                        ]
                    },
                    {
                        "Sid": "IAMSLRCleanupActions",
                        "Effect": "Allow",
                        "Action": [
                            "iam:DeleteServiceLinkedRole",
                            "iam:GetServiceLinkedRoleDeletionStatus",
                            "iam:DeleteRole",
                            "iam:GetRole"
                        ],
                        "Resource": [
                            "arn:aws:iam::*:role/aws-service-role/sso.amazonaws.com/AWSServiceRoleForSSO"
                        ]
                    },
                    {
                        "Sid": "IAMSAMLProviderCreationAction",
                        "Effect": "Allow",
                        "Action": [
                            "iam:CreateSAMLProvider"
                        ],
                        "Resource": [
                            "arn:aws:iam::*:saml-provider/AWSSSO_*"
                        ],
                        "Condition": {
                            "StringNotEquals": {
                                "aws:PrincipalOrgMasterAccountId": "${aws:PrincipalAccount}"
                            }
                        }
                    },
                    {
                        "Sid": "IAMSAMLProviderUpdateAction",
                        "Effect": "Allow",
                        "Action": [
                            "iam:UpdateSAMLProvider"
                        ],
                        "Resource": [
                            "arn:aws:iam::*:saml-provider/AWSSSO_*"
                        ]
                    },
                    {
                        "Sid": "IAMSAMLProviderCleanupActions",
                        "Effect": "Allow",
                        "Action": [
                            "iam:DeleteSAMLProvider",
                            "iam:GetSAMLProvider"
                        ],
                        "Resource": [
                            "arn:aws:iam::*:saml-provider/AWSSSO_*"
                        ]
                    },
                    {
                        "Effect": "Allow",
                        "Action": [
                            "organizations:DescribeAccount",
                            "organizations:DescribeOrganization",
                            "organizations:ListAccounts",
                            "organizations:ListDelegatedAdministrators",
                            "organizations:ListAWSServiceAccessForOrganization"
                        ],
                        "Resource": [
                            "*"
                        ]
                    },
                    {
                        "Sid": "AllowUnauthAppForDirectory",
                        "Effect": "Allow",
                        "Action": [
                            "ds:UnauthorizeApplication"
                        ],
                        "Resource": [
                            "*"
                        ]
                    },
                    {
                        "Sid": "AllowDescribeForDirectory",
                        "Effect": "Allow",
                        "Action": [
                            "ds:DescribeDirectories",
                            "ds:DescribeTrusts"
                        ],
                        "Resource": [
                            "*"
                        ]
                    },
                    {
                        "Sid": "AllowDescribeAndListOperationsOnIdentitySource",
                        "Effect": "Allow",
                        "Action": [
                            "identitystore:DescribeUser",
                            "identitystore:DescribeGroup",
                            "identitystore:ListGroups",
                            "identitystore:ListUsers"
                        ],
                        "Resource": [
                            "*"
                        ]
                    }
                ]
            },
            "tags": []
        },
        {
            "name": "AWSOrganizationsServiceTrustPolicy",
            "arn": "arn:aws:iam::aws:policy/aws-service-role/AWSOrganizationsServiceTrustPolicy",
            "entity": "ANPAIQH6ROMVVECFVRJPK",
            "version_id": "v2",
            "type": "AWS",
            "attached": true,
            "document": {
                "Version": "2012-10-17",
                "Statement": [
                    {
                        "Sid": "AllowDeletionOfServiceLinkedRoleForOrganizations",
                        "Effect": "Allow",
                        "Action": [
                            "iam:DeleteRole"
                        ],
                        "Resource": [
                            "arn:aws:iam::*:role/aws-service-role/organizations.amazonaws.com/*"
                        ]
                    },
                    {
                        "Sid": "AllowCreationOfServiceLinkedRoles",
                        "Effect": "Allow",
                        "Action": [
                            "iam:CreateServiceLinkedRole"
                        ],
                        "Resource": "*"
                    }
                ]
            },
            "tags": []
        },
        {
            "name": "AmazonRDSServiceRolePolicy",
            "arn": "arn:aws:iam::aws:policy/aws-service-role/AmazonRDSServiceRolePolicy",
            "entity": "ANPAIPEU5ZOBJWKWHUIBA",
            "version_id": "v14",
            "type": "AWS",
            "attached": true,
            "document": {
                "Version": "2012-10-17",
                "Statement": [
                    {
                        "Sid": "CrossRegionCommunication",
                        "Effect": "Allow",
                        "Action": [
                            "rds:CrossRegionCommunication"
                        ],
                        "Resource": "*"
                    },
                    {
                        "Sid": "Ec2",
                        "Effect": "Allow",
                        "Action": [
                            "ec2:AllocateAddress",
                            "ec2:AssociateAddress",
                            "ec2:AuthorizeSecurityGroupIngress",
                            "ec2:CreateCoipPoolPermission",
                            "ec2:CreateLocalGatewayRouteTablePermission",
                            "ec2:CreateNetworkInterface",
                            "ec2:CreateSecurityGroup",
                            "ec2:DeleteCoipPoolPermission",
                            "ec2:DeleteLocalGatewayRouteTablePermission",
                            "ec2:DeleteNetworkInterface",
                            "ec2:DeleteSecurityGroup",
                            "ec2:DescribeAddresses",
                            "ec2:DescribeAvailabilityZones",
                            "ec2:DescribeCoipPools",
                            "ec2:DescribeInternetGateways",
                            "ec2:DescribeLocalGatewayRouteTablePermissions",
                            "ec2:DescribeLocalGatewayRouteTables",
                            "ec2:DescribeLocalGatewayRouteTableVpcAssociations",
                            "ec2:DescribeLocalGateways",
                            "ec2:DescribeSecurityGroups",
                            "ec2:DescribeSubnets",
                            "ec2:DescribeVpcAttribute",
                            "ec2:DescribeVpcs",
                            "ec2:DisassociateAddress",
                            "ec2:ModifyNetworkInterfaceAttribute",
                            "ec2:ModifyVpcEndpoint",
                            "ec2:ReleaseAddress",
                            "ec2:RevokeSecurityGroupIngress",
                            "ec2:CreateVpcEndpoint",
                            "ec2:DescribeVpcEndpoints",
                            "ec2:DeleteVpcEndpoints",
                            "ec2:AssignPrivateIpAddresses",
                            "ec2:UnassignPrivateIpAddresses"
                        ],
                        "Resource": "*"
                    },
                    {
                        "Sid": "CloudWatchLogs",
                        "Effect": "Allow",
                        "Action": [
                            "logs:CreateLogGroup"
                        ],
                        "Resource": [
                            "arn:aws:logs:*:*:log-group:/aws/rds/*",
                            "arn:aws:logs:*:*:log-group:/aws/docdb/*",
                            "arn:aws:logs:*:*:log-group:/aws/neptune/*"
                        ]
                    },
                    {
                        "Sid": "CloudWatchStreams",
                        "Effect": "Allow",
                        "Action": [
                            "logs:CreateLogStream",
                            "logs:PutLogEvents",
                            "logs:DescribeLogStreams"
                        ],
                        "Resource": [
                            "arn:aws:logs:*:*:log-group:/aws/rds/*:log-stream:*",
                            "arn:aws:logs:*:*:log-group:/aws/docdb/*:log-stream:*",
                            "arn:aws:logs:*:*:log-group:/aws/neptune/*:log-stream:*"
                        ]
                    },
                    {
                        "Sid": "Kinesis",
                        "Effect": "Allow",
                        "Action": [
                            "kinesis:CreateStream",
                            "kinesis:PutRecord",
                            "kinesis:PutRecords",
                            "kinesis:DescribeStream",
                            "kinesis:SplitShard",
                            "kinesis:MergeShards",
                            "kinesis:DeleteStream",
                            "kinesis:UpdateShardCount"
                        ],
                        "Resource": [
                            "arn:aws:kinesis:*:*:stream/aws-rds-das-*"
                        ]
                    },
                    {
                        "Sid": "CloudWatch",
                        "Effect": "Allow",
                        "Action": [
                            "cloudwatch:PutMetricData"
                        ],
                        "Resource": "*",
                        "Condition": {
                            "StringEquals": {
                                "cloudwatch:namespace": [
                                    "AWS/DocDB",
                                    "AWS/Neptune",
                                    "AWS/RDS",
                                    "AWS/Usage"
                                ]
                            }
                        }
                    },
                    {
                        "Sid": "SecretsManagerPassword",
                        "Effect": "Allow",
                        "Action": [
                            "secretsmanager:GetRandomPassword"
                        ],
                        "Resource": "*"
                    },
                    {
                        "Sid": "SecretsManagerSecret",
                        "Effect": "Allow",
                        "Action": [
                            "secretsmanager:DeleteSecret",
                            "secretsmanager:DescribeSecret",
                            "secretsmanager:PutSecretValue",
                            "secretsmanager:RotateSecret",
                            "secretsmanager:UpdateSecret",
                            "secretsmanager:UpdateSecretVersionStage",
                            "secretsmanager:ListSecretVersionIds"
                        ],
                        "Resource": [
                            "arn:aws:secretsmanager:*:*:secret:rds!*"
                        ],
                        "Condition": {
                            "StringLike": {
                                "secretsmanager:ResourceTag/aws:secretsmanager:owningService": "rds"
                            }
                        }
                    },
                    {
                        "Sid": "SecretsManagerTags",
                        "Effect": "Allow",
                        "Action": "secretsmanager:TagResource",
                        "Resource": "arn:aws:secretsmanager:*:*:secret:rds!*",
                        "Condition": {
                            "ForAllValues:StringEquals": {
                                "aws:TagKeys": [
                                    "aws:rds:primaryDBInstanceArn",
                                    "aws:rds:primaryDBClusterArn"
                                ]
                            },
                            "StringLike": {
                                "secretsmanager:ResourceTag/aws:secretsmanager:owningService": "rds"
                            }
                        }
                    }
                ]
            },
            "tags": []
        },
        {
            "name": "AWSElasticLoadBalancingServiceRolePolicy",
            "arn": "arn:aws:iam::aws:policy/aws-service-role/AWSElasticLoadBalancingServiceRolePolicy",
            "entity": "ANPAIMHWGGSRHLOQUICJQ",
            "version_id": "v7",
            "type": "AWS",
            "attached": true,
            "document": {
                "Version": "2012-10-17",
                "Statement": [
                    {
                        "Effect": "Allow",
                        "Action": [
                            "ec2:DescribeAddresses",
                            "ec2:DescribeCoipPools",
                            "ec2:DescribeInstances",
                            "ec2:DescribeNetworkInterfaces",
                            "ec2:DescribeSubnets",
                            "ec2:DescribeSecurityGroups",
                            "ec2:DescribeVpcs",
                            "ec2:DescribeInternetGateways",
                            "ec2:DescribeAccountAttributes",
                            "ec2:DescribeClassicLinkInstances",
                            "ec2:DescribeVpcClassicLink",
                            "ec2:CreateSecurityGroup",
                            "ec2:CreateNetworkInterface",
                            "ec2:DeleteNetworkInterface",
                            "ec2:GetCoipPoolUsage",
                            "ec2:ModifyNetworkInterfaceAttribute",
                            "ec2:AllocateAddress",
                            "ec2:AuthorizeSecurityGroupIngress",
                            "ec2:AssociateAddress",
                            "ec2:DisassociateAddress",
                            "ec2:AttachNetworkInterface",
                            "ec2:DetachNetworkInterface",
                            "ec2:AssignPrivateIpAddresses",
                            "ec2:AssignIpv6Addresses",
                            "ec2:ReleaseAddress",
                            "ec2:UnassignIpv6Addresses",
                            "ec2:DescribeVpcPeeringConnections",
                            "logs:CreateLogDelivery",
                            "logs:GetLogDelivery",
                            "logs:UpdateLogDelivery",
                            "logs:DeleteLogDelivery",
                            "logs:ListLogDeliveries",
                            "outposts:GetOutpostInstanceTypes"
                        ],
                        "Resource": "*"
                    }
                ]
            },
            "tags": []
        },
        {
            "name": "AmazonEC2FullAccess",
            "arn": "arn:aws:iam::aws:policy/AmazonEC2FullAccess",
            "entity": "ANPAI3VAJF5ZCRZ7MCQE6",
            "version_id": "v5",
            "type": "AWS",
            "attached": true,
            "document": {
                "Version": "2012-10-17",
                "Statement": [
                    {
                        "Action": "ec2:*",
                        "Effect": "Allow",
                        "Resource": "*"
                    },
                    {
                        "Effect": "Allow",
                        "Action": "elasticloadbalancing:*",
                        "Resource": "*"
                    },
                    {
                        "Effect": "Allow",
                        "Action": "cloudwatch:*",
                        "Resource": "*"
                    },
                    {
                        "Effect": "Allow",
                        "Action": "autoscaling:*",
                        "Resource": "*"
                    },
                    {
                        "Effect": "Allow",
                        "Action": "iam:CreateServiceLinkedRole",
                        "Resource": "*",
                        "Condition": {
                            "StringEquals": {
                                "iam:AWSServiceName": [
                                    "autoscaling.amazonaws.com",
                                    "ec2scheduled.amazonaws.com",
                                    "elasticloadbalancing.amazonaws.com",
                                    "spot.amazonaws.com",
                                    "spotfleet.amazonaws.com",
                                    "transitgateway.amazonaws.com"
                                ]
                            }
                        }
                    }
                ]
            },
            "tags": []
        },
        {
            "name": "AWSTrustedAdvisorServiceRolePolicy",
            "arn": "arn:aws:iam::aws:policy/aws-service-role/AWSTrustedAdvisorServiceRolePolicy",
            "entity": "ANPAJH4QJ2WMHBOB47BUE",
            "version_id": "v13",
            "type": "AWS",
            "attached": true,
            "document": {
                "Version": "2012-10-17",
                "Statement": [
                    {
                        "Sid": "TrustedAdvisorServiceRolePermissions",
                        "Effect": "Allow",
                        "Action": [
                            "access-analyzer:ListAnalyzers",
                            "autoscaling:DescribeAccountLimits",
                            "autoscaling:DescribeAutoScalingGroups",
                            "autoscaling:DescribeLaunchConfigurations",
                            "ce:GetReservationPurchaseRecommendation",
                            "ce:GetSavingsPlansPurchaseRecommendation",
                            "cloudformation:DescribeAccountLimits",
                            "cloudformation:DescribeStacks",
                            "cloudformation:ListStacks",
                            "cloudfront:ListDistributions",
                            "cloudtrail:DescribeTrails",
                            "cloudtrail:GetTrailStatus",
                            "cloudtrail:GetTrail",
                            "cloudtrail:ListTrails",
                            "cloudtrail:GetEventSelectors",
                            "cloudwatch:GetMetricStatistics",
                            "cloudwatch:ListMetrics",
                            "dax:DescribeClusters",
                            "dynamodb:DescribeLimits",
                            "dynamodb:DescribeTable",
                            "dynamodb:ListTables",
                            "ec2:DescribeAddresses",
                            "ec2:DescribeReservedInstances",
                            "ec2:DescribeInstances",
                            "ec2:DescribeVpcs",
                            "ec2:DescribeInternetGateways",
                            "ec2:DescribeImages",
                            "ec2:DescribeNatGateways",
                            "ec2:DescribeVolumes",
                            "ec2:DescribeSecurityGroups",
                            "ec2:DescribeSubnets",
                            "ec2:DescribeRegions",
                            "ec2:DescribeReservedInstancesOfferings",
                            "ec2:DescribeRouteTables",
                            "ec2:DescribeSnapshots",
                            "ec2:DescribeVpcEndpoints",
                            "ec2:DescribeVpnConnections",
                            "ec2:DescribeVpnGateways",
                            "ec2:DescribeLaunchTemplateVersions",
                            "ec2:GetManagedPrefixListEntries",
                            "ecs:DescribeTaskDefinition",
                            "ecs:ListTaskDefinitions",
                            "elasticloadbalancing:DescribeAccountLimits",
                            "elasticloadbalancing:DescribeInstanceHealth",
                            "elasticloadbalancing:DescribeLoadBalancerAttributes",
                            "elasticloadbalancing:DescribeLoadBalancerPolicies",
                            "elasticloadbalancing:DescribeLoadBalancerPolicyTypes",
                            "elasticloadbalancing:DescribeLoadBalancers",
                            "elasticloadbalancing:DescribeTargetGroups",
                            "elasticloadbalancing:DescribeTargetHealth",
                            "iam:GenerateCredentialReport",
                            "iam:GetAccountPasswordPolicy",
                            "iam:GetAccountSummary",
                            "iam:GetCredentialReport",
                            "iam:GetServerCertificate",
                            "iam:ListServerCertificates",
                            "iam:ListSAMLProviders",
                            "kinesis:DescribeLimits",
                            "kafka:DescribeClusterV2",
                            "kafka:ListClustersV2",
                            "kafka:ListNodes",
                            "network-firewall:ListFirewalls",
                            "network-firewall:DescribeFirewall",
                            "outposts:ListAssets",
                            "outposts:GetOutpost",
                            "outposts:ListOutposts",
                            "rds:DescribeAccountAttributes",
                            "rds:DescribeDBClusters",
                            "rds:DescribeDBEngineVersions",
                            "rds:DescribeDBInstances",
                            "rds:DescribeDBParameterGroups",
                            "rds:DescribeDBParameters",
                            "rds:DescribeDBSecurityGroups",
                            "rds:DescribeDBSnapshots",
                            "rds:DescribeDBSubnetGroups",
                            "rds:DescribeEngineDefaultParameters",
                            "rds:DescribeEvents",
                            "rds:DescribeOptionGroupOptions",
                            "rds:DescribeOptionGroups",
                            "rds:DescribeOrderableDBInstanceOptions",
                            "rds:DescribeReservedDBInstances",
                            "rds:DescribeReservedDBInstancesOfferings",
                            "rds:ListTagsForResource",
                            "redshift:DescribeClusters",
                            "redshift:DescribeReservedNodeOfferings",
                            "redshift:DescribeReservedNodes",
                            "route53:GetAccountLimit",
                            "route53:GetHealthCheck",
                            "route53:GetHostedZone",
                            "route53:ListHealthChecks",
                            "route53:ListHostedZones",
                            "route53:ListHostedZonesByName",
                            "route53:ListResourceRecordSets",
                            "route53resolver:ListResolverEndpoints",
                            "route53resolver:ListResolverEndpointIpAddresses",
                            "s3:GetAccountPublicAccessBlock",
                            "s3:GetBucketAcl",
                            "s3:GetBucketPolicy",
                            "s3:GetBucketPolicyStatus",
                            "s3:GetBucketLocation",
                            "s3:GetBucketLogging",
                            "s3:GetBucketVersioning",
                            "s3:GetBucketPublicAccessBlock",
                            "s3:GetLifecycleConfiguration",
                            "s3:ListBucket",
                            "s3:ListAllMyBuckets",
                            "ses:GetSendQuota",
                            "sqs:GetQueueAttributes",
                            "sqs:ListQueues"
                        ],
                        "Resource": "*"
                    }
                ]
            },
            "tags": []
        },
        {
            "name": "AdministratorAccess",
            "arn": "arn:aws:iam::aws:policy/AdministratorAccess",
            "entity": "ANPAIWMBCKSKIEE64ZLYK",
            "version_id": "v1",
            "type": "AWS",
            "attached": true,
            "document": {
                "Version": "2012-10-17",
                "Statement": [
                    {
                        "Effect": "Allow",
                        "Action": "*",
                        "Resource": "*"
                    }
                ]
            },
            "tags": []
        },
        {
            "name": "AWSSupportServiceRolePolicy",
            "arn": "arn:aws:iam::aws:policy/aws-service-role/AWSSupportServiceRolePolicy",
            "entity": "ANPAJ7W6266ELXF5MISDS",
            "version_id": "v37",
            "type": "AWS",
            "attached": true,
            "document": {
                "Statement": [
                    {
                        "Sid": "AWSSupportAPIGatewayAccess",
                        "Action": [
                            "apigateway:GET"
                        ],
                        "Effect": "Allow",
                        "Resource": [
                            "arn:aws:apigateway:*::/account",
                            "arn:aws:apigateway:*::/apis",
                            "arn:aws:apigateway:*::/apis/*",
                            "arn:aws:apigateway:*::/apis/*/authorizers",
                            "arn:aws:apigateway:*::/apis/*/authorizers/*",
                            "arn:aws:apigateway:*::/apis/*/deployments",
                            "arn:aws:apigateway:*::/apis/*/deployments/*",
                            "arn:aws:apigateway:*::/apis/*/integrations",
                            "arn:aws:apigateway:*::/apis/*/integrations/*",
                            "arn:aws:apigateway:*::/apis/*/integrations/*/integrationresponses",
                            "arn:aws:apigateway:*::/apis/*/integrations/*/integrationresponses/*",
                            "arn:aws:apigateway:*::/apis/*/models",
                            "arn:aws:apigateway:*::/apis/*/models/*",
                            "arn:aws:apigateway:*::/apis/*/routes",
                            "arn:aws:apigateway:*::/apis/*/routes/*",
                            "arn:aws:apigateway:*::/apis/*/routes/*/routeresponses",
                            "arn:aws:apigateway:*::/apis/*/routes/*/routeresponses/*",
                            "arn:aws:apigateway:*::/apis/*/stages",
                            "arn:aws:apigateway:*::/apis/*/stages/*",
                            "arn:aws:apigateway:*::/clientcertificates",
                            "arn:aws:apigateway:*::/clientcertificates/*",
                            "arn:aws:apigateway:*::/domainnames",
                            "arn:aws:apigateway:*::/domainnames/*",
                            "arn:aws:apigateway:*::/domainnames/*/apimappings",
                            "arn:aws:apigateway:*::/domainnames/*/apimappings/*",
                            "arn:aws:apigateway:*::/domainnames/*/basepathmappings",
                            "arn:aws:apigateway:*::/domainnames/*/basepathmappings/*",
                            "arn:aws:apigateway:*::/restapis",
                            "arn:aws:apigateway:*::/restapis/*",
                            "arn:aws:apigateway:*::/restapis/*/authorizers",
                            "arn:aws:apigateway:*::/restapis/*/authorizers/*",
                            "arn:aws:apigateway:*::/restapis/*/deployments",
                            "arn:aws:apigateway:*::/restapis/*/deployments/*",
                            "arn:aws:apigateway:*::/restapis/*/models",
                            "arn:aws:apigateway:*::/restapis/*/models/*",
                            "arn:aws:apigateway:*::/restapis/*/models/*/default_template",
                            "arn:aws:apigateway:*::/restapis/*/resources",
                            "arn:aws:apigateway:*::/restapis/*/resources/*",
                            "arn:aws:apigateway:*::/restapis/*/resources/*/methods/*/integration/responses/*",
                            "arn:aws:apigateway:*::/restapis/*/resources/*/methods/*/responses/*",
                            "arn:aws:apigateway:*::/restapis/*/stages/*/sdks/*",
                            "arn:aws:apigateway:*::/restapis/*/resources/*/methods/*",
                            "arn:aws:apigateway:*::/restapis/*/resources/*/methods/*/integration",
                            "arn:aws:apigateway:*::/restapis/*/stages",
                            "arn:aws:apigateway:*::/restapis/*/stages/*",
                            "arn:aws:apigateway:*::/usageplans",
                            "arn:aws:apigateway:*::/usageplans/*",
                            "arn:aws:apigateway:*::/vpclinks",
                            "arn:aws:apigateway:*::/vpclinks/*"
                        ]
                    },
                    {
                        "Sid": "AWSSupportDeleteRoleAccess",
                        "Action": [
                            "iam:DeleteRole"
                        ],
                        "Effect": "Allow",
                        "Resource": [
                            "arn:aws:iam::*:role/aws-service-role/support.amazonaws.com/AWSServiceRoleForSupport"
                        ]
                    },
                    {
                        "Sid": "AWSSupportActions",
                        "Action": [
                            "access-analyzer:getAccessPreview",
                            "access-analyzer:getAnalyzedResource",
                            "access-analyzer:getAnalyzer",
                            "access-analyzer:getArchiveRule",
                            "access-analyzer:getFinding",
                            "access-analyzer:getGeneratedPolicy",
                            "access-analyzer:listAccessPreviewFindings",
                            "access-analyzer:listAccessPreviews",
                            "access-analyzer:listAnalyzedResources",
                            "access-analyzer:listAnalyzers",
                            "access-analyzer:listArchiveRules",
                            "access-analyzer:listFindings",
                            "access-analyzer:listPolicyGenerations",
                            "account:getRegionOptStatus",
                            "account:listRegions",
                            "acm-pca:describeCertificateAuthority",
                            "acm-pca:describeCertificateAuthorityAuditReport",
                            "acm-pca:getCertificate",
                            "acm-pca:getCertificateAuthorityCertificate",
                            "acm-pca:getCertificateAuthorityCsr",
                            "acm-pca:listCertificateAuthorities",
                            "acm-pca:listTags",
                            "acm:describeCertificate",
                            "acm:getAccountConfiguration",
                            "acm:getCertificate",
                            "acm:listCertificates",
                            "acm:listTagsForCertificate",
                            "airflow:getEnvironment",
                            "airflow:listEnvironments",
                            "airflow:listTagsForResource",
                            "amplify:getApp",
                            "amplify:getBackendEnvironment",
                            "amplify:getBranch",
                            "amplify:getDomainAssociation",
                            "amplify:getJob",
                            "amplify:getWebhook",
                            "amplify:listApps",
                            "amplify:listBackendEnvironments",
                            "amplify:listBranches",
                            "amplify:listDomainAssociations",
                            "amplify:listWebhooks",
                            "amplifyuibuilder:exportComponents",
                            "amplifyuibuilder:exportThemes",
                            "appflow:describeConnectorEntity",
                            "appflow:describeConnectorProfiles",
                            "appflow:describeConnectors",
                            "appflow:describeFlow",
                            "appflow:describeFlowExecutionRecords",
                            "appflow:listConnectorEntities",
                            "appflow:listFlows",
                            "application-autoscaling:describeScalableTargets",
                            "application-autoscaling:describeScalingActivities",
                            "application-autoscaling:describeScalingPolicies",
                            "application-autoscaling:describeScheduledActions",
                            "applicationinsights:describeApplication",
                            "applicationinsights:describeComponent",
                            "applicationinsights:describeComponentConfiguration",
                            "applicationinsights:describeComponentConfigurationRecommendation",
                            "applicationinsights:describeLogPattern",
                            "applicationinsights:describeObservation",
                            "applicationinsights:describeProblem",
                            "applicationinsights:describeProblemObservations",
                            "applicationinsights:listApplications",
                            "applicationinsights:listComponents",
                            "applicationinsights:listConfigurationHistory",
                            "applicationinsights:listLogPatterns",
                            "applicationinsights:listLogPatternSets",
                            "applicationinsights:listProblems",
                            "appmesh:describeGatewayRoute",
                            "appmesh:describeMesh",
                            "appmesh:describeRoute",
                            "appmesh:describeVirtualGateway",
                            "appmesh:describeVirtualNode",
                            "appmesh:describeVirtualRouter",
                            "appmesh:describeVirtualService",
                            "appmesh:listGatewayRoutes",
                            "appmesh:listMeshes",
                            "appmesh:listRoutes",
                            "appmesh:listTagsForResource",
                            "appmesh:listVirtualGateways",
                            "appmesh:listVirtualNodes",
                            "appmesh:listVirtualRouters",
                            "appmesh:listVirtualServices",
                            "apprunner:describeAutoScalingConfiguration",
                            "apprunner:describeCustomDomains",
                            "apprunner:describeOperation",
                            "apprunner:describeService",
                            "apprunner:listAutoScalingConfigurations",
                            "apprunner:listConnections",
                            "apprunner:listOperations",
                            "apprunner:listServices",
                            "apprunner:listTagsForResource",
                            "appstream:describeAppBlockBuilderAppBlockAssociations",
                            "appstream:describeAppBlockBuilders",
                            "appstream:describeAppBlocks",
                            "appstream:describeApplicationFleetAssociations",
                            "appstream:describeApplications",
                            "appstream:describeDirectoryConfigs",
                            "appstream:describeEntitlements",
                            "appstream:describeFleets",
                            "appstream:describeImageBuilders",
                            "appstream:describeImagePermissions",
                            "appstream:describeImages",
                            "appstream:describeSessions",
                            "appstream:describeStacks",
                            "appstream:describeUsageReportSubscriptions",
                            "appstream:describeUsers",
                            "appstream:describeUserStackAssociations",
                            "appstream:listAssociatedFleets",
                            "appstream:listAssociatedStacks",
                            "appstream:listEntitledApplications",
                            "appstream:listTagsForResource",
                            "appsync:getApiAssociation",
                            "appsync:getApiCache",
                            "appsync:getDomainName",
                            "appsync:getFunction",
                            "appsync:getGraphqlApi",
                            "appsync:getIntrospectionSchema",
                            "appsync:getResolver",
                            "appsync:getSchemaCreationStatus",
                            "appsync:getSourceApiAssociation",
                            "appsync:getType",
                            "appsync:listDataSources",
                            "appsync:listDomainNames",
                            "appsync:listFunctions",
                            "appsync:listGraphqlApis",
                            "appsync:listResolvers",
                            "appsync:listResolversByFunction",
                            "appsync:listSourceApiAssociations",
                            "appsync:listTypes",
                            "appsync:listTypesByAssociation",
                            "aps:describeAlertManagerDefinition",
                            "aps:describeRuleGroupsNamespace",
                            "aps:describeScraper",
                            "aps:describeWorkspace",
                            "aps:listRuleGroupsNamespaces",
                            "aps:listScrapers",
                            "aps:listWorkspaces",
                            "athena:batchGetNamedQuery",
                            "athena:batchGetQueryExecution",
                            "athena:getCalculationExecution",
                            "athena:getCalculationExecutionStatus",
                            "athena:getDataCatalog",
                            "athena:getNamedQuery",
                            "athena:getNotebookMetadata",
                            "athena:getQueryExecution",
                            "athena:getQueryRuntimeStatistics",
                            "athena:getSession",
                            "athena:getSessionStatus",
                            "athena:getWorkGroup",
                            "athena:listApplicationDPUSizes",
                            "athena:listCalculationExecutions",
                            "athena:listDataCatalogs",
                            "athena:listEngineVersions",
                            "athena:listExecutors",
                            "athena:listNamedQueries",
                            "athena:listNotebookMetadata",
                            "athena:listNotebookSessions",
                            "athena:listQueryExecutions",
                            "athena:listSessions",
                            "athena:listTagsForResource",
                            "athena:listWorkGroups",
                            "auditmanager:getAccountStatus",
                            "auditmanager:getDelegations",
                            "auditmanager:listAssessmentFrameworks",
                            "auditmanager:listAssessmentReports",
                            "auditmanager:listAssessments",
                            "auditmanager:listControls",
                            "auditmanager:listKeywordsForDataSource",
                            "auditmanager:listNotifications",
                            "autoscaling-plans:describeScalingPlanResources",
                            "autoscaling-plans:describeScalingPlans",
                            "autoscaling-plans:getScalingPlanResourceForecastData",
                            "autoscaling:describeAccountLimits",
                            "autoscaling:describeAdjustmentTypes",
                            "autoscaling:describeAutoScalingGroups",
                            "autoscaling:describeAutoScalingInstances",
                            "autoscaling:describeAutoScalingNotificationTypes",
                            "autoscaling:describeInstanceRefreshes",
                            "autoscaling:describeLaunchConfigurations",
                            "autoscaling:describeLifecycleHooks",
                            "autoscaling:describeLifecycleHookTypes",
                            "autoscaling:describeLoadBalancers",
                            "autoscaling:describeLoadBalancerTargetGroups",
                            "autoscaling:describeMetricCollectionTypes",
                            "autoscaling:describeNotificationConfigurations",
                            "autoscaling:describePolicies",
                            "autoscaling:describeScalingActivities",
                            "autoscaling:describeScalingProcessTypes",
                            "autoscaling:describeScheduledActions",
                            "autoscaling:describeTrafficSources",
                            "autoscaling:describeTags",
                            "autoscaling:describeTerminationPolicyTypes",
                            "autoscaling:describeWarmPool",
                            "backup:describeBackupJob",
                            "backup:describeBackupVault",
                            "backup:describeCopyJob",
                            "backup:describeFramework",
                            "backup:describeGlobalSettings",
                            "backup:describeProtectedResource",
                            "backup:describeRecoveryPoint",
                            "backup:describeRegionSettings",
                            "backup:describeReportJob",
                            "backup:describeReportPlan",
                            "backup:describeRestoreJob",
                            "backup:getBackupPlan",
                            "backup:getBackupPlanFromJSON",
                            "backup:getBackupPlanFromTemplate",
                            "backup:getBackupSelection",
                            "backup:getBackupVaultAccessPolicy",
                            "backup:getBackupVaultNotifications",
                            "backup:getLegalHold",
                            "backup:getRecoveryPointRestoreMetadata",
                            "backup:getRestoreJobMetadata",
                            "backup:getRestoreTestingInferredMetadata",
                            "backup:getRestoreTestingPlan",
                            "backup:getRestoreTestingSelection",
                            "backup:getSupportedResourceTypes",
                            "backup:listBackupJobs",
                            "backup:listBackupPlans",
                            "backup:listBackupPlanTemplates",
                            "backup:listBackupPlanVersions",
                            "backup:listBackupSelections",
                            "backup:listBackupVaults",
                            "backup:listCopyJobs",
                            "backup:listFrameworks",
                            "backup:listLegalHolds",
                            "backup:listProtectedResources",
                            "backup:listRecoveryPointsByBackupVault",
                            "backup:listRecoveryPointsByLegalHold",
                            "backup:listRecoveryPointsByResource",
                            "backup:listReportJobs",
                            "backup:listReportPlans",
                            "backup:listRestoreJobs",
                            "backup:listRestoreJobsByProtectedResource",
                            "backup:listRestoreTestingPlans",
                            "backup:listRestoreTestingSelections",
                            "backup:listTags",
                            "backup-gateway:getGateway",
                            "backup-gateway:getHypervisor",
                            "backup-gateway:getHypervisorPropertyMappings",
                            "backup-gateway:getVirtualMachine",
                            "backup-gateway:listGateways",
                            "backup-gateway:listHypervisors",
                            "backup-gateway:listVirtualMachines",
                            "batch:describeComputeEnvironments",
                            "batch:describeJobDefinitions",
                            "batch:describeJobQueues",
                            "batch:describeJobs",
                            "batch:listJobs",
                            "bedrock:getAgent",
                            "bedrock:getAgentActionGroup",
                            "bedrock:getAgentAlias",
                            "bedrock:getAgentKnowledgeBase",
                            "bedrock:getAgentVersion",
                            "bedrock:getCustomModel",
                            "bedrock:getDataSource",
                            "bedrock:getIngestionJob",
                            "bedrock:getKnowledgeBase",
                            "bedrock:getModelCustomizationJob",
                            "bedrock:getModelInvocationLoggingConfiguration",
                            "bedrock:listAgentActionGroups",
                            "bedrock:listAgentAliases",
                            "bedrock:listAgentKnowledgeBases",
                            "bedrock:listAgents",
                            "bedrock:listAgentVersions",
                            "bedrock:listCustomModels",
                            "bedrock:listDataSources",
                            "bedrock:listIngestionJobs",
                            "bedrock:listKnowledgeBases",
                            "bedrock:listModelCustomizationJobs",
                            "bedrock:listProvisionedModelThroughputs",
                            "braket:getDevice",
                            "braket:getQuantumTask",
                            "braket:searchDevices",
                            "braket:searchQuantumTasks",
                            "budgets:viewBudget",
                            "ce:getCostAndUsage",
                            "ce:getCostAndUsageWithResources",
                            "ce:getCostForecast",
                            "ce:getDimensionValues",
                            "ce:getReservationCoverage",
                            "ce:getReservationPurchaseRecommendation",
                            "ce:getReservationUtilization",
                            "ce:getRightsizingRecommendation",
                            "ce:getSavingsPlansCoverage",
                            "ce:getSavingsPlansPurchaseRecommendation",
                            "ce:getSavingsPlansUtilization",
                            "ce:getSavingsPlansUtilizationDetails",
                            "ce:getTags",
                            "chime:describeAppInstance",
                            "chime:getAttendee",
                            "chime:getGlobalSettings",
                            "chime:getMediaCapturePipeline",
                            "chime:getMediaPipeline",
                            "chime:getMeeting",
                            "chime:getProxySession",
                            "chime:getSipMediaApplication",
                            "chime:getSipRule",
                            "chime:getVoiceConnector",
                            "chime:getVoiceConnectorGroup",
                            "chime:getVoiceConnectorLoggingConfiguration",
                            "chime:listAppInstances",
                            "chime:listAttendees",
                            "chime:listChannelBans",
                            "chime:listChannels",
                            "chime:listChannelsModeratedByAppInstanceUser",
                            "chime:listMediaCapturePipelines",
                            "chime:listMediaPipelines",
                            "chime:listMeetings",
                            "chime:listSipMediaApplications",
                            "chime:listSipRules",
                            "chime:listVoiceConnectorGroups",
                            "chime:listVoiceConnectors",
                            "cleanrooms:batchGetCollaborationAnalysisTemplate",
                            "cleanrooms:batchGetSchema",
                            "cleanrooms:getAnalysisTemplate",
                            "cleanrooms:getCollaboration",
                            "cleanrooms:getCollaborationAnalysisTemplate",
                            "cleanrooms:getConfiguredTable",
                            "cleanrooms:getConfiguredTableAssociation",
                            "cleanrooms:getMembership",
                            "cleanrooms:getSchema",
                            "cleanrooms:listAnalysisTemplates",
                            "cleanrooms:listCollaborationAnalysisTemplates",
                            "cleanrooms:listCollaborations",
                            "cleanrooms:listConfiguredTableAssociations",
                            "cleanrooms:listConfiguredTables",
                            "cleanrooms:listMembers",
                            "cleanrooms:listMemberships",
                            "cleanrooms:listSchemas",
                            "cloud9:describeEnvironmentMemberships",
                            "cloud9:describeEnvironments",
                            "cloud9:listEnvironments",
                            "clouddirectory:getDirectory",
                            "clouddirectory:listDirectories",
                            "cloudformation:batchDescribeTypeConfigurations",
                            "cloudformation:describeAccountLimits",
                            "cloudformation:describeChangeSet",
                            "cloudformation:describeChangeSetHooks",
                            "cloudformation:describePublisher",
                            "cloudformation:describeStackEvents",
                            "cloudformation:describeStackInstance",
                            "cloudformation:describeStackResource",
                            "cloudformation:describeStackResources",
                            "cloudformation:describeStacks",
                            "cloudformation:describeStackSet",
                            "cloudformation:describeStackSetOperation",
                            "cloudformation:describeType",
                            "cloudformation:describeTypeRegistration",
                            "cloudformation:estimateTemplateCost",
                            "cloudformation:getStackPolicy",
                            "cloudformation:getTemplate",
                            "cloudformation:getTemplateSummary",
                            "cloudformation:listChangeSets",
                            "cloudformation:listExports",
                            "cloudformation:listImports",
                            "cloudformation:listStackInstances",
                            "cloudformation:listStackResources",
                            "cloudformation:listStacks",
                            "cloudformation:listStackSetOperationResults",
                            "cloudformation:listStackSetOperations",
                            "cloudformation:listStackSets",
                            "cloudformation:listTypeRegistrations",
                            "cloudformation:listTypes",
                            "cloudformation:listTypeVersions",
                            "cloudfront:describeFunction",
                            "cloudfront:getCachePolicy",
                            "cloudfront:getCachePolicyConfig",
                            "cloudfront:getCloudFrontOriginAccessIdentity",
                            "cloudfront:getCloudFrontOriginAccessIdentityConfig",
                            "cloudfront:getContinuousDeploymentPolicy",
                            "cloudfront:getContinuousDeploymentPolicyConfig",
                            "cloudfront:getDistribution",
                            "cloudfront:getDistributionConfig",
                            "cloudfront:getInvalidation",
                            "cloudfront:getKeyGroup",
                            "cloudfront:getKeyGroupConfig",
                            "cloudfront:getMonitoringSubscription",
                            "cloudfront:getOriginAccessControl",
                            "cloudfront:getOriginAccessControlConfig",
                            "cloudfront:getOriginRequestPolicy",
                            "cloudfront:getOriginRequestPolicyConfig",
                            "cloudfront:getPublicKey",
                            "cloudfront:getPublicKeyConfig",
                            "cloudfront:getRealtimeLogConfig",
                            "cloudfront:getResponseHeadersPolicy",
                            "cloudfront:getResponseHeadersPolicyConfig",
                            "cloudfront:getStreamingDistribution",
                            "cloudfront:getStreamingDistributionConfig",
                            "cloudfront:listCachePolicies",
                            "cloudfront:listCloudFrontOriginAccessIdentities",
                            "cloudfront:listContinuousDeploymentPolicies",
                            "cloudfront:listDistributions",
                            "cloudfront:listDistributionsByCachePolicyId",
                            "cloudfront:listDistributionsByKeyGroup",
                            "cloudfront:listDistributionsByOriginRequestPolicyId",
                            "cloudfront:listDistributionsByRealtimeLogConfig",
                            "cloudfront:listDistributionsByResponseHeadersPolicyId",
                            "cloudfront:listDistributionsByWebACLId",
                            "cloudfront:listFunctions",
                            "cloudfront:listInvalidations",
                            "cloudfront:listKeyGroups",
                            "cloudfront:listOriginAccessControls",
                            "cloudfront:listOriginRequestPolicies",
                            "cloudfront:listPublicKeys",
                            "cloudfront:listRealtimeLogConfigs",
                            "cloudfront:listResponseHeadersPolicies",
                            "cloudfront:listStreamingDistributions",
                            "cloudhsm:describeBackups",
                            "cloudhsm:describeClusters",
                            "cloudsearch:describeAnalysisSchemes",
                            "cloudsearch:describeAvailabilityOptions",
                            "cloudsearch:describeDomains",
                            "cloudsearch:describeExpressions",
                            "cloudsearch:describeIndexFields",
                            "cloudsearch:describeScalingParameters",
                            "cloudsearch:describeServiceAccessPolicies",
                            "cloudsearch:describeSuggesters",
                            "cloudsearch:listDomainNames",
                            "cloudtrail:describeTrails",
                            "cloudtrail:getEventSelectors",
                            "cloudtrail:getInsightSelectors",
                            "cloudtrail:getTrail",
                            "cloudtrail:getTrailStatus",
                            "cloudtrail:listPublicKeys",
                            "cloudtrail:listTags",
                            "cloudtrail:listTrails",
                            "cloudtrail:lookupEvents",
                            "cloudwatch:describeAlarmHistory",
                            "cloudwatch:describeAlarms",
                            "cloudwatch:describeAlarmsForMetric",
                            "cloudwatch:describeAnomalyDetectors",
                            "cloudwatch:describeInsightRules",
                            "cloudwatch:getDashboard",
                            "cloudwatch:getInsightRuleReport",
                            "cloudwatch:getMetricData",
                            "cloudwatch:getMetricStatistics",
                            "cloudwatch:getMetricStream",
                            "cloudwatch:listDashboards",
                            "cloudwatch:listManagedInsightRules",
                            "cloudwatch:listMetrics",
                            "cloudwatch:listMetricStreams",
                            "codeartifact:describeDomain",
                            "codeartifact:describePackageVersion",
                            "codeartifact:describeRepository",
                            "codeartifact:getDomainPermissionsPolicy",
                            "codeartifact:getRepositoryEndpoint",
                            "codeartifact:getRepositoryPermissionsPolicy",
                            "codeartifact:listDomains",
                            "codeartifact:listPackages",
                            "codeartifact:listPackageVersionAssets",
                            "codeartifact:listPackageVersions",
                            "codeartifact:listRepositories",
                            "codeartifact:listRepositoriesInDomain",
                            "codebuild:batchGetBuildBatches",
                            "codebuild:batchGetBuilds",
                            "codebuild:batchGetFleets",
                            "codebuild:batchGetProjects",
                            "codebuild:listBuildBatches",
                            "codebuild:listBuildBatchesForProject",
                            "codebuild:listBuilds",
                            "codebuild:listBuildsForProject",
                            "codebuild:listCuratedEnvironmentImages",
                            "codebuild:listFleets",
                            "codebuild:listProjects",
                            "codebuild:listSourceCredentials",
                            "codecommit:batchGetRepositories",
                            "codecommit:getBranch",
                            "codecommit:getRepository",
                            "codecommit:getRepositoryTriggers",
                            "codecommit:listBranches",
                            "codecommit:listRepositories",
                            "codeconnections:getConnection",
                            "codeconnections:getHost",
                            "codeconnections:getRepositoryLink",
                            "codeconnections:getRepositorySyncStatus",
                            "codeconnections:getResourceSyncStatus",
                            "codeconnections:getSyncBlockerSummary",
                            "codeconnections:getSyncConfiguration",
                            "codeconnections:listConnections",
                            "codeconnections:listHosts",
                            "codeconnections:listRepositoryLinks",
                            "codeconnections:listRepositorySyncDefinitions",
                            "codeconnections:listSyncConfigurations",
                            "codedeploy:batchGetApplicationRevisions",
                            "codedeploy:batchGetApplications",
                            "codedeploy:batchGetDeploymentGroups",
                            "codedeploy:batchGetDeploymentInstances",
                            "codedeploy:batchGetDeployments",
                            "codedeploy:batchGetDeploymentTargets",
                            "codedeploy:batchGetOnPremisesInstances",
                            "codedeploy:getApplication",
                            "codedeploy:getApplicationRevision",
                            "codedeploy:getDeployment",
                            "codedeploy:getDeploymentConfig",
                            "codedeploy:getDeploymentGroup",
                            "codedeploy:getDeploymentInstance",
                            "codedeploy:getDeploymentTarget",
                            "codedeploy:getOnPremisesInstance",
                            "codedeploy:listApplicationRevisions",
                            "codedeploy:listApplications",
                            "codedeploy:listDeploymentConfigs",
                            "codedeploy:listDeploymentGroups",
                            "codedeploy:listDeploymentInstances",
                            "codedeploy:listDeployments",
                            "codedeploy:listDeploymentTargets",
                            "codedeploy:listGitHubAccountTokenNames",
                            "codedeploy:listOnPremisesInstances",
                            "codepipeline:getJobDetails",
                            "codepipeline:getPipeline",
                            "codepipeline:getPipelineExecution",
                            "codepipeline:getPipelineState",
                            "codepipeline:listActionExecutions",
                            "codepipeline:listActionTypes",
                            "codepipeline:listPipelineExecutions",
                            "codepipeline:listPipelines",
                            "codepipeline:listWebhooks",
                            "codestar:describeProject",
                            "codestar:listProjects",
                            "codestar:listResources",
                            "codestar:listTeamMembers",
                            "codestar:listUserProfiles",
                            "codestar-connections:getConnection",
                            "codestar-connections:getHost",
                            "codestar-connections:listConnections",
                            "codestar-connections:listHosts",
                            "cognito-identity:describeIdentityPool",
                            "cognito-identity:getIdentityPoolRoles",
                            "cognito-identity:listIdentities",
                            "cognito-identity:listIdentityPools",
                            "cognito-idp:describeIdentityProvider",
                            "cognito-idp:describeResourceServer",
                            "cognito-idp:describeRiskConfiguration",
                            "cognito-idp:describeUserImportJob",
                            "cognito-idp:describeUserPool",
                            "cognito-idp:describeUserPoolClient",
                            "cognito-idp:describeUserPoolDomain",
                            "cognito-idp:getGroup",
                            "cognito-idp:getUICustomization",
                            "cognito-idp:getUserPoolMfaConfig",
                            "cognito-idp:listGroups",
                            "cognito-idp:listIdentityProviders",
                            "cognito-idp:listResourceServers",
                            "cognito-idp:listUserImportJobs",
                            "cognito-idp:listUserPoolClients",
                            "cognito-idp:listUserPools",
                            "cognito-sync:describeDataset",
                            "cognito-sync:describeIdentityPoolUsage",
                            "cognito-sync:describeIdentityUsage",
                            "cognito-sync:getCognitoEvents",
                            "cognito-sync:getIdentityPoolConfiguration",
                            "cognito-sync:listDatasets",
                            "cognito-sync:listIdentityPoolUsage",
                            "comprehend:describeDocumentClassificationJob",
                            "comprehend:describeDocumentClassifier",
                            "comprehend:describeDominantLanguageDetectionJob",
                            "comprehend:describeEndpoint",
                            "comprehend:describeEntitiesDetectionJob",
                            "comprehend:describeEntityRecognizer",
                            "comprehend:describeEventsDetectionJob",
                            "comprehend:describeFlywheel",
                            "comprehend:describeFlywheelIteration",
                            "comprehend:describeKeyPhrasesDetectionJob",
                            "comprehend:describePiiEntitiesDetectionJob",
                            "comprehend:describeSentimentDetectionJob",
                            "comprehend:describeTargetedSentimentDetectionJob",
                            "comprehend:describeTopicsDetectionJob",
                            "comprehend:listDocumentClassificationJobs",
                            "comprehend:listDocumentClassifiers",
                            "comprehend:listDominantLanguageDetectionJobs",
                            "comprehend:listEndpoints",
                            "comprehend:listEntitiesDetectionJobs",
                            "comprehend:listEntityRecognizers",
                            "comprehend:listEventsDetectionJobs",
                            "comprehend:listFlywheelIterationHistory",
                            "comprehend:listFlywheels",
                            "comprehend:listKeyPhrasesDetectionJobs",
                            "comprehend:listPiiEntitiesDetectionJobs",
                            "comprehend:listSentimentDetectionJobs",
                            "comprehend:listTargetedSentimentDetectionJobs",
                            "comprehend:listTopicsDetectionJobs",
                            "compute-optimizer:getAutoScalingGroupRecommendations",
                            "compute-optimizer:getEBSVolumeRecommendations",
                            "compute-optimizer:getEC2InstanceRecommendations",
                            "compute-optimizer:getEC2RecommendationProjectedMetrics",
                            "compute-optimizer:getECSServiceRecommendations",
                            "compute-optimizer:getECSServiceRecommendationProjectedMetrics",
                            "compute-optimizer:getEnrollmentStatus",
                            "compute-optimizer:getRecommendationSummaries",
                            "config:batchGetAggregateResourceConfig",
                            "config:batchGetResourceConfig",
                            "config:describeAggregateComplianceByConfigRules",
                            "config:describeAggregationAuthorizations",
                            "config:describeComplianceByConfigRule",
                            "config:describeComplianceByResource",
                            "config:describeConfigRuleEvaluationStatus",
                            "config:describeConfigRules",
                            "config:describeConfigurationAggregators",
                            "config:describeConfigurationAggregatorSourcesStatus",
                            "config:describeConfigurationRecorders",
                            "config:describeConfigurationRecorderStatus",
                            "config:describeConformancePackCompliance",
                            "config:describeConformancePacks",
                            "config:describeConformancePackStatus",
                            "config:describeDeliveryChannels",
                            "config:describeDeliveryChannelStatus",
                            "config:describeOrganizationConfigRules",
                            "config:describeOrganizationConfigRuleStatuses",
                            "config:describeOrganizationConformancePacks",
                            "config:describeOrganizationConformancePackStatuses",
                            "config:describePendingAggregationRequests",
                            "config:describeRemediationConfigurations",
                            "config:describeRemediationExceptions",
                            "config:describeRemediationExecutionStatus",
                            "config:describeRetentionConfigurations",
                            "config:getAggregateComplianceDetailsByConfigRule",
                            "config:getAggregateConfigRuleComplianceSummary",
                            "config:getAggregateDiscoveredResourceCounts",
                            "config:getAggregateResourceConfig",
                            "config:getComplianceDetailsByConfigRule",
                            "config:getComplianceDetailsByResource",
                            "config:getComplianceSummaryByConfigRule",
                            "config:getComplianceSummaryByResourceType",
                            "config:getConformancePackComplianceDetails",
                            "config:getConformancePackComplianceSummary",
                            "config:getDiscoveredResourceCounts",
                            "config:getOrganizationConfigRuleDetailedStatus",
                            "config:getOrganizationConformancePackDetailedStatus",
                            "config:getResourceConfigHistory",
                            "config:listAggregateDiscoveredResources",
                            "config:listDiscoveredResources",
                            "config:listTagsForResource",
                            "connect:describeContact",
                            "connect:describePhoneNumber",
                            "connect:describeQuickConnect",
                            "connect:describeUser",
                            "connect:getCurrentMetricData",
                            "connect:getMetricData",
                            "connect:listContactEvaluations",
                            "connect:listEvaluationForms",
                            "connect:listEvaluationFormVersions",
                            "connect:listPhoneNumbersV2",
                            "connect:listQuickConnects",
                            "connect:listRoutingProfiles",
                            "connect:listSecurityProfiles",
                            "connect:listUsers",
                            "connect:listViews",
                            "connect:listViewVersions",
                            "controltower:describeAccountFactoryConfig",
                            "controltower:describeCoreService",
                            "controltower:describeGuardrail",
                            "controltower:describeGuardrailForTarget",
                            "controltower:describeManagedAccount",
                            "controltower:describeSingleSignOn",
                            "controltower:getAvailableUpdates",
                            "controltower:getHomeRegion",
                            "controltower:getLandingZone",
                            "controltower:getLandingZoneStatus",
                            "controltower:listDirectoryGroups",
                            "controltower:listEnabledControls",
                            "controltower:listGuardrailsForTarget",
                            "controltower:listGuardrailViolations",
                            "controltower:listLandingZones",
                            "controltower:listManagedAccounts",
                            "controltower:listManagedAccountsForGuardrail",
                            "controltower:listManagedAccountsForParent",
                            "controltower:listManagedOrganizationalUnits",
                            "controltower:listManagedOrganizationalUnitsForGuardrail",
                            "cost-optimization-hub:getPreferences",
                            "cost-optimization-hub:getRecommendation",
                            "cost-optimization-hub:listEnrollmentStatuses",
                            "cost-optimization-hub:listRecommendations",
                            "cost-optimization-hub:listRecommendationSummaries",
                            "databrew:describeDataset",
                            "databrew:describeJob",
                            "databrew:describeProject",
                            "databrew:describeRecipe",
                            "databrew:listDatasets",
                            "databrew:listJobRuns",
                            "databrew:listJobs",
                            "databrew:listProjects",
                            "databrew:listRecipes",
                            "databrew:listRecipeVersions",
                            "databrew:listTagsForResource",
                            "datapipeline:describeObjects",
                            "datapipeline:describePipelines",
                            "datapipeline:getPipelineDefinition",
                            "datapipeline:listPipelines",
                            "datapipeline:queryObjects",
                            "datasync:describeAgent",
                            "datasync:describeLocationEfs",
                            "datasync:describeLocationFsxLustre",
                            "datasync:describeLocationFsxOpenZfs",
                            "datasync:describeLocationFsxWindows",
                            "datasync:describeLocationHdfs",
                            "datasync:describeLocationNfs",
                            "datasync:describeLocationObjectStorage",
                            "datasync:describeLocationS3",
                            "datasync:describeLocationSmb",
                            "datasync:describeTask",
                            "datasync:describeTaskExecution",
                            "datasync:listAgents",
                            "datasync:listLocations",
                            "datasync:listTaskExecutions",
                            "datasync:listTasks",
                            "dax:describeClusters",
                            "dax:describeDefaultParameters",
                            "dax:describeEvents",
                            "dax:describeParameterGroups",
                            "dax:describeParameters",
                            "dax:describeSubnetGroups",
                            "deadline:listAvailableMeteredProducts",
                            "deadline:listBudgets",
                            "deadline:listFarmMembers",
                            "deadline:listFarms",
                            "deadline:listFleetMembers",
                            "deadline:listFleets",
                            "deadline:listJobMembers",
                            "deadline:listJobs",
                            "deadline:listLicenseEndpoints",
                            "deadline:listMeteredProducts",
                            "deadline:listMonitors",
                            "deadline:listQueueEnvironments",
                            "deadline:listQueueFleetAssociations",
                            "deadline:listQueueMembers",
                            "deadline:listQueues",
                            "deadline:listStorageProfiles",
                            "deadline:listWorkers",
                            "detective:getMembers",
                            "detective:listGraphs",
                            "detective:listInvitations",
                            "detective:listMembers",
                            "devicefarm:getAccountSettings",
                            "devicefarm:getDevice",
                            "devicefarm:getDevicePool",
                            "devicefarm:getDevicePoolCompatibility",
                            "devicefarm:getJob",
                            "devicefarm:getProject",
                            "devicefarm:getRemoteAccessSession",
                            "devicefarm:getRun",
                            "devicefarm:getSuite",
                            "devicefarm:getTest",
                            "devicefarm:getTestGridProject",
                            "devicefarm:getTestGridSession",
                            "devicefarm:getUpload",
                            "devicefarm:listArtifacts",
                            "devicefarm:listDevicePools",
                            "devicefarm:listDevices",
                            "devicefarm:listJobs",
                            "devicefarm:listProjects",
                            "devicefarm:listRemoteAccessSessions",
                            "devicefarm:listRuns",
                            "devicefarm:listSamples",
                            "devicefarm:listSuites",
                            "devicefarm:listTestGridProjects",
                            "devicefarm:listTestGridSessionActions",
                            "devicefarm:listTestGridSessionArtifacts",
                            "devicefarm:listTestGridSessions",
                            "devicefarm:listTests",
                            "devicefarm:listUniqueProblems",
                            "devicefarm:listUploads",
                            "directconnect:describeConnectionLoa",
                            "directconnect:describeConnections",
                            "directconnect:describeConnectionsOnInterconnect",
                            "directconnect:describeCustomerMetadata",
                            "directconnect:describeDirectConnectGatewayAssociationProposals",
                            "directconnect:describeDirectConnectGatewayAssociations",
                            "directconnect:describeDirectConnectGatewayAttachments",
                            "directconnect:describeDirectConnectGateways",
                            "directconnect:describeHostedConnections",
                            "directconnect:describeInterconnectLoa",
                            "directconnect:describeInterconnects",
                            "directconnect:describeLags",
                            "directconnect:describeLoa",
                            "directconnect:describeLocations",
                            "directconnect:describeRouterConfiguration",
                            "directconnect:describeVirtualGateways",
                            "directconnect:describeVirtualInterfaces",
                            "dlm:getLifecyclePolicies",
                            "dlm:getLifecyclePolicy",
                            "dms:describeAccountAttributes",
                            "dms:describeApplicableIndividualAssessments",
                            "dms:describeConnections",
                            "dms:describeEndpoints",
                            "dms:describeEndpointSettings",
                            "dms:describeEndpointTypes",
                            "dms:describeEventCategories",
                            "dms:describeEvents",
                            "dms:describeEventSubscriptions",
                            "dms:describeFleetAdvisorCollectors",
                            "dms:describeFleetAdvisorDatabases",
                            "dms:describeFleetAdvisorLsaAnalysis",
                            "dms:describeFleetAdvisorSchemaObjectSummary",
                            "dms:describeFleetAdvisorSchemas",
                            "dms:describeOrderableReplicationInstances",
                            "dms:describePendingMaintenanceActions",
                            "dms:describeRefreshSchemasStatus",
                            "dms:describeReplicationInstances",
                            "dms:describeReplicationInstanceTaskLogs",
                            "dms:describeReplicationSubnetGroups",
                            "dms:describeReplicationTaskAssessmentResults",
                            "dms:describeReplicationTaskAssessmentRuns",
                            "dms:describeReplicationTaskIndividualAssessments",
                            "dms:describeReplicationTasks",
                            "dms:describeSchemas",
                            "dms:describeTableStatistics",
                            "docdb-elastic:getCluster",
                            "docdb-elastic:getClusterSnapshot",
                            "docdb-elastic:listClusters",
                            "docdb-elastic:listClusterSnapshots",
                            "drs:describeJobLogItems",
                            "drs:describeJobs",
                            "drs:describeLaunchConfigurationTemplates",
                            "drs:describeRecoveryInstances",
                            "drs:describeRecoverySnapshots",
                            "drs:describeReplicationConfigurationTemplates",
                            "drs:describeSourceNetworks",
                            "drs:describeSourceServers",
                            "drs:getLaunchConfiguration",
                            "drs:getReplicationConfiguration",
                            "drs:listExtensibleSourceServers",
                            "drs:listLaunchActions",
                            "drs:listStagingAccounts",
                            "ds:describeClientAuthenticationSettings",
                            "ds:describeConditionalForwarders",
                            "ds:describeDirectories",
                            "ds:describeDomainControllers",
                            "ds:describeEventTopics",
                            "ds:describeLDAPSSettings",
                            "ds:describeSharedDirectories",
                            "ds:describeSnapshots",
                            "ds:describeTrusts",
                            "ds:getDirectoryLimits",
                            "ds:getSnapshotLimits",
                            "ds:listIpRoutes",
                            "ds:listSchemaExtensions",
                            "ds:listTagsForResource",
                            "dynamodb:describeBackup",
                            "dynamodb:describeContinuousBackups",
                            "dynamodb:describeContributorInsights",
                            "dynamodb:describeExport",
                            "dynamodb:describeGlobalTable",
                            "dynamodb:describeImport",
                            "dynamodb:describeKinesisStreamingDestination",
                            "dynamodb:describeLimits",
                            "dynamodb:describeStream",
                            "dynamodb:describeTable",
                            "dynamodb:describeTimeToLive",
                            "dynamodb:listBackups",
                            "dynamodb:listContributorInsights",
                            "dynamodb:listExports",
                            "dynamodb:listGlobalTables",
                            "dynamodb:listImports",
                            "dynamodb:listStreams",
                            "dynamodb:listTables",
                            "dynamodb:listTagsOfResource",
                            "ec2:describeAccountAttributes",
                            "ec2:describeAddresses",
                            "ec2:describeAddressesAttribute",
                            "ec2:describeAddressTransfers",
                            "ec2:describeAggregateIdFormat",
                            "ec2:describeAvailabilityZones",
                            "ec2:describeBundleTasks",
                            "ec2:describeByoipCidrs",
                            "ec2:describeCapacityReservationFleets",
                            "ec2:describeCapacityReservations",
                            "ec2:describeCarrierGateways",
                            "ec2:describeClassicLinkInstances",
                            "ec2:describeClientVpnAuthorizationRules",
                            "ec2:describeClientVpnConnections",
                            "ec2:describeClientVpnEndpoints",
                            "ec2:describeClientVpnRoutes",
                            "ec2:describeClientVpnTargetNetworks",
                            "ec2:describeCoipPools",
                            "ec2:describeConversionTasks",
                            "ec2:describeCustomerGateways",
                            "ec2:describeDhcpOptions",
                            "ec2:describeEgressOnlyInternetGateways",
                            "ec2:describeExportImageTasks",
                            "ec2:describeExportTasks",
                            "ec2:describeFastLaunchImages",
                            "ec2:describeFastSnapshotRestores",
                            "ec2:describeFleetHistory",
                            "ec2:describeFleetInstances",
                            "ec2:describeFleets",
                            "ec2:describeFlowLogs",
                            "ec2:describeFpgaImageAttribute",
                            "ec2:describeFpgaImages",
                            "ec2:describeHostReservationOfferings",
                            "ec2:describeHostReservations",
                            "ec2:describeHosts",
                            "ec2:describeIamInstanceProfileAssociations",
                            "ec2:describeIdentityIdFormat",
                            "ec2:describeIdFormat",
                            "ec2:describeImageAttribute",
                            "ec2:describeImages",
                            "ec2:describeImportImageTasks",
                            "ec2:describeImportSnapshotTasks",
                            "ec2:describeInstanceAttribute",
                            "ec2:describeInstanceCreditSpecifications",
                            "ec2:describeInstanceEventNotificationAttributes",
                            "ec2:describeInstanceEventWindows",
                            "ec2:describeInstances",
                            "ec2:describeInstanceStatus",
                            "ec2:describeInstanceTypeOfferings",
                            "ec2:describeInstanceTypes",
                            "ec2:describeInternetGateways",
                            "ec2:describeIpamPools",
                            "ec2:describeIpams",
                            "ec2:describeIpamScopes",
                            "ec2:describeIpv6Pools",
                            "ec2:describeKeyPairs",
                            "ec2:describeLaunchTemplates",
                            "ec2:describeLaunchTemplateVersions",
                            "ec2:describeLocalGatewayRouteTables",
                            "ec2:describeLocalGatewayRouteTableVirtualInterfaceGroupAssociations",
                            "ec2:describeLocalGatewayRouteTableVpcAssociations",
                            "ec2:describeLocalGateways",
                            "ec2:describeLocalGatewayVirtualInterfaceGroups",
                            "ec2:describeLocalGatewayVirtualInterfaces",
                            "ec2:describeManagedPrefixLists",
                            "ec2:describeMovingAddresses",
                            "ec2:describeNatGateways",
                            "ec2:describeNetworkAcls",
                            "ec2:describeNetworkInterfaceAttribute",
                            "ec2:describeNetworkInterfaces",
                            "ec2:describePlacementGroups",
                            "ec2:describePrefixLists",
                            "ec2:describePrincipalIdFormat",
                            "ec2:describePublicIpv4Pools",
                            "ec2:describeRegions",
                            "ec2:describeReservedInstances",
                            "ec2:describeReservedInstancesListings",
                            "ec2:describeReservedInstancesModifications",
                            "ec2:describeReservedInstancesOfferings",
                            "ec2:describeRouteTables",
                            "ec2:describeScheduledInstanceAvailability",
                            "ec2:describeScheduledInstances",
                            "ec2:describeSecurityGroupReferences",
                            "ec2:describeSecurityGroupRules",
                            "ec2:describeSecurityGroups",
                            "ec2:describeSnapshotAttribute",
                            "ec2:describeSnapshots",
                            "ec2:describeSnapshotTierStatus",
                            "ec2:describeSpotDatafeedSubscription",
                            "ec2:describeSpotFleetInstances",
                            "ec2:describeSpotFleetRequestHistory",
                            "ec2:describeSpotFleetRequests",
                            "ec2:describeSpotInstanceRequests",
                            "ec2:describeSpotPriceHistory",
                            "ec2:describeStaleSecurityGroups",
                            "ec2:describeStoreImageTasks",
                            "ec2:describeSubnets",
                            "ec2:describeTags",
                            "ec2:describeTrafficMirrorFilters",
                            "ec2:describeTrafficMirrorSessions",
                            "ec2:describeTrafficMirrorTargets",
                            "ec2:describeTransitGatewayAttachments",
                            "ec2:describeTransitGatewayConnectPeers",
                            "ec2:describeTransitGatewayMulticastDomains",
                            "ec2:describeTransitGatewayPeeringAttachments",
                            "ec2:describeTransitGatewayPolicyTables",
                            "ec2:describeTransitGatewayRouteTableAnnouncements",
                            "ec2:describeTransitGatewayRouteTables",
                            "ec2:describeTransitGateways",
                            "ec2:describeTransitGatewayVpcAttachments",
                            "ec2:describeVerifiedAccessEndpoints",
                            "ec2:describeVerifiedAccessGroups",
                            "ec2:describeVerifiedAccessInstances",
                            "ec2:describeVerifiedAccessTrustProviders",
                            "ec2:describeVolumeAttribute",
                            "ec2:describeVolumes",
                            "ec2:describeVolumesModifications",
                            "ec2:describeVolumeStatus",
                            "ec2:describeVpcAttribute",
                            "ec2:describeVpcClassicLink",
                            "ec2:describeVpcClassicLinkDnsSupport",
                            "ec2:describeVpcEndpointConnectionNotifications",
                            "ec2:describeVpcEndpointConnections",
                            "ec2:describeVpcEndpoints",
                            "ec2:describeVpcEndpointServiceConfigurations",
                            "ec2:describeVpcEndpointServicePermissions",
                            "ec2:describeVpcEndpointServices",
                            "ec2:describeVpcPeeringConnections",
                            "ec2:describeVpcs",
                            "ec2:describeVpnConnections",
                            "ec2:describeVpnGateways",
                            "ec2:getAssociatedIpv6PoolCidrs",
                            "ec2:getCapacityReservationUsage",
                            "ec2:getSubnetCidrReservations",
                            "ec2:getCoipPoolUsage",
                            "ec2:getConsoleOutput",
                            "ec2:getConsoleScreenshot",
                            "ec2:getDefaultCreditSpecification",
                            "ec2:getEbsDefaultKmsKeyId",
                            "ec2:getEbsEncryptionByDefault",
                            "ec2:getGroupsForCapacityReservation",
                            "ec2:getHostReservationPurchasePreview",
                            "ec2:getInstanceTypesFromInstanceRequirements",
                            "ec2:getIpamAddressHistory",
                            "ec2:getIpamPoolAllocations",
                            "ec2:getIpamPoolCidrs",
                            "ec2:getIpamResourceCidrs",
                            "ec2:getLaunchTemplateData",
                            "ec2:getManagedPrefixListAssociations",
                            "ec2:getManagedPrefixListEntries",
                            "ec2:getReservedInstancesExchangeQuote",
                            "ec2:getSerialConsoleAccessStatus",
                            "ec2:getSpotPlacementScores",
                            "ec2:getTransitGatewayMulticastDomainAssociations",
                            "ec2:getTransitGatewayPrefixListReferences",
                            "ec2:getVerifiedAccessEndpointPolicy",
                            "ec2:getVerifiedAccessGroupPolicy",
                            "ec2:listImagesInRecycleBin",
                            "ec2:listSnapshotsInRecycleBin",
                            "ec2:searchLocalGatewayRoutes",
                            "ec2:searchTransitGatewayMulticastGroups",
                            "ec2:searchTransitGatewayRoutes",
                            "ecr-public:describeImages",
                            "ecr-public:describeImageTags",
                            "ecr-public:describeRegistries",
                            "ecr-public:describeRepositories",
                            "ecr-public:getRegistryCatalogData",
                            "ecr-public:getRepositoryCatalogData",
                            "ecr-public:getRepositoryPolicy",
                            "ecr-public:listTagsForResource",
                            "ecr:batchCheckLayerAvailability",
                            "ecr:batchGetRepositoryScanningConfiguration",
                            "ecr:describeImages",
                            "ecr:describeImageReplicationStatus",
                            "ecr:describeImageScanFindings",
                            "ecr:describePullThroughCacheRules",
                            "ecr:describeRegistry",
                            "ecr:describeRepositories",
                            "ecr:getLifecyclePolicy",
                            "ecr:getLifecyclePolicyPreview",
                            "ecr:getRegistryPolicy",
                            "ecr:getRegistryScanningConfiguration",
                            "ecr:getRepositoryPolicy",
                            "ecr:listImages",
                            "ecr:listTagsForResource",
                            "ecs:describeCapacityProviders",
                            "ecs:describeClusters",
                            "ecs:describeContainerInstances",
                            "ecs:describeServices",
                            "ecs:describeTaskDefinition",
                            "ecs:describeTasks",
                            "ecs:describeTaskSets",
                            "ecs:getTaskProtection",
                            "ecs:listAccountSettings",
                            "ecs:listAttributes",
                            "ecs:listClusters",
                            "ecs:listContainerInstances",
                            "ecs:listServices",
                            "ecs:listServicesByNamespace",
                            "ecs:listTagsForResource",
                            "ecs:listTaskDefinitionFamilies",
                            "ecs:listTaskDefinitions",
                            "ecs:listTasks",
                            "eks:describeAccessEntry",
                            "eks:describeAddon",
                            "eks:describeAddonConfiguration",
                            "eks:describeAddonVersions",
                            "eks:describeCluster",
                            "eks:describeEksAnywhereSubscription",
                            "eks:describeFargateProfile",
                            "eks:describeIdentityProviderConfig",
                            "eks:describeNodegroup",
                            "eks:describePodIdentityAssociation",
                            "eks:listPodIdentityAssociations",
                            "eks:describeUpdate",
                            "eks:listAccessEntries",
                            "eks:listAccessPolicies",
                            "eks:listAddons",
                            "eks:listAssociatedAccessPolicies",
                            "eks:listClusters",
                            "eks:listEksAnywhereSubscriptions",
                            "eks:listFargateProfiles",
                            "eks:listIdentityProviderConfigs",
                            "eks:listNodegroups",
                            "eks:listUpdates",
                            "elasticache:describeCacheClusters",
                            "elasticache:describeCacheEngineVersions",
                            "elasticache:describeCacheParameterGroups",
                            "elasticache:describeCacheParameters",
                            "elasticache:describeCacheSecurityGroups",
                            "elasticache:describeCacheSubnetGroups",
                            "elasticache:describeEngineDefaultParameters",
                            "elasticache:describeEvents",
                            "elasticache:describeGlobalReplicationGroups",
                            "elasticache:describeReplicationGroups",
                            "elasticache:describeReservedCacheNodes",
                            "elasticache:describeReservedCacheNodesOfferings",
                            "elasticache:describeServerlessCaches",
                            "elasticache:describeServerlessCacheSnapshots",
                            "elasticache:describeServiceUpdates",
                            "elasticache:describeSnapshots",
                            "elasticache:describeUpdateActions",
                            "elasticache:describeUserGroups",
                            "elasticache:describeUsers",
                            "elasticache:listAllowedNodeTypeModifications",
                            "elasticache:listTagsForResource",
                            "elasticbeanstalk:checkDNSAvailability",
                            "elasticbeanstalk:describeAccountAttributes",
                            "elasticbeanstalk:describeApplicationVersions",
                            "elasticbeanstalk:describeApplications",
                            "elasticbeanstalk:describeConfigurationOptions",
                            "elasticbeanstalk:describeEnvironmentHealth",
                            "elasticbeanstalk:describeEnvironmentManagedActionHistory",
                            "elasticbeanstalk:describeEnvironmentManagedActions",
                            "elasticbeanstalk:describeEnvironmentResources",
                            "elasticbeanstalk:describeEnvironments",
                            "elasticbeanstalk:describeEvents",
                            "elasticbeanstalk:describeInstancesHealth",
                            "elasticbeanstalk:describePlatformVersion",
                            "elasticbeanstalk:listAvailableSolutionStacks",
                            "elasticbeanstalk:listPlatformBranches",
                            "elasticbeanstalk:listPlatformVersions",
                            "elasticbeanstalk:validateConfigurationSettings",
                            "elasticfilesystem:describeAccessPoints",
                            "elasticfilesystem:describeFileSystemPolicy",
                            "elasticfilesystem:describeFileSystems",
                            "elasticfilesystem:describeLifecycleConfiguration",
                            "elasticfilesystem:describeMountTargets",
                            "elasticfilesystem:describeMountTargetSecurityGroups",
                            "elasticfilesystem:describeTags",
                            "elasticfilesystem:listTagsForResource",
                            "elasticloadbalancing:describeAccountLimits",
                            "elasticloadbalancing:describeInstanceHealth",
                            "elasticloadbalancing:describeListenerCertificates",
                            "elasticloadbalancing:describeListeners",
                            "elasticloadbalancing:describeLoadBalancerAttributes",
                            "elasticloadbalancing:describeLoadBalancerPolicies",
                            "elasticloadbalancing:describeLoadBalancerPolicyTypes",
                            "elasticloadbalancing:describeLoadBalancers",
                            "elasticloadbalancing:describeTrustStores",
                            "elasticloadbalancing:describeTrustStoreAssociations",
                            "elasticloadbalancing:describeTrustStoreRevocations",
                            "elasticloadbalancing:describeRules",
                            "elasticloadbalancing:describeSSLPolicies",
                            "elasticloadbalancing:describeTags",
                            "elasticloadbalancing:describeTargetGroupAttributes",
                            "elasticloadbalancing:describeTargetGroups",
                            "elasticloadbalancing:describeTargetHealth",
                            "elasticmapreduce:describeCluster",
                            "elasticmapreduce:describeNotebookExecution",
                            "elasticmapreduce:describeReleaseLabel",
                            "elasticmapreduce:describeSecurityConfiguration",
                            "elasticmapreduce:describeStep",
                            "elasticmapreduce:describeStudio",
                            "elasticmapreduce:getAutoTerminationPolicy",
                            "elasticmapreduce:getBlockPublicAccessConfiguration",
                            "elasticmapreduce:getManagedScalingPolicy",
                            "elasticmapreduce:getStudioSessionMapping",
                            "elasticmapreduce:listBootstrapActions",
                            "elasticmapreduce:listClusters",
                            "elasticmapreduce:listInstanceFleets",
                            "elasticmapreduce:listInstanceGroups",
                            "elasticmapreduce:listInstances",
                            "elasticmapreduce:listNotebookExecutions",
                            "elasticmapreduce:listReleaseLabels",
                            "elasticmapreduce:listSecurityConfigurations",
                            "elasticmapreduce:listSteps",
                            "elasticmapreduce:listStudios",
                            "elasticmapreduce:listStudioSessionMappings",
                            "elastictranscoder:listJobsByPipeline",
                            "elastictranscoder:listJobsByStatus",
                            "elastictranscoder:listPipelines",
                            "elastictranscoder:listPresets",
                            "elastictranscoder:readPipeline",
                            "elastictranscoder:readPreset",
                            "emr-containers:describeJobRun",
                            "emr-containers:describeJobTemplate",
                            "emr-containers:describeManagedEndpoint",
                            "emr-containers:describeVirtualCluster",
                            "emr-containers:listJobRuns",
                            "emr-containers:listJobTemplates",
                            "emr-containers:listManagedEndpoints",
                            "emr-containers:listVirtualClusters",
                            "emr-serverless:getApplication",
                            "emr-serverless:getJobRun",
                            "emr-serverless:listApplications",
                            "es:describeDomain",
                            "es:describeDomainAutoTunes",
                            "es:describeDomainChangeProgress",
                            "es:describeDomainConfig",
                            "es:describeDomains",
                            "es:describeDryRunProgress",
                            "es:describeElasticsearchDomain",
                            "es:describeElasticsearchDomainConfig",
                            "es:describeElasticsearchDomains",
                            "es:describeInboundConnections",
                            "es:describeInstanceTypeLimits",
                            "es:describeOutboundConnections",
                            "es:describePackages",
                            "es:describeReservedInstanceOfferings",
                            "es:describeReservedInstances",
                            "es:describeVpcEndpoints",
                            "es:getCompatibleVersions",
                            "es:getPackageVersionHistory",
                            "es:getUpgradeHistory",
                            "es:getUpgradeStatus",
                            "es:listDomainNames",
                            "es:listDomainsForPackage",
                            "es:listInstanceTypeDetails",
                            "es:listPackagesForDomain",
                            "es:listScheduledActions",
                            "es:listTags",
                            "es:listVersions",
                            "es:listVpcEndpointAccess",
                            "es:listVpcEndpoints",
                            "es:listVpcEndpointsForDomain",
                            "evidently:getExperiment",
                            "evidently:getFeature",
                            "evidently:getLaunch",
                            "evidently:getProject",
                            "evidently:getSegment",
                            "evidently:listExperiments",
                            "evidently:listFeatures",
                            "evidently:listLaunches",
                            "evidently:listProjects",
                            "evidently:listSegments",
                            "evidently:listSegmentReferences",
                            "events:describeApiDestination",
                            "events:describeArchive",
                            "events:describeConnection",
                            "events:describeEndpoint",
                            "events:describeEventBus",
                            "events:describeEventSource",
                            "events:describePartnerEventSource",
                            "events:describeReplay",
                            "events:describeRule",
                            "events:listArchives",
                            "events:listApiDestinations",
                            "events:listConnections",
                            "events:listEndpoints",
                            "events:listEventBuses",
                            "events:listEventSources",
                            "events:listPartnerEventSourceAccounts",
                            "events:listPartnerEventSources",
                            "events:listReplays",
                            "events:listRuleNamesByTarget",
                            "events:listRules",
                            "events:listTargetsByRule",
                            "events:testEventPattern",
                            "firehose:describeDeliveryStream",
                            "firehose:listDeliveryStreams",
                            "fms:getAdminAccount",
                            "fms:getComplianceDetail",
                            "fms:getNotificationChannel",
                            "fms:getPolicy",
                            "fms:getProtectionStatus",
                            "fms:listComplianceStatus",
                            "fms:listMemberAccounts",
                            "fms:listPolicies",
                            "forecast:describeDataset",
                            "forecast:describeDatasetGroup",
                            "forecast:describeDatasetImportJob",
                            "forecast:describeForecast",
                            "forecast:describeForecastExportJob",
                            "forecast:describePredictor",
                            "forecast:getAccuracyMetrics",
                            "forecast:listDatasetGroups",
                            "forecast:listDatasetImportJobs",
                            "forecast:listDatasets",
                            "forecast:listForecastExportJobs",
                            "forecast:listForecasts",
                            "forecast:listPredictors",
                            "freetier:getFreeTierUsage",
                            "fsx:describeBackups",
                            "fsx:describeDataRepositoryAssociations",
                            "fsx:describeDataRepositoryTasks",
                            "fsx:describeFileCaches",
                            "fsx:describeFileSystems",
                            "fsx:describeSnapshots",
                            "fsx:describeStorageVirtualMachines",
                            "fsx:describeVolumes",
                            "fsx:listTagsForResource",
                            "gamelift:describeAlias",
                            "gamelift:describeBuild",
                            "gamelift:describeEC2InstanceLimits",
                            "gamelift:describeFleetAttributes",
                            "gamelift:describeFleetCapacity",
                            "gamelift:describeFleetEvents",
                            "gamelift:describeFleetLocationAttributes",
                            "gamelift:describeFleetLocationCapacity",
                            "gamelift:describeFleetLocationUtilization",
                            "gamelift:describeFleetPortSettings",
                            "gamelift:describeFleetUtilization",
                            "gamelift:describeGameServer",
                            "gamelift:describeGameServerGroup",
                            "gamelift:describeGameSessionDetails",
                            "gamelift:describeGameSessionPlacement",
                            "gamelift:describeGameSessionQueues",
                            "gamelift:describeGameSessions",
                            "gamelift:describeInstances",
                            "gamelift:describeMatchmaking",
                            "gamelift:describeMatchmakingConfigurations",
                            "gamelift:describeMatchmakingRuleSets",
                            "gamelift:describePlayerSessions",
                            "gamelift:describeRuntimeConfiguration",
                            "gamelift:describeScalingPolicies",
                            "gamelift:describeScript",
                            "gamelift:listAliases",
                            "gamelift:listBuilds",
                            "gamelift:listFleets",
                            "gamelift:listGameServerGroups",
                            "gamelift:listGameServers",
                            "gamelift:listScripts",
                            "gamelift:resolveAlias",
                            "glacier:describeJob",
                            "glacier:describeVault",
                            "glacier:getDataRetrievalPolicy",
                            "glacier:getVaultAccessPolicy",
                            "glacier:getVaultLock",
                            "glacier:getVaultNotifications",
                            "glacier:listJobs",
                            "glacier:listTagsForVault",
                            "glacier:listVaults",
                            "globalaccelerator:describeAccelerator",
                            "globalaccelerator:describeAcceleratorAttributes",
                            "globalaccelerator:describeEndpointGroup",
                            "globalaccelerator:describeListener",
                            "globalaccelerator:listAccelerators",
                            "globalaccelerator:listEndpointGroups",
                            "globalaccelerator:listListeners",
                            "glue:batchGetBlueprints",
                            "glue:batchGetCrawlers",
                            "glue:batchGetDevEndpoints",
                            "glue:batchGetJobs",
                            "glue:batchGetPartition",
                            "glue:batchGetTriggers",
                            "glue:batchGetWorkflows",
                            "glue:checkSchemaVersionValidity",
                            "glue:getBlueprint",
                            "glue:getBlueprintRun",
                            "glue:getBlueprintRuns",
                            "glue:getCatalogImportStatus",
                            "glue:getClassifier",
                            "glue:getClassifiers",
                            "glue:getColumnStatisticsForPartition",
                            "glue:getColumnStatisticsForTable",
                            "glue:getCrawler",
                            "glue:getCrawlerMetrics",
                            "glue:getCrawlers",
                            "glue:getCustomEntityType",
                            "glue:getDatabase",
                            "glue:getDatabases",
                            "glue:getDataflowGraph",
                            "glue:getDataQualityResult",
                            "glue:getDataQualityRuleRecommendationRun",
                            "glue:getDataQualityRuleset",
                            "glue:getDataQualityRulesetEvaluationRun",
                            "glue:getDevEndpoint",
                            "glue:getDevEndpoints",
                            "glue:getJob",
                            "glue:getJobRun",
                            "glue:getJobRuns",
                            "glue:getJobs",
                            "glue:getMapping",
                            "glue:getMLTaskRun",
                            "glue:getMLTaskRuns",
                            "glue:getMLTransform",
                            "glue:getMLTransforms",
                            "glue:getPartition",
                            "glue:getPartitionIndexes",
                            "glue:getPartitions",
                            "glue:getRegistry",
                            "glue:getResourcePolicies",
                            "glue:getResourcePolicy",
                            "glue:getSchema",
                            "glue:getSchemaByDefinition",
                            "glue:getSchemaVersion",
                            "glue:getSchemaVersionsDiff",
                            "glue:getSession",
                            "glue:getStatement",
                            "glue:getTable",
                            "glue:getTables",
                            "glue:getTableVersions",
                            "glue:getTrigger",
                            "glue:getTriggers",
                            "glue:getUserDefinedFunction",
                            "glue:getUserDefinedFunctions",
                            "glue:getWorkflow",
                            "glue:getWorkflowRun",
                            "glue:getWorkflowRuns",
                            "glue:listCrawlers",
                            "glue:listCrawls",
                            "glue:listDataQualityResults",
                            "glue:listDataQualityRuleRecommendationRuns",
                            "glue:listDataQualityRulesetEvaluationRuns",
                            "glue:listDataQualityRulesets",
                            "glue:listDevEndpoints",
                            "glue:listMLTransforms",
                            "glue:listRegistries",
                            "glue:listSchemas",
                            "glue:listSchemaVersions",
                            "glue:listSessions",
                            "glue:listStatements",
                            "glue:querySchemaVersionMetadata",
                            "grafana:describeWorkspace",
                            "grafana:describeWorkspaceAuthentication",
                            "grafana:listPermissions",
                            "grafana:listVersions",
                            "grafana:listWorkspaces",
                            "greengrass:getConnectivityInfo",
                            "greengrass:getCoreDefinition",
                            "greengrass:getCoreDefinitionVersion",
                            "greengrass:getDeploymentStatus",
                            "greengrass:getDeviceDefinition",
                            "greengrass:getDeviceDefinitionVersion",
                            "greengrass:getFunctionDefinition",
                            "greengrass:getFunctionDefinitionVersion",
                            "greengrass:getGroup",
                            "greengrass:getGroupCertificateAuthority",
                            "greengrass:getGroupVersion",
                            "greengrass:getLoggerDefinition",
                            "greengrass:getLoggerDefinitionVersion",
                            "greengrass:getResourceDefinitionVersion",
                            "greengrass:getServiceRoleForAccount",
                            "greengrass:getSubscriptionDefinition",
                            "greengrass:getSubscriptionDefinitionVersion",
                            "greengrass:listCoreDefinitions",
                            "greengrass:listCoreDefinitionVersions",
                            "greengrass:listDeployments",
                            "greengrass:listDeviceDefinitions",
                            "greengrass:listDeviceDefinitionVersions",
                            "greengrass:listFunctionDefinitions",
                            "greengrass:listFunctionDefinitionVersions",
                            "greengrass:listGroups",
                            "greengrass:listGroupVersions",
                            "greengrass:listLoggerDefinitions",
                            "greengrass:listLoggerDefinitionVersions",
                            "greengrass:listResourceDefinitions",
                            "greengrass:listResourceDefinitionVersions",
                            "greengrass:listSubscriptionDefinitions",
                            "greengrass:listSubscriptionDefinitionVersions",
                            "guardduty:getDetector",
                            "guardduty:getFindings",
                            "guardduty:getFindingsStatistics",
                            "guardduty:getInvitationsCount",
                            "guardduty:getIPSet",
                            "guardduty:getMasterAccount",
                            "guardduty:getMembers",
                            "guardduty:getThreatIntelSet",
                            "guardduty:listDetectors",
                            "guardduty:listFindings",
                            "guardduty:listInvitations",
                            "guardduty:listIPSets",
                            "guardduty:listMembers",
                            "guardduty:listThreatIntelSets",
                            "health:describeAffectedAccountsForOrganization",
                            "health:describeAffectedEntities",
                            "health:describeAffectedEntitiesForOrganization",
                            "health:describeEntityAggregates",
                            "health:describeEntityAggregatesForOrganization",
                            "health:describeEventAggregates",
                            "health:describeEventDetails",
                            "health:describeEventDetailsForOrganization",
                            "health:describeEvents",
                            "health:describeEventsForOrganization",
                            "health:describeEventTypes",
                            "health:describeHealthServiceStatusForOrganization",
                            "iam:getAccessKeyLastUsed",
                            "iam:getAccountAuthorizationDetails",
                            "iam:getAccountPasswordPolicy",
                            "iam:getAccountSummary",
                            "iam:getContextKeysForCustomPolicy",
                            "iam:getContextKeysForPrincipalPolicy",
                            "iam:getCredentialReport",
                            "iam:getGroup",
                            "iam:getGroupPolicy",
                            "iam:getInstanceProfile",
                            "iam:getLoginProfile",
                            "iam:getOpenIDConnectProvider",
                            "iam:getPolicy",
                            "iam:getPolicyVersion",
                            "iam:getRole",
                            "iam:getRolePolicy",
                            "iam:getSAMLProvider",
                            "iam:getServerCertificate",
                            "iam:getServiceLinkedRoleDeletionStatus",
                            "iam:getSSHPublicKey",
                            "iam:getUser",
                            "iam:getUserPolicy",
                            "iam:listAccessKeys",
                            "iam:listAccountAliases",
                            "iam:listAttachedGroupPolicies",
                            "iam:listAttachedRolePolicies",
                            "iam:listAttachedUserPolicies",
                            "iam:listEntitiesForPolicy",
                            "iam:listGroupPolicies",
                            "iam:listGroups",
                            "iam:listGroupsForUser",
                            "iam:listInstanceProfiles",
                            "iam:listInstanceProfilesForRole",
                            "iam:listMFADevices",
                            "iam:listOpenIDConnectProviders",
                            "iam:listPolicies",
                            "iam:listPolicyVersions",
                            "iam:listRolePolicies",
                            "iam:listRoles",
                            "iam:listSAMLProviders",
                            "iam:listServerCertificates",
                            "iam:listSigningCertificates",
                            "iam:listSSHPublicKeys",
                            "iam:listUserPolicies",
                            "iam:listUsers",
                            "iam:listVirtualMFADevices",
                            "iam:simulateCustomPolicy",
                            "iam:simulatePrincipalPolicy",
                            "imagebuilder:getComponent",
                            "imagebuilder:getComponentPolicy",
                            "imagebuilder:getContainerRecipe",
                            "imagebuilder:getDistributionConfiguration",
                            "imagebuilder:getImage",
                            "imagebuilder:getImagePipeline",
                            "imagebuilder:getImagePolicy",
                            "imagebuilder:getImageRecipe",
                            "imagebuilder:getImageRecipePolicy",
                            "imagebuilder:getInfrastructureConfiguration",
                            "imagebuilder:getLifecycleExecution",
                            "imagebuilder:getLifecyclePolicy",
                            "imagebuilder:getWorkflow",
                            "imagebuilder:getWorkflowExecution",
                            "imagebuilder:getWorkflowStepExecution",
                            "imagebuilder:listComponentBuildVersions",
                            "imagebuilder:listComponents",
                            "imagebuilder:listContainerRecipes",
                            "imagebuilder:listDistributionConfigurations",
                            "imagebuilder:listImageBuildVersions",
                            "imagebuilder:listImagePipelineImages",
                            "imagebuilder:listImagePipelines",
                            "imagebuilder:listImageRecipes",
                            "imagebuilder:listImages",
                            "imagebuilder:listImageScanFindingAggregations",
                            "imagebuilder:listInfrastructureConfigurations",
                            "imagebuilder:listLifecycleExecutions",
                            "imagebuilder:listLifecycleExecutionResources",
                            "imagebuilder:listLifecyclePolicies",
                            "imagebuilder:listWorkflowBuildVersions",
                            "imagebuilder:listWorkflowExecutions",
                            "imagebuilder:listWorkflows",
                            "imagebuilder:listWorkflowStepExecutions",
                            "imagebuilder:listTagsForResource",
                            "inspector:describeAssessmentRuns",
                            "inspector:describeAssessmentTargets",
                            "inspector:describeAssessmentTemplates",
                            "inspector:describeCrossAccountAccessRole",
                            "inspector:describeResourceGroups",
                            "inspector:describeRulesPackages",
                            "inspector:getTelemetryMetadata",
                            "inspector:listAssessmentRunAgents",
                            "inspector:listAssessmentRuns",
                            "inspector:listAssessmentTargets",
                            "inspector:listAssessmentTemplates",
                            "inspector:listEventSubscriptions",
                            "inspector:listRulesPackages",
                            "inspector:listTagsForResource",
                            "inspector2:batchGetAccountStatus",
                            "inspector2:batchGetFreeTrialInfo",
                            "inspector2:describeOrganizationConfiguration",
                            "inspector2:getConfiguration",
                            "inspector2:getEc2DeepInspectionConfiguration",
                            "inspector2:getDelegatedAdminAccount",
                            "inspector2:getMember",
                            "inspector2:getSbomExport",
                            "inspector2:listCisScanConfigurations",
                            "inspector2:listCisScanResultsAggregatedByChecks",
                            "inspector2:listCisScanResultsAggregatedByTargetResource",
                            "inspector2:listCisScans",
                            "inspector2:listCoverage",
                            "inspector2:listDelegatedAdminAccounts",
                            "inspector2:listFilters",
                            "inspector2:listFindings",
                            "inspector2:listMembers",
                            "inspector2:listUsageTotals",
                            "inspector-scan:scanSbom",
                            "internetmonitor:getMonitor",
                            "internetmonitor:listMonitors",
                            "internetmonitor:getHealthEvent",
                            "internetmonitor:listHealthEvents",
                            "iot:describeAuthorizer",
                            "iot:describeCACertificate",
                            "iot:describeCertificate",
                            "iot:describeDefaultAuthorizer",
                            "iot:describeDomainConfiguration",
                            "iot:describeEndpoint",
                            "iot:describeIndex",
                            "iot:describeJobExecution",
                            "iot:describeThing",
                            "iot:describeThingGroup",
                            "iot:describeTunnel",
                            "iot:getEffectivePolicies",
                            "iot:getIndexingConfiguration",
                            "iot:getLoggingOptions",
                            "iot:getPolicy",
                            "iot:getPolicyVersion",
                            "iot:getTopicRule",
                            "iot:getV2LoggingOptions",
                            "iot:listAttachedPolicies",
                            "iot:listAuthorizers",
                            "iot:listCACertificates",
                            "iot:listCertificates",
                            "iot:listCertificatesByCA",
                            "iot:listDomainConfigurations",
                            "iot:listJobExecutionsForJob",
                            "iot:listJobExecutionsForThing",
                            "iot:listJobs",
                            "iot:listNamedShadowsForThing",
                            "iot:listOutgoingCertificates",
                            "iot:listPackages",
                            "iot:listPackageVersions",
                            "iot:listPolicies",
                            "iot:listPolicyPrincipals",
                            "iot:listPolicyVersions",
                            "iot:listPrincipalPolicies",
                            "iot:listPrincipalThings",
                            "iot:listRoleAliases",
                            "iot:listTargetsForPolicy",
                            "iot:listThingGroups",
                            "iot:listThingGroupsForThing",
                            "iot:listThingPrincipals",
                            "iot:listThingRegistrationTasks",
                            "iot:listThings",
                            "iot:listThingsInThingGroup",
                            "iot:listThingTypes",
                            "iot:listTopicRules",
                            "iot:listTunnels",
                            "iot:listV2LoggingLevels",
                            "iotevents:describeDetector",
                            "iotevents:describeDetectorModel",
                            "iotevents:describeInput",
                            "iotevents:describeLoggingOptions",
                            "iotevents:listDetectorModels",
                            "iotevents:listDetectorModelVersions",
                            "iotevents:listDetectors",
                            "iotevents:listInputs",
                            "iotfleetwise:getCampaign",
                            "iotfleetwise:getDecoderManifest",
                            "iotfleetwise:getFleet",
                            "iotfleetwise:getModelManifest",
                            "iotfleetwise:getSignalCatalog",
                            "iotfleetwise:getVehicle",
                            "iotfleetwise:getVehicleStatus",
                            "iotfleetwise:listCampaigns",
                            "iotfleetwise:listDecoderManifests",
                            "iotfleetwise:listDecoderManifestNetworkInterfaces",
                            "iotfleetwise:listDecoderManifestSignals",
                            "iotfleetwise:listFleets",
                            "iotfleetwise:listFleetsForVehicle",
                            "iotfleetwise:listModelManifests",
                            "iotfleetwise:listModelManifestNodes",
                            "iotfleetwise:listSignalCatalogs",
                            "iotfleetwise:listSignalCatalogNodes",
                            "iotfleetwise:listVehicles",
                            "iotsitewise:describeAccessPolicy",
                            "iotsitewise:describeAsset",
                            "iotsitewise:describeAssetModel",
                            "iotsitewise:describeAssetProperty",
                            "iotsitewise:describeDashboard",
                            "iotsitewise:describeGateway",
                            "iotsitewise:describeGatewayCapabilityConfiguration",
                            "iotsitewise:describeLoggingOptions",
                            "iotsitewise:describePortal",
                            "iotsitewise:describeProject",
                            "iotsitewise:listAccessPolicies",
                            "iotsitewise:listAssetModels",
                            "iotsitewise:listAssets",
                            "iotsitewise:listAssociatedAssets",
                            "iotsitewise:listDashboards",
                            "iotsitewise:listGateways",
                            "iotsitewise:listPortals",
                            "iotsitewise:listProjectAssets",
                            "iotsitewise:listProjects",
                            "iottwinmaker:getComponentType",
                            "iottwinmaker:getEntity",
                            "iottwinmaker:getPricingPlan",
                            "iottwinmaker:getScene",
                            "iottwinmaker:getWorkspace",
                            "iottwinmaker:listComponentTypes",
                            "iottwinmaker:listEntities",
                            "iottwinmaker:listScenes",
                            "iottwinmaker:getSyncJob",
                            "iottwinmaker:listSyncJobs",
                            "iottwinmaker:listSyncResources",
                            "iottwinmaker:listWorkspaces",
                            "iotwireless:getDestination",
                            "iotwireless:getDeviceProfile",
                            "iotwireless:getPartnerAccount",
                            "iotwireless:getServiceEndpoint",
                            "iotwireless:getServiceProfile",
                            "iotwireless:getWirelessDevice",
                            "iotwireless:getWirelessDeviceStatistics",
                            "iotwireless:getWirelessGateway",
                            "iotwireless:getWirelessGatewayCertificate",
                            "iotwireless:getWirelessGatewayFirmwareInformation",
                            "iotwireless:getWirelessGatewayStatistics",
                            "iotwireless:getWirelessGatewayTask",
                            "iotwireless:getWirelessGatewayTaskDefinition",
                            "iotwireless:listDestinations",
                            "iotwireless:listDeviceProfiles",
                            "iotwireless:listPartnerAccounts",
                            "iotwireless:listServiceProfiles",
                            "iotwireless:listTagsForResource",
                            "iotwireless:listWirelessDevices",
                            "iotwireless:listWirelessGateways",
                            "iotwireless:listWirelessGatewayTaskDefinitions",
                            "ivs:getChannel",
                            "ivs:getRecordingConfiguration",
                            "ivs:getStream",
                            "ivs:getStreamSession",
                            "ivs:listChannels",
                            "ivs:listPlaybackKeyPairs",
                            "ivs:listRecordingConfigurations",
                            "ivs:listStreamKeys",
                            "ivs:listStreams",
                            "ivs:listStreamSessions",
                            "kafka:describeCluster",
                            "kafka:describeClusterOperation",
                            "kafka:describeClusterOperationV2",
                            "kafka:describeClusterV2",
                            "kafka:describeConfiguration",
                            "kafka:describeConfigurationRevision",
                            "kafka:describeReplicator",
                            "kafka:describeVpcConnection",
                            "kafka:getBootstrapBrokers",
                            "kafka:getClusterPolicy",
                            "kafka:listConfigurations",
                            "kafka:listConfigurationRevisions",
                            "kafka:listClientVpcConnections",
                            "kafka:listClusterOperations",
                            "kafka:listClusterOperationsV2",
                            "kafka:listClusters",
                            "kafka:listClustersV2",
                            "kafka:listNodes",
                            "kafka:listReplicators",
                            "kafka:listScramSecrets",
                            "kafka:listVpcConnections",
                            "kafkaconnect:describeConnector",
                            "kafkaconnect:describeCustomPlugin",
                            "kafkaconnect:describeWorkerConfiguration",
                            "kafkaconnect:listConnectors",
                            "kafkaconnect:listCustomPlugins",
                            "kafkaconnect:listWorkerConfigurations",
                            "kendra:describeDataSource",
                            "kendra:describeFaq",
                            "kendra:describeIndex",
                            "kendra:listDataSources",
                            "kendra:listFaqs",
                            "kendra:listIndices",
                            "kinesis:describeStream",
                            "kinesis:describeStreamConsumer",
                            "kinesis:describeStreamSummary",
                            "kinesis:listShards",
                            "kinesis:listStreams",
                            "kinesis:listStreamConsumers",
                            "kinesis:listTagsForStream",
                            "kinesisanalytics:describeApplication",
                            "kinesisanalytics:describeApplicationSnapshot",
                            "kinesisanalytics:listApplications",
                            "kinesisanalytics:listApplicationSnapshots",
                            "kinesisvideo:describeImageGenerationConfiguration",
                            "kinesisvideo:describeNotificationConfiguration",
                            "kinesisvideo:describeSignalingChannel",
                            "kinesisvideo:describeStream",
                            "kinesisvideo:getDataEndpoint",
                            "kinesisvideo:getIceServerConfig",
                            "kinesisvideo:getSignalingChannelEndpoint",
                            "kinesisvideo:listSignalingChannels",
                            "kinesisvideo:listStreams",
                            "kms:describeKey",
                            "kms:getKeyPolicy",
                            "kms:getKeyRotationStatus",
                            "kms:listAliases",
                            "kms:listGrants",
                            "kms:listKeyPolicies",
                            "kms:listKeys",
                            "kms:listResourceTags",
                            "kms:listRetirableGrants",
                            "lambda:getAccountSettings",
                            "lambda:getAlias",
                            "lambda:getCodeSigningConfig",
                            "lambda:getEventSourceMapping",
                            "lambda:getFunction",
                            "lambda:getFunctionCodeSigningConfig",
                            "lambda:getFunctionConcurrency",
                            "lambda:getFunctionConfiguration",
                            "lambda:getFunctionEventInvokeConfig",
                            "lambda:getFunctionUrlConfig",
                            "lambda:getLayerVersion",
                            "lambda:getLayerVersionPolicy",
                            "lambda:getPolicy",
                            "lambda:getProvisionedConcurrencyConfig",
                            "lambda:getRuntimeManagementConfig",
                            "lambda:listAliases",
                            "lambda:listCodeSigningConfigs",
                            "lambda:listEventSourceMappings",
                            "lambda:listFunctionEventInvokeConfigs",
                            "lambda:listFunctions",
                            "lambda:listFunctionsByCodeSigningConfig",
                            "lambda:listFunctionUrlConfigs",
                            "lambda:listLayers",
                            "lambda:listLayerVersions",
                            "lambda:listProvisionedConcurrencyConfigs",
                            "lambda:listVersionsByFunction",
                            "launchwizard:describeProvisionedApp",
                            "launchwizard:describeProvisioningEvents",
                            "launchwizard:listProvisionedApps",
                            "lex:describeBot",
                            "lex:describeBotAlias",
                            "lex:describeBotLocale",
                            "lex:describeBotRecommendation",
                            "lex:describeBotVersion",
                            "lex:describeCustomVocabularyMetadata",
                            "lex:describeExport",
                            "lex:describeImport",
                            "lex:describeIntent",
                            "lex:describeResourcePolicy",
                            "lex:describeSlot",
                            "lex:describeSlotType",
                            "lex:getBot",
                            "lex:getBotAlias",
                            "lex:getBotAliases",
                            "lex:getBotChannelAssociation",
                            "lex:getBotChannelAssociations",
                            "lex:getBots",
                            "lex:getBotVersions",
                            "lex:getBuiltinIntent",
                            "lex:getBuiltinIntents",
                            "lex:getBuiltinSlotTypes",
                            "lex:getIntent",
                            "lex:getIntents",
                            "lex:getIntentVersions",
                            "lex:getSlotType",
                            "lex:getSlotTypes",
                            "lex:getSlotTypeVersions",
                            "lex:listBotAliases",
                            "lex:listBotLocales",
                            "lex:listBotRecommendations",
                            "lex:listBots",
                            "lex:listBotVersions",
                            "lex:listExports",
                            "lex:listImports",
                            "lex:listIntents",
                            "lex:listRecommendedIntents",
                            "lex:listSlots",
                            "lex:listSlotTypes",
                            "license-manager:getLicenseConfiguration",
                            "license-manager:getServiceSettings",
                            "license-manager:listAssociationsForLicenseConfiguration",
                            "license-manager:listFailuresForLicenseConfigurationOperations",
                            "license-manager:listLicenseConfigurations",
                            "license-manager:listLicenseSpecificationsForResource",
                            "license-manager:listResourceInventory",
                            "license-manager:listUsageForLicenseConfiguration",
                            "lightsail:getActiveNames",
                            "lightsail:getAlarms",
                            "lightsail:getAutoSnapshots",
                            "lightsail:getBlueprints",
                            "lightsail:getBucketBundles",
                            "lightsail:getBucketMetricData",
                            "lightsail:getBuckets",
                            "lightsail:getBundles",
                            "lightsail:getCertificates",
                            "lightsail:getContainerImages",
                            "lightsail:getContainerServiceDeployments",
                            "lightsail:getContainerServiceMetricData",
                            "lightsail:getContainerServicePowers",
                            "lightsail:getContainerServices",
                            "lightsail:getDisk",
                            "lightsail:getDisks",
                            "lightsail:getDiskSnapshot",
                            "lightsail:getDiskSnapshots",
                            "lightsail:getDistributionBundles",
                            "lightsail:getDistributionMetricData",
                            "lightsail:getDistributions",
                            "lightsail:getDomain",
                            "lightsail:getDomains",
                            "lightsail:getExportSnapshotRecords",
                            "lightsail:getInstance",
                            "lightsail:getInstanceMetricData",
                            "lightsail:getInstancePortStates",
                            "lightsail:getInstances",
                            "lightsail:getInstanceSnapshot",
                            "lightsail:getInstanceSnapshots",
                            "lightsail:getInstanceState",
                            "lightsail:getKeyPair",
                            "lightsail:getKeyPairs",
                            "lightsail:getLoadBalancer",
                            "lightsail:getLoadBalancerMetricData",
                            "lightsail:getLoadBalancers",
                            "lightsail:getLoadBalancerTlsCertificates",
                            "lightsail:getOperation",
                            "lightsail:getOperations",
                            "lightsail:getOperationsForResource",
                            "lightsail:getRegions",
                            "lightsail:getRelationalDatabase",
                            "lightsail:getRelationalDatabaseMetricData",
                            "lightsail:getRelationalDatabases",
                            "lightsail:getRelationalDatabaseSnapshot",
                            "lightsail:getRelationalDatabaseSnapshots",
                            "lightsail:getStaticIp",
                            "lightsail:getStaticIps",
                            "lightsail:isVpcPeered",
                            "logs:describeAccountPolicies",
                            "logs:describeDeliveries",
                            "logs:describeDeliveryDestinations",
                            "logs:describeDeliverySources",
                            "logs:describeDestinations",
                            "logs:describeExportTasks",
                            "logs:describeLogGroups",
                            "logs:describeLogStreams",
                            "logs:describeMetricFilters",
                            "logs:describeQueries",
                            "logs:describeQueryDefinitions",
                            "logs:describeResourcePolicies",
                            "logs:describeSubscriptionFilters",
                            "logs:getDataProtectionPolicy",
                            "logs:getDelivery",
                            "logs:getDeliveryDestination",
                            "logs:getDeliveryDestinationPolicy",
                            "logs:getDeliverySource",
                            "logs:getLogAnomalyDetector",
                            "logs:getLogDelivery",
                            "logs:getLogGroupFields",
                            "logs:listAnomalies",
                            "logs:listLogAnomalyDetectors",
                            "logs:listLogDeliveries",
                            "logs:testMetricFilter",
                            "lookoutequipment:describeDataIngestionJob",
                            "lookoutequipment:describeDataset",
                            "lookoutequipment:describeInferenceScheduler",
                            "lookoutequipment:describeModel",
                            "lookoutequipment:listDataIngestionJobs",
                            "lookoutequipment:listDatasets",
                            "lookoutequipment:listInferenceExecutions",
                            "lookoutequipment:listInferenceSchedulers",
                            "lookoutequipment:listModels",
                            "lookoutmetrics:describeAlert",
                            "lookoutmetrics:describeAnomalyDetectionExecutions",
                            "lookoutmetrics:describeAnomalyDetector",
                            "lookoutmetrics:describeMetricSet",
                            "lookoutmetrics:getAnomalyGroup",
                            "lookoutmetrics:getDataQualityMetrics",
                            "lookoutmetrics:getFeedback",
                            "lookoutmetrics:getSampleData",
                            "lookoutmetrics:listAlerts",
                            "lookoutmetrics:listAnomalyDetectors",
                            "lookoutmetrics:listAnomalyGroupSummaries",
                            "lookoutmetrics:listAnomalyGroupTimeSeries",
                            "lookoutmetrics:listMetricSets",
                            "lookoutmetrics:listTagsForResource",
                            "machinelearning:describeBatchPredictions",
                            "machinelearning:describeDataSources",
                            "machinelearning:describeEvaluations",
                            "machinelearning:describeMLModels",
                            "machinelearning:getBatchPrediction",
                            "machinelearning:getDataSource",
                            "machinelearning:getEvaluation",
                            "machinelearning:getMLModel",
                            "macie2:getClassificationExportConfiguration",
                            "macie2:getCustomDataIdentifier",
                            "macie2:getFindings",
                            "macie2:getFindingStatistics",
                            "macie2:listClassificationJobs",
                            "macie2:listCustomDataIdentifiers",
                            "macie2:listFindings",
                            "managedblockchain:getMember",
                            "managedblockchain:getNetwork",
                            "managedblockchain:getNode",
                            "managedblockchain:listMembers",
                            "managedblockchain:listNetworks",
                            "managedblockchain:listNodes",
                            "mediaconnect:describeFlow",
                            "mediaconnect:listEntitlements",
                            "mediaconnect:listFlows",
                            "mediaconvert:describeEndpoints",
                            "mediaconvert:getJob",
                            "mediaconvert:getJobTemplate",
                            "mediaconvert:getPreset",
                            "mediaconvert:getQueue",
                            "mediaconvert:listJobs",
                            "mediaconvert:listJobTemplates",
                            "medialive:describeChannel",
                            "medialive:describeInput",
                            "medialive:describeInputDevice",
                            "medialive:describeInputSecurityGroup",
                            "medialive:describeMultiplex",
                            "medialive:describeOffering",
                            "medialive:describeReservation",
                            "medialive:describeSchedule",
                            "medialive:listChannels",
                            "medialive:listInputDevices",
                            "medialive:listInputs",
                            "medialive:listInputSecurityGroups",
                            "medialive:listMultiplexes",
                            "medialive:listOfferings",
                            "medialive:listReservations",
                            "mediapackage:describeChannel",
                            "mediapackage:describeOriginEndpoint",
                            "mediapackage:listChannels",
                            "mediapackage:listOriginEndpoints",
                            "mediastore:describeContainer",
                            "mediastore:getContainerPolicy",
                            "mediastore:getCorsPolicy",
                            "mediastore:listContainers",
                            "mediatailor:getPlaybackConfiguration",
                            "mediatailor:listPlaybackConfigurations",
                            "medical-imaging:getDatastore",
                            "medical-imaging:listDatastores",
                            "mgn:describeJobLogItems",
                            "mgn:describeJobs",
                            "mgn:describeLaunchConfigurationTemplates",
                            "mgn:describeReplicationConfigurationTemplates",
                            "mgn:describeSourceServers",
                            "mgn:describeVcenterClients",
                            "mgn:getLaunchConfiguration",
                            "mgn:getReplicationConfiguration",
                            "mgn:listApplications",
                            "mgn:listSourceServerActions",
                            "mgn:listTemplateActions",
                            "mgn:listWaves",
                            "mobiletargeting:getAdmChannel",
                            "mobiletargeting:getApnsChannel",
                            "mobiletargeting:getApnsSandboxChannel",
                            "mobiletargeting:getApnsVoipChannel",
                            "mobiletargeting:getApnsVoipSandboxChannel",
                            "mobiletargeting:getApp",
                            "mobiletargeting:getApplicationSettings",
                            "mobiletargeting:getApps",
                            "mobiletargeting:getBaiduChannel",
                            "mobiletargeting:getCampaign",
                            "mobiletargeting:getCampaignActivities",
                            "mobiletargeting:getCampaigns",
                            "mobiletargeting:getCampaignVersion",
                            "mobiletargeting:getCampaignVersions",
                            "mobiletargeting:getEmailChannel",
                            "mobiletargeting:getEndpoint",
                            "mobiletargeting:getEventStream",
                            "mobiletargeting:getExportJob",
                            "mobiletargeting:getExportJobs",
                            "mobiletargeting:getGcmChannel",
                            "mobiletargeting:getImportJob",
                            "mobiletargeting:getImportJobs",
                            "mobiletargeting:getJourney",
                            "mobiletargeting:getJourneyExecutionMetrics",
                            "mobiletargeting:getJourneyExecutionActivityMetrics",
                            "mobiletargeting:getJourneyRunExecutionActivityMetrics",
                            "mobiletargeting:getJourneyRunExecutionMetrics",
                            "mobiletargeting:getJourneyRuns",
                            "mobiletargeting:getSegment",
                            "mobiletargeting:getSegmentImportJobs",
                            "mobiletargeting:getSegments",
                            "mobiletargeting:getSegmentVersion",
                            "mobiletargeting:getSegmentVersions",
                            "mobiletargeting:getSmsChannel",
                            "mobiletargeting:listJourneys",
                            "mq:describeBroker",
                            "mq:describeConfiguration",
                            "mq:describeConfigurationRevision",
                            "mq:describeUser",
                            "mq:listBrokers",
                            "mq:listConfigurationRevisions",
                            "mq:listConfigurations",
                            "mq:listUsers",
                            "m2:getApplication",
                            "m2:getApplicationVersion",
                            "m2:getBatchJobExecution",
                            "m2:getDataSetDetails",
                            "m2:getDataSetImportTask",
                            "m2:getDeployment",
                            "m2:getEnvironment",
                            "m2:listApplications",
                            "m2:listApplicationVersions",
                            "m2:listBatchJobDefinitions",
                            "m2:listBatchJobExecutions",
                            "m2:listDataSetImportHistory",
                            "m2:listDataSets",
                            "m2:listDeployments",
                            "m2:listEngineVersions",
                            "m2:listEnvironments",
                            "network-firewall:describeFirewall",
                            "network-firewall:describeFirewallPolicy",
                            "network-firewall:describeLoggingConfiguration",
                            "network-firewall:describeRuleGroup",
                            "network-firewall:describeTlsInspectionConfiguration",
                            "network-firewall:listFirewallPolicies",
                            "network-firewall:listFirewalls",
                            "network-firewall:listRuleGroups",
                            "network-firewall:listTlsInspectionConfigurations",
                            "networkmanager:describeGlobalNetworks",
                            "networkmanager:getConnectAttachment",
                            "networkmanager:getConnections",
                            "networkmanager:getConnectPeer",
                            "networkmanager:getConnectPeerAssociations",
                            "networkmanager:getCoreNetwork",
                            "networkmanager:getCoreNetworkChangeEvents",
                            "networkmanager:getCoreNetworkChangeSet",
                            "networkmanager:getCoreNetworkPolicy",
                            "networkmanager:getCustomerGatewayAssociations",
                            "networkmanager:getDevices",
                            "networkmanager:getLinkAssociations",
                            "networkmanager:getLinks",
                            "networkmanager:getNetworkResourceCounts",
                            "networkmanager:getNetworkResourceRelationships",
                            "networkmanager:getNetworkResources",
                            "networkmanager:getNetworkRoutes",
                            "networkmanager:getNetworkTelemetry",
                            "networkmanager:getResourcePolicy",
                            "networkmanager:getRouteAnalysis",
                            "networkmanager:getSites",
                            "networkmanager:getSiteToSiteVpnAttachment",
                            "networkmanager:getTransitGatewayConnectPeerAssociations",
                            "networkmanager:getTransitGatewayPeering",
                            "networkmanager:getTransitGatewayRegistrations",
                            "networkmanager:getTransitGatewayRouteTableAttachment",
                            "networkmanager:getVpcAttachment",
                            "networkmanager:listAttachments",
                            "networkmanager:listConnectPeers",
                            "networkmanager:listCoreNetworkPolicyVersions",
                            "networkmanager:listCoreNetworks",
                            "networkmanager:listOrganizationServiceAccessStatus",
                            "networkmanager:listPeerings",
                            "networkmanager:listTagsForResource",
                            "networkmonitor:getMonitor",
                            "networkmonitor:getProbe",
                            "networkmonitor:listMonitors",
                            "nimble:getEula",
                            "nimble:getLaunchProfile",
                            "nimble:getLaunchProfileDetails",
                            "nimble:getLaunchProfileInitialization",
                            "nimble:getLaunchProfileMember",
                            "nimble:getStreamingImage",
                            "nimble:getStreamingSession",
                            "nimble:getStreamingSessionStream",
                            "nimble:getStudio",
                            "nimble:getStudioComponent",
                            "nimble:listEulaAcceptances",
                            "nimble:listEulas",
                            "nimble:listLaunchProfiles",
                            "nimble:listStreamingImages",
                            "nimble:listStreamingSessions",
                            "nimble:listStudioComponents",
                            "nimble:listStudios",
                            "notifications:getEventRule",
                            "notifications:getNotificationConfiguration",
                            "notifications:getNotificationEvent",
                            "notifications:listChannels",
                            "notifications:listEventRules",
                            "notifications:listNotificationConfigurations",
                            "notifications:listNotificationEvents",
                            "notifications:listNotificationHubs",
                            "notifications-contacts:getEmailContact",
                            "notifications-contacts:listEmailContacts",
                            "oam:getLink",
                            "oam:getSink",
                            "oam:getSinkPolicy",
                            "oam:listAttachedLinks",
                            "oam:listLinks",
                            "oam:listSinks",
                            "omics:getAnnotationImportJob",
                            "omics:getAnnotationStore",
                            "omics:getReadSetImportJob",
                            "omics:getReadSetMetadata",
                            "omics:getReference",
                            "omics:getReferenceImportJob",
                            "omics:getReferenceMetadata",
                            "omics:getReferenceStore",
                            "omics:getRun",
                            "omics:getRunGroup",
                            "omics:getSequenceStore",
                            "omics:getVariantImportJob",
                            "omics:getVariantStore",
                            "omics:getWorkflow",
                            "omics:listAnnotationImportJobs",
                            "omics:listAnnotationStores",
                            "omics:listMultipartReadSetUploads",
                            "omics:listReadSetImportJobs",
                            "omics:listReadSets",
                            "omics:listReadSetUploadParts",
                            "omics:listReferenceImportJobs",
                            "omics:listReferenceStores",
                            "omics:listReferences",
                            "omics:listRunGroups",
                            "omics:listRunTasks",
                            "omics:listRuns",
                            "omics:listSequenceStores",
                            "omics:listVariantImportJobs",
                            "omics:listVariantStores",
                            "omics:listWorkflows",
                            "opsworks-cm:describeAccountAttributes",
                            "opsworks-cm:describeBackups",
                            "opsworks-cm:describeEvents",
                            "opsworks-cm:describeNodeAssociationStatus",
                            "opsworks-cm:describeServers",
                            "opsworks:describeAgentVersions",
                            "opsworks:describeApps",
                            "opsworks:describeCommands",
                            "opsworks:describeDeployments",
                            "opsworks:describeEcsClusters",
                            "opsworks:describeElasticIps",
                            "opsworks:describeElasticLoadBalancers",
                            "opsworks:describeInstances",
                            "opsworks:describeLayers",
                            "opsworks:describeLoadBasedAutoScaling",
                            "opsworks:describeMyUserProfile",
                            "opsworks:describePermissions",
                            "opsworks:describeRaidArrays",
                            "opsworks:describeRdsDbInstances",
                            "opsworks:describeServiceErrors",
                            "opsworks:describeStackProvisioningParameters",
                            "opsworks:describeStacks",
                            "opsworks:describeStackSummary",
                            "opsworks:describeTimeBasedAutoScaling",
                            "opsworks:describeUserProfiles",
                            "opsworks:describeVolumes",
                            "opsworks:getHostnameSuggestion",
                            "organizations:listAccounts",
                            "organizations:listTagsForResource",
                            "osis:getPipeline",
                            "osis:getPipelineBlueprint",
                            "osis:getPipelineChangeProgress",
                            "osis:listPipelineBlueprints",
                            "osis:listPipelines",
                            "osis:validatePipeline",
                            "outposts:getCatalogItem",
                            "outposts:getConnection",
                            "outposts:getOrder",
                            "outposts:getOutpost",
                            "outposts:getOutpostInstanceTypes",
                            "outposts:getSite",
                            "outposts:listAssets",
                            "outposts:listCatalogItems",
                            "outposts:listOrders",
                            "outposts:listOutposts",
                            "outposts:listSites",
                            "personalize:describeAlgorithm",
                            "personalize:describeBatchInferenceJob",
                            "personalize:describeBatchSegmentJob",
                            "personalize:describeCampaign",
                            "personalize:describeDataset",
                            "personalize:describeDatasetExportJob",
                            "personalize:describeDatasetGroup",
                            "personalize:describeDatasetImportJob",
                            "personalize:describeEventTracker",
                            "personalize:describeFeatureTransformation",
                            "personalize:describeFilter",
                            "personalize:describeRecipe",
                            "personalize:describeRecommender",
                            "personalize:describeSchema",
                            "personalize:describeSolution",
                            "personalize:describeSolutionVersion",
                            "personalize:getPersonalizedRanking",
                            "personalize:getRecommendations",
                            "personalize:getSolutionMetrics",
                            "personalize:listBatchInferenceJobs",
                            "personalize:listBatchSegmentJobs",
                            "personalize:listCampaigns",
                            "personalize:listDatasetExportJobs",
                            "personalize:listDatasetGroups",
                            "personalize:listDatasetImportJobs",
                            "personalize:listDatasets",
                            "personalize:listEventTrackers",
                            "personalize:listRecipes",
                            "personalize:listRecommenders",
                            "personalize:listSchemas",
                            "personalize:listSolutions",
                            "personalize:listSolutionVersions",
                            "pipes:describePipe",
                            "pipes:listPipes",
                            "pipes:listTagsForResource",
                            "polly:describeVoices",
                            "polly:getLexicon",
                            "polly:listLexicons",
                            "pricing:describeServices",
                            "pricing:getAttributeValues",
                            "pricing:getProducts",
                            "private-networks:getDeviceIdentifier",
                            "private-networks:getNetwork",
                            "private-networks:getNetworkResource",
                            "private-networks:listDeviceIdentifiers",
                            "private-networks:listNetworks",
                            "private-networks:listNetworkResources",
                            "qbusiness:getApplication",
                            "qbusiness:getDataSource",
                            "qbusiness:getIndex",
                            "qbusiness:getRetriever",
                            "qbusiness:getWebExperience",
                            "qbusiness:listApplications",
                            "qbusiness:listDataSources",
                            "qbusiness:listDataSourceSyncJobs",
                            "qbusiness:listIndices",
                            "qbusiness:listRetrievers",
                            "qbusiness:listWebExperiences",
                            "quicksight:describeAccountCustomization",
                            "quicksight:describeAccountSettings",
                            "quicksight:describeAccountSubscription",
                            "quicksight:describeAnalysis",
                            "quicksight:describeAnalysisPermissions",
                            "quicksight:describeDashboard",
                            "quicksight:describeDashboardPermissions",
                            "quicksight:describeDataSet",
                            "quicksight:describeDataSetPermissions",
                            "quicksight:describeDataSetRefreshProperties",
                            "quicksight:describeDataSource",
                            "quicksight:describeDataSourcePermissions",
                            "quicksight:describeFolder",
                            "quicksight:describeFolderPermissions",
                            "quicksight:describeFolderResolvedPermissions",
                            "quicksight:describeGroup",
                            "quicksight:describeGroupMembership",
                            "quicksight:describeIAMPolicyAssignment",
                            "quicksight:describeIngestion",
                            "quicksight:describeIpRestriction",
                            "quicksight:describeNamespace",
                            "quicksight:describeRefreshSchedule",
                            "quicksight:describeTemplate",
                            "quicksight:describeTemplateAlias",
                            "quicksight:describeTemplatePermissions",
                            "quicksight:describeTheme",
                            "quicksight:describeThemeAlias",
                            "quicksight:describeThemePermissions",
                            "quicksight:describeTopic",
                            "quicksight:describeTopicPermissions",
                            "quicksight:describeTopicRefresh",
                            "quicksight:describeTopicRefreshSchedule",
                            "quicksight:describeUser",
                            "quicksight:describeVPCConnection",
                            "quicksight:listAnalyses",
                            "quicksight:listDashboards",
                            "quicksight:listDashboardVersions",
                            "quicksight:listDataSets",
                            "quicksight:listDataSources",
                            "quicksight:listFolderMembers",
                            "quicksight:listFolders",
                            "quicksight:listGroupMemberships",
                            "quicksight:listGroups",
                            "quicksight:listIAMPolicyAssignments",
                            "quicksight:listIAMPolicyAssignmentsForUser",
                            "quicksight:listIngestions",
                            "quicksight:listNamespaces",
                            "quicksight:listRefreshSchedules",
                            "quicksight:listTemplateAliases",
                            "quicksight:listTemplates",
                            "quicksight:listTemplateVersions",
                            "quicksight:listThemeAliases",
                            "quicksight:listThemes",
                            "quicksight:listThemeVersions",
                            "quicksight:listTopicRefreshSchedules",
                            "quicksight:listTopics",
                            "quicksight:listUserGroups",
                            "quicksight:listUsers",
                            "quicksight:listVPCConnections",
                            "quicksight:searchAnalyses",
                            "quicksight:searchDashboards",
                            "quicksight:searchDataSets",
                            "quicksight:searchDataSources",
                            "quicksight:searchFolders",
                            "quicksight:searchGroups",
                            "ram:getPermission",
                            "ram:getResourceShareAssociations",
                            "ram:getResourceShareInvitations",
                            "ram:getResourceShares",
                            "ram:listPendingInvitationResources",
                            "ram:listPrincipals",
                            "ram:listResources",
                            "ram:listResourceSharePermissions",
                            "rbin:getRule",
                            "rbin:listRules",
                            "rds:describeAccountAttributes",
                            "rds:describeBlueGreenDeployments",
                            "rds:describeCertificates",
                            "rds:describeDBClusterEndpoints",
                            "rds:describeDBClusterParameterGroups",
                            "rds:describeDBClusterParameters",
                            "rds:describeDBClusters",
                            "rds:describeDBClusterSnapshots",
                            "rds:describeDBEngineVersions",
                            "rds:describeDBInstanceAutomatedBackups",
                            "rds:describeDBInstances",
                            "rds:describeDBLogFiles",
                            "rds:describeDBParameterGroups",
                            "rds:describeDBParameters",
                            "rds:describeDBSecurityGroups",
                            "rds:describeDBSnapshotAttributes",
                            "rds:describeDBSnapshots",
                            "rds:describeDBSubnetGroups",
                            "rds:describeEngineDefaultClusterParameters",
                            "rds:describeEngineDefaultParameters",
                            "rds:describeEventCategories",
                            "rds:describeEvents",
                            "rds:describeEventSubscriptions",
                            "rds:describeExportTasks",
                            "rds:describeGlobalClusters",
                            "rds:describeIntegrations",
                            "rds:describeOptionGroupOptions",
                            "rds:describeOptionGroups",
                            "rds:describeOrderableDBInstanceOptions",
                            "rds:describePendingMaintenanceActions",
                            "rds:describeReservedDBInstances",
                            "rds:describeReservedDBInstancesOfferings",
                            "rds:describeSourceRegions",
                            "rds:describeValidDBInstanceModifications",
                            "rds:listTagsForResource",
                            "redshift-data:describeStatement",
                            "redshift-data:listStatements",
                            "redshift:describeClusterParameterGroups",
                            "redshift:describeClusterParameters",
                            "redshift:describeClusters",
                            "redshift:describeClusterSecurityGroups",
                            "redshift:describeClusterSnapshots",
                            "redshift:describeClusterSubnetGroups",
                            "redshift:describeClusterVersions",
                            "redshift:describeDataShares",
                            "redshift:describeDataSharesForConsumer",
                            "redshift:describeDataSharesForProducer",
                            "redshift:describeDefaultClusterParameters",
                            "redshift:describeEventCategories",
                            "redshift:describeEvents",
                            "redshift:describeEventSubscriptions",
                            "redshift:describeHsmClientCertificates",
                            "redshift:describeHsmConfigurations",
                            "redshift:describeLoggingStatus",
                            "redshift:describeOrderableClusterOptions",
                            "redshift:describeReservedNodeOfferings",
                            "redshift:describeReservedNodes",
                            "redshift:describeResize",
                            "redshift:describeSnapshotCopyGrants",
                            "redshift:describeStorage",
                            "redshift:describeTableRestoreStatus",
                            "redshift:describeTags",
                            "redshift-serverless:getEndpointAccess",
                            "redshift-serverless:getNamespace",
                            "redshift-serverless:getRecoveryPoint",
                            "redshift-serverless:getSnapshot",
                            "redshift-serverless:getTableRestoreStatus",
                            "redshift-serverless:getUsageLimit",
                            "redshift-serverless:getWorkgroup",
                            "redshift-serverless:listEndpointAccess",
                            "redshift-serverless:listNamespaces",
                            "redshift-serverless:listRecoveryPoints",
                            "redshift-serverless:listSnapshots",
                            "redshift-serverless:listTableRestoreStatus",
                            "redshift-serverless:listUsageLimits",
                            "redshift-serverless:listWorkgroups",
                            "rekognition:listCollections",
                            "rekognition:listFaces",
                            "resource-explorer-2:getAccountLevelServiceConfiguration",
                            "resource-explorer-2:getIndex",
                            "resource-explorer-2:getView",
                            "resource-explorer-2:listIndexes",
                            "resource-explorer-2:listViews",
                            "resource-explorer-2:search",
                            "resource-groups:getGroup",
                            "resource-groups:getGroupQuery",
                            "resource-groups:getTags",
                            "resource-groups:listGroupResources",
                            "resource-groups:listGroups",
                            "resource-groups:searchResources",
                            "robomaker:batchDescribeSimulationJob",
                            "robomaker:describeDeploymentJob",
                            "robomaker:describeFleet",
                            "robomaker:describeRobot",
                            "robomaker:describeRobotApplication",
                            "robomaker:describeSimulationApplication",
                            "robomaker:describeSimulationJob",
                            "robomaker:listDeploymentJobs",
                            "robomaker:listFleets",
                            "robomaker:listRobotApplications",
                            "robomaker:listRobots",
                            "robomaker:listSimulationApplications",
                            "robomaker:listSimulationJobs",
                            "route53-recovery-cluster:getRoutingControlState",
                            "route53-recovery-cluster:listRoutingControls",
                            "route53-recovery-control-config:describeControlPanel",
                            "route53-recovery-control-config:describeRoutingControl",
                            "route53-recovery-control-config:describeSafetyRule",
                            "route53-recovery-control-config:listControlPanels",
                            "route53-recovery-control-config:listRoutingControls",
                            "route53-recovery-control-config:listSafetyRules",
                            "route53-recovery-readiness:getCell",
                            "route53-recovery-readiness:getCellReadinessSummary",
                            "route53-recovery-readiness:getReadinessCheck",
                            "route53-recovery-readiness:getReadinessCheckResourceStatus",
                            "route53-recovery-readiness:getReadinessCheckStatus",
                            "route53-recovery-readiness:getRecoveryGroup",
                            "route53-recovery-readiness:getRecoveryGroupReadinessSummary",
                            "route53-recovery-readiness:listCells",
                            "route53-recovery-readiness:listReadinessChecks",
                            "route53-recovery-readiness:listRecoveryGroups",
                            "route53-recovery-readiness:listResourceSets",
                            "route53:getAccountLimit",
                            "route53:getChange",
                            "route53:getCheckerIpRanges",
                            "route53:getDNSSEC",
                            "route53:getGeoLocation",
                            "route53:getHealthCheck",
                            "route53:getHealthCheckCount",
                            "route53:getHealthCheckLastFailureReason",
                            "route53:getHealthCheckStatus",
                            "route53:getHostedZone",
                            "route53:getHostedZoneCount",
                            "route53:getHostedZoneLimit",
                            "route53:getQueryLoggingConfig",
                            "route53:getReusableDelegationSet",
                            "route53:getTrafficPolicy",
                            "route53:getTrafficPolicyInstance",
                            "route53:getTrafficPolicyInstanceCount",
                            "route53:listCidrBlocks",
                            "route53:listCidrCollections",
                            "route53:listCidrLocations",
                            "route53:listGeoLocations",
                            "route53:listHealthChecks",
                            "route53:listHostedZones",
                            "route53:listHostedZonesByName",
                            "route53:listHostedZonesByVpc",
                            "route53:listQueryLoggingConfigs",
                            "route53:listResourceRecordSets",
                            "route53:listReusableDelegationSets",
                            "route53:listTrafficPolicies",
                            "route53:listTrafficPolicyInstances",
                            "route53:listTrafficPolicyInstancesByHostedZone",
                            "route53:listTrafficPolicyInstancesByPolicy",
                            "route53:listTrafficPolicyVersions",
                            "route53:listVPCAssociationAuthorizations",
                            "route53domains:checkDomainAvailability",
                            "route53domains:getContactReachabilityStatus",
                            "route53domains:getDomainDetail",
                            "route53domains:getOperationDetail",
                            "route53domains:listDomains",
                            "route53domains:listOperations",
                            "route53domains:listPrices",
                            "route53domains:listTagsForDomain",
                            "route53domains:viewBilling",
                            "route53resolver:getFirewallConfig",
                            "route53resolver:getFirewallDomainList",
                            "route53resolver:getFirewallRuleGroup",
                            "route53resolver:getFirewallRuleGroupAssociation",
                            "route53resolver:getFirewallRuleGroupPolicy",
                            "route53resolver:getOutpostResolver",
                            "route53resolver:getResolverDnssecConfig",
                            "route53resolver:getResolverQueryLogConfig",
                            "route53resolver:getResolverQueryLogConfigAssociation",
                            "route53resolver:getResolverQueryLogConfigPolicy",
                            "route53resolver:getResolverRule",
                            "route53resolver:getResolverRuleAssociation",
                            "route53resolver:getResolverRulePolicy",
                            "route53resolver:listFirewallConfigs",
                            "route53resolver:listFirewallDomainLists",
                            "route53resolver:listFirewallDomains",
                            "route53resolver:listFirewallRuleGroupAssociations",
                            "route53resolver:listFirewallRuleGroups",
                            "route53resolver:listFirewallRules",
                            "route53resolver:listOutpostResolvers",
                            "route53resolver:listResolverConfigs",
                            "route53resolver:listResolverDnssecConfigs",
                            "route53resolver:listResolverEndpointIpAddresses",
                            "route53resolver:listResolverEndpoints",
                            "route53resolver:listResolverQueryLogConfigAssociations",
                            "route53resolver:listResolverQueryLogConfigs",
                            "route53resolver:listResolverRuleAssociations",
                            "route53resolver:listResolverRules",
                            "route53resolver:listTagsForResource",
                            "rum:batchGetRumMetricDefinitions",
                            "rum:getAppMonitor",
                            "rum:listAppMonitors",
                            "rum:listRumMetricsDestinations",
                            "s3:describeJob",
                            "s3:describeMultiRegionAccessPointOperation",
                            "s3:getAccelerateConfiguration",
                            "s3:getAccessPoint",
                            "s3:getAccessPointConfigurationForObjectLambda",
                            "s3:getAccessPointForObjectLambda",
                            "s3:getAccessPointPolicy",
                            "s3:getAccessPointPolicyForObjectLambda",
                            "s3:getAccessPointPolicyStatus",
                            "s3:getAccessPointPolicyStatusForObjectLambda",
                            "s3:getAccountPublicAccessBlock",
                            "s3:getAnalyticsConfiguration",
                            "s3:getBucketAcl",
                            "s3:getBucketCORS",
                            "s3:getBucketLocation",
                            "s3:getBucketLogging",
                            "s3:getBucketNotification",
                            "s3:getBucketObjectLockConfiguration",
                            "s3:getBucketOwnershipControls",
                            "s3:getBucketPolicy",
                            "s3:getBucketPolicyStatus",
                            "s3:getBucketPublicAccessBlock",
                            "s3:getBucketRequestPayment",
                            "s3:getBucketVersioning",
                            "s3:getBucketWebsite",
                            "s3:getEncryptionConfiguration",
                            "s3:getIntelligentTieringConfiguration",
                            "s3:getInventoryConfiguration",
                            "s3:getLifecycleConfiguration",
                            "s3:getMetricsConfiguration",
                            "s3:getMultiRegionAccessPoint",
                            "s3:getMultiRegionAccessPointPolicy",
                            "s3:getMultiRegionAccessPointPolicyStatus",
                            "s3:getMultiRegionAccessPointRoutes",
                            "s3:getObjectLegalHold",
                            "s3:getObjectRetention",
                            "s3:getReplicationConfiguration",
                            "s3:getStorageLensConfiguration",
                            "s3:listAccessPoints",
                            "s3:listAccessPointsForObjectLambda",
                            "s3:listAllMyBuckets",
                            "s3:listBucket",
                            "s3:listBucketMultipartUploads",
                            "s3:listBucketVersions",
                            "s3:listJobs",
                            "s3:listMultipartUploadParts",
                            "s3:listMultiRegionAccessPoints",
                            "s3:listStorageLensConfigurations",
                            "s3express:getBucketPolicy",
                            "s3express:listAllMyDirectoryBuckets",
                            "sagemaker:describeAction",
                            "sagemaker:describeAlgorithm",
                            "sagemaker:describeApp",
                            "sagemaker:describeAppImageConfig",
                            "sagemaker:describeArtifact",
                            "sagemaker:describeAutoMLJob",
                            "sagemaker:describeCluster",
                            "sagemaker:describeClusterNode",
                            "sagemaker:describeCodeRepository",
                            "sagemaker:describeCompilationJob",
                            "sagemaker:describeContext",
                            "sagemaker:describeDataQualityJobDefinition",
                            "sagemaker:describeDevice",
                            "sagemaker:describeDeviceFleet",
                            "sagemaker:describeDomain",
                            "sagemaker:describeEdgeDeploymentPlan",
                            "sagemaker:describeEdgePackagingJob",
                            "sagemaker:describeEndpoint",
                            "sagemaker:describeEndpointConfig",
                            "sagemaker:describeExperiment",
                            "sagemaker:describeFeatureGroup",
                            "sagemaker:describeFeatureMetadata",
                            "sagemaker:describeFlowDefinition",
                            "sagemaker:describeHub",
                            "sagemaker:describeHubContent",
                            "sagemaker:describeHumanTaskUi",
                            "sagemaker:describeHyperParameterTuningJob",
                            "sagemaker:describeImage",
                            "sagemaker:describeImageVersion",
                            "sagemaker:describeInferenceComponent",
                            "sagemaker:describeInferenceExperiment",
                            "sagemaker:describeInferenceRecommendationsJob",
                            "sagemaker:describeLabelingJob",
                            "sagemaker:describeModel",
                            "sagemaker:describeModelBiasJobDefinition",
                            "sagemaker:describeModelCard",
                            "sagemaker:describeModelCardExportJob",
                            "sagemaker:describeModelExplainabilityJobDefinition",
                            "sagemaker:describeModelPackage",
                            "sagemaker:describeModelPackageGroup",
                            "sagemaker:describeModelQualityJobDefinition",
                            "sagemaker:describeMonitoringSchedule",
                            "sagemaker:describeNotebookInstance",
                            "sagemaker:describeNotebookInstanceLifecycleConfig",
                            "sagemaker:describePipeline",
                            "sagemaker:describePipelineDefinitionForExecution",
                            "sagemaker:describePipelineExecution",
                            "sagemaker:describeProcessingJob",
                            "sagemaker:describeProject",
                            "sagemaker:describeSpace",
                            "sagemaker:describeStudioLifecycleConfig",
                            "sagemaker:describeSubscribedWorkteam",
                            "sagemaker:describeTrainingJob",
                            "sagemaker:describeTransformJob",
                            "sagemaker:describeTrial",
                            "sagemaker:describeTrialComponent",
                            "sagemaker:describeUserProfile",
                            "sagemaker:describeWorkforce",
                            "sagemaker:describeWorkteam",
                            "sagemaker:getDeviceFleetReport",
                            "sagemaker:getModelPackageGroupPolicy",
                            "sagemaker:getSagemakerServicecatalogPortfolioStatus",
                            "sagemaker:listActions",
                            "sagemaker:listAlgorithms",
                            "sagemaker:listAliases",
                            "sagemaker:listAppImageConfigs",
                            "sagemaker:listApps",
                            "sagemaker:listArtifacts",
                            "sagemaker:listAssociations",
                            "sagemaker:listAutoMLJobs",
                            "sagemaker:listCandidatesForAutoMLJob",
                            "sagemaker:listClusterNodes",
                            "sagemaker:listClusters",
                            "sagemaker:listCodeRepositories",
                            "sagemaker:listCompilationJobs",
                            "sagemaker:listContexts",
                            "sagemaker:listDataQualityJobDefinitions",
                            "sagemaker:listDeviceFleets",
                            "sagemaker:listDevices",
                            "sagemaker:listDomains",
                            "sagemaker:listEdgeDeploymentPlans",
                            "sagemaker:listEdgePackagingJobs",
                            "sagemaker:listEndpointConfigs",
                            "sagemaker:listEndpoints",
                            "sagemaker:listExperiments",
                            "sagemaker:listFeatureGroups",
                            "sagemaker:listFlowDefinitions",
                            "sagemaker:listHubContents",
                            "sagemaker:listHubContentVersions",
                            "sagemaker:listHubs",
                            "sagemaker:listHumanTaskUis",
                            "sagemaker:listHyperParameterTuningJobs",
                            "sagemaker:listImages",
                            "sagemaker:listImageVersions",
                            "sagemaker:listInferenceComponents",
                            "sagemaker:listInferenceExperiments",
                            "sagemaker:listInferenceRecommendationsJobs",
                            "sagemaker:listInferenceRecommendationsJobSteps",
                            "sagemaker:listLabelingJobs",
                            "sagemaker:listLabelingJobsForWorkteam",
                            "sagemaker:listLineageGroups",
                            "sagemaker:listModelBiasJobDefinitions",
                            "sagemaker:listModelCardExportJobs",
                            "sagemaker:listModelCards",
                            "sagemaker:listModelCardVersions",
                            "sagemaker:listModelExplainabilityJobDefinitions",
                            "sagemaker:listModelMetadata",
                            "sagemaker:listModelPackageGroups",
                            "sagemaker:listModelPackages",
                            "sagemaker:listModelQualityJobDefinitions",
                            "sagemaker:listModels",
                            "sagemaker:listMonitoringAlertHistory",
                            "sagemaker:listMonitoringAlerts",
                            "sagemaker:listMonitoringExecutions",
                            "sagemaker:listMonitoringSchedules",
                            "sagemaker:listNotebookInstanceLifecycleConfigs",
                            "sagemaker:listNotebookInstances",
                            "sagemaker:listPipelineExecutions",
                            "sagemaker:listPipelineExecutionSteps",
                            "sagemaker:listPipelineParametersForExecution",
                            "sagemaker:listPipelines",
                            "sagemaker:listProcessingJobs",
                            "sagemaker:listProjects",
                            "sagemaker:listSpaces",
                            "sagemaker:listStageDevices",
                            "sagemaker:listStudioLifecycleConfigs",
                            "sagemaker:listSubscribedWorkteams",
                            "sagemaker:listTags",
                            "sagemaker:listTrainingJobs",
                            "sagemaker:listTrainingJobsForHyperParameterTuningJob",
                            "sagemaker:listTransformJobs",
                            "sagemaker:listTrialComponents",
                            "sagemaker:listTrials",
                            "sagemaker:listUserProfiles",
                            "sagemaker:listWorkforces",
                            "sagemaker:listWorkteams",
                            "savingsplans:describeSavingsPlans",
                            "scheduler:getSchedule",
                            "scheduler:getScheduleGroup",
                            "scheduler:listScheduleGroups",
                            "scheduler:listSchedules",
                            "schemas:describeCodeBinding",
                            "schemas:describeDiscoverer",
                            "schemas:describeRegistry",
                            "schemas:describeSchema",
                            "schemas:getCodeBindingSource",
                            "schemas:getDiscoveredSchema",
                            "schemas:getResourcePolicy",
                            "schemas:listDiscoverers",
                            "schemas:listRegistries",
                            "schemas:listSchemas",
                            "schemas:listSchemaVersions",
                            "sdb:domainMetadata",
                            "sdb:listDomains",
                            "secretsmanager:describeSecret",
                            "secretsmanager:getResourcePolicy",
                            "secretsmanager:listSecrets",
                            "secretsmanager:listSecretVersionIds",
                            "securityhub:getEnabledStandards",
                            "securityhub:getFindings",
                            "securityhub:getInsightResults",
                            "securityhub:getInsights",
                            "securityhub:getMasterAccount",
                            "securityhub:getMembers",
                            "securityhub:listEnabledProductsForImport",
                            "securityhub:listInvitations",
                            "securityhub:listMembers",
                            "securitylake:getDataLakeExceptionSubscription",
                            "securitylake:getDataLakeOrganizationConfiguration",
                            "securitylake:getDataLakeSources",
                            "securitylake:getSubscriber",
                            "securitylake:listDataLakeExceptions",
                            "securitylake:listDataLakes",
                            "securitylake:listLogSources",
                            "securitylake:listSubscribers",
                            "serverlessrepo:getApplication",
                            "serverlessrepo:getApplicationPolicy",
                            "serverlessrepo:getCloudFormationTemplate",
                            "serverlessrepo:listApplicationDependencies",
                            "serverlessrepo:listApplications",
                            "serverlessrepo:listApplicationVersions",
                            "servicecatalog:describeConstraint",
                            "servicecatalog:describePortfolio",
                            "servicecatalog:describeProduct",
                            "servicecatalog:describeProductAsAdmin",
                            "servicecatalog:describeProductView",
                            "servicecatalog:describeProvisioningArtifact",
                            "servicecatalog:describeProvisioningParameters",
                            "servicecatalog:describeRecord",
                            "servicecatalog:listAcceptedPortfolioShares",
                            "servicecatalog:listConstraintsForPortfolio",
                            "servicecatalog:listLaunchPaths",
                            "servicecatalog:listPortfolioAccess",
                            "servicecatalog:listPortfolios",
                            "servicecatalog:listPortfoliosForProduct",
                            "servicecatalog:listPrincipalsForPortfolio",
                            "servicecatalog:listProvisioningArtifacts",
                            "servicecatalog:listRecordHistory",
                            "servicecatalog:scanProvisionedProducts",
                            "servicecatalog:searchProducts",
                            "servicequotas:getAssociationForServiceQuotaTemplate",
                            "servicequotas:getAWSDefaultServiceQuota",
                            "servicequotas:getRequestedServiceQuotaChange",
                            "servicequotas:getServiceQuota",
                            "servicequotas:getServiceQuotaIncreaseRequestFromTemplate",
                            "servicequotas:listAWSDefaultServiceQuotas",
                            "servicequotas:listRequestedServiceQuotaChangeHistory",
                            "servicequotas:listRequestedServiceQuotaChangeHistoryByQuota",
                            "servicequotas:listServiceQuotaIncreaseRequestsInTemplate",
                            "servicequotas:listServiceQuotas",
                            "servicequotas:listServices",
                            "ses:describeActiveReceiptRuleSet",
                            "ses:describeConfigurationSet",
                            "ses:describeReceiptRule",
                            "ses:describeReceiptRuleSet",
                            "ses:getAccount",
                            "ses:getAccountSendingEnabled",
                            "ses:getBlacklistReports",
                            "ses:getConfigurationSet",
                            "ses:getConfigurationSetEventDestinations",
                            "ses:getContactList",
                            "ses:getDedicatedIp",
                            "ses:getDedicatedIpPool",
                            "ses:getDedicatedIps",
                            "ses:getDeliverabilityDashboardOptions",
                            "ses:getDeliverabilityTestReport",
                            "ses:getDomainDeliverabilityCampaign",
                            "ses:getDomainStatisticsReport",
                            "ses:getEmailIdentity",
                            "ses:getIdentityDkimAttributes",
                            "ses:getIdentityMailFromDomainAttributes",
                            "ses:getIdentityNotificationAttributes",
                            "ses:getIdentityPolicies",
                            "ses:getIdentityVerificationAttributes",
                            "ses:getImportJob",
                            "ses:getSendQuota",
                            "ses:getSendStatistics",
                            "ses:listConfigurationSets",
                            "ses:listContactLists",
                            "ses:listContacts",
                            "ses:listCustomVerificationEmailTemplates",
                            "ses:listDedicatedIpPools",
                            "ses:listDeliverabilityTestReports",
                            "ses:listDomainDeliverabilityCampaigns",
                            "ses:listEmailIdentities",
                            "ses:listEmailTemplates",
                            "ses:listIdentities",
                            "ses:listIdentityPolicies",
                            "ses:listImportJobs",
                            "ses:listReceiptFilters",
                            "ses:listReceiptRuleSets",
                            "ses:listRecommendations",
                            "ses:listTagsForResource",
                            "ses:listTemplates",
                            "ses:listVerifiedEmailAddresses",
                            "shield:describeAttack",
                            "shield:describeProtection",
                            "shield:describeSubscription",
                            "shield:listAttacks",
                            "shield:listProtections",
                            "sms-voice:getConfigurationSetEventDestinations",
                            "sms:getConnectors",
                            "sms:getReplicationJobs",
                            "sms:getReplicationRuns",
                            "sms:getServers",
                            "snowball:describeAddress",
                            "snowball:describeAddresses",
                            "snowball:describeJob",
                            "snowball:getSnowballUsage",
                            "snowball:listJobs",
                            "snowball:listServiceVersions",
                            "sns:checkIfPhoneNumberIsOptedOut",
                            "sns:getDataProtectionPolicy",
                            "sns:getEndpointAttributes",
                            "sns:getPlatformApplicationAttributes",
                            "sns:getSMSAttributes",
                            "sns:getSMSSandboxAccountStatus",
                            "sns:getSubscriptionAttributes",
                            "sns:getTopicAttributes",
                            "sns:listEndpointsByPlatformApplication",
                            "sns:listOriginationNumbers",
                            "sns:listPhoneNumbersOptedOut",
                            "sns:listPlatformApplications",
                            "sns:listSMSSandboxPhoneNumbers",
                            "sns:listSubscriptions",
                            "sns:listSubscriptionsByTopic",
                            "sns:listTopics",
                            "sqs:getQueueAttributes",
                            "sqs:getQueueUrl",
                            "sqs:listDeadLetterSourceQueues",
                            "sqs:listQueues",
                            "ssm-contacts:describeEngagement",
                            "ssm-contacts:describePage",
                            "ssm-contacts:getContact",
                            "ssm-contacts:getContactChannel",
                            "ssm-contacts:getContactPolicy",
                            "ssm-contacts:getRotation",
                            "ssm-contacts:getRotationOverride",
                            "ssm-contacts:listContactChannels",
                            "ssm-contacts:listContacts",
                            "ssm-contacts:listEngagements",
                            "ssm-contacts:listPageReceipts",
                            "ssm-contacts:listPageResolutions",
                            "ssm-contacts:listPagesByContact",
                            "ssm-contacts:listPagesByEngagement",
                            "ssm-contacts:listPreviewRotationShifts",
                            "ssm-contacts:listRotationOverrides",
                            "ssm-contacts:listRotations",
                            "ssm-contacts:listRotationShifts",
                            "ssm-incidents:getIncidentRecord",
                            "ssm-incidents:getReplicationSet",
                            "ssm-incidents:getResourcePolicies",
                            "ssm-incidents:getResponsePlan",
                            "ssm-incidents:getTimelineEvent",
                            "ssm-incidents:listIncidentRecords",
                            "ssm-incidents:listRelatedItems",
                            "ssm-incidents:listReplicationSets",
                            "ssm-incidents:listResponsePlans",
                            "ssm-incidents:listTimelineEvents",
                            "ssm-sap:getApplication",
                            "ssm-sap:getComponent",
                            "ssm-sap:getDatabase",
                            "ssm-sap:getOperation",
                            "ssm-sap:getResourcePermission",
                            "ssm-sap:listApplications",
                            "ssm-sap:listComponents",
                            "ssm-sap:listDatabases",
                            "ssm-sap:listOperations",
                            "ssm:describeActivations",
                            "ssm:describeAssociation",
                            "ssm:describeAssociationExecutions",
                            "ssm:describeAssociationExecutionTargets",
                            "ssm:describeAutomationExecutions",
                            "ssm:describeAutomationStepExecutions",
                            "ssm:describeAvailablePatches",
                            "ssm:describeDocument",
                            "ssm:describeDocumentPermission",
                            "ssm:describeEffectiveInstanceAssociations",
                            "ssm:describeEffectivePatchesForPatchBaseline",
                            "ssm:describeInstanceAssociationsStatus",
                            "ssm:describeInstanceInformation",
                            "ssm:describeInstancePatches",
                            "ssm:describeInstancePatchStates",
                            "ssm:describeInstancePatchStatesForPatchGroup",
                            "ssm:describeInventoryDeletions",
                            "ssm:describeMaintenanceWindowExecutions",
                            "ssm:describeMaintenanceWindowExecutionTaskInvocations",
                            "ssm:describeMaintenanceWindowExecutionTasks",
                            "ssm:describeMaintenanceWindows",
                            "ssm:describeMaintenanceWindowSchedule",
                            "ssm:describeMaintenanceWindowsForTarget",
                            "ssm:describeMaintenanceWindowTargets",
                            "ssm:describeMaintenanceWindowTasks",
                            "ssm:describeOpsItems",
                            "ssm:describeParameters",
                            "ssm:describePatchBaselines",
                            "ssm:describePatchGroups",
                            "ssm:describePatchGroupState",
                            "ssm:describePatchProperties",
                            "ssm:describeSessions",
                            "ssm:getAutomationExecution",
                            "ssm:getCalendarState",
                            "ssm:getCommandInvocation",
                            "ssm:getConnectionStatus",
                            "ssm:getDefaultPatchBaseline",
                            "ssm:getDeployablePatchSnapshotForInstance",
                            "ssm:getInventorySchema",
                            "ssm:getMaintenanceWindow",
                            "ssm:getMaintenanceWindowExecution",
                            "ssm:getMaintenanceWindowExecutionTask",
                            "ssm:getMaintenanceWindowExecutionTaskInvocation",
                            "ssm:getMaintenanceWindowTask",
                            "ssm:getOpsItem",
                            "ssm:getOpsMetadata",
                            "ssm:getOpsSummary",
                            "ssm:getPatchBaseline",
                            "ssm:getPatchBaselineForPatchGroup",
                            "ssm:getResourcePolicies",
                            "ssm:getServiceSetting",
                            "ssm:listAssociations",
                            "ssm:listAssociationVersions",
                            "ssm:listCommandInvocations",
                            "ssm:listCommands",
                            "ssm:listComplianceItems",
                            "ssm:listComplianceSummaries",
                            "ssm:listDocuments",
                            "ssm:listDocumentMetadataHistory",
                            "ssm:listDocumentVersions",
                            "ssm:listOpsItemEvents",
                            "ssm:listOpsItemRelatedItems",
                            "ssm:listOpsMetadata",
                            "ssm:listResourceComplianceSummaries",
                            "ssm:listResourceDataSync",
                            "ssm:listTagsForResource",
                            "sso:describeApplicationAssignment",
                            "sso:describeApplicationProvider",
                            "sso:describeApplication",
                            "sso:describeInstance",
                            "sso:describeTrustedTokenIssuer",
                            "sso:getApplicationAccessScope",
                            "sso:getApplicationAssignmentConfiguration",
                            "sso:getApplicationAuthenticationMethod",
                            "sso:getApplicationGrant",
                            "sso:getApplicationInstance",
                            "sso:getApplicationTemplate",
                            "sso:getManagedApplicationInstance",
                            "sso:getSharedSsoConfiguration",
                            "sso:listApplicationAccessScopes",
                            "sso:listApplicationAssignments",
                            "sso:listApplicationAuthenticationMethods",
                            "sso:listApplicationGrants",
                            "sso:listApplicationInstances",
                            "sso:listApplicationProviders",
                            "sso:listApplications",
                            "sso:listApplicationTemplates",
                            "sso:listDirectoryAssociations",
                            "sso:listInstances",
                            "sso:listProfileAssociations",
                            "sso:listTrustedTokenIssuers",
                            "states:describeActivity",
                            "states:describeExecution",
                            "states:describeMapRun",
                            "states:describeStateMachine",
                            "states:describeStateMachineAlias",
                            "states:describeStateMachineForExecution",
                            "states:getExecutionHistory",
                            "states:listActivities",
                            "states:listExecutions",
                            "states:listMapRuns",
                            "states:listStateMachineAliases",
                            "states:listStateMachines",
                            "states:listStateMachineVersions",
                            "storagegateway:describeBandwidthRateLimit",
                            "storagegateway:describeCache",
                            "storagegateway:describeCachediSCSIVolumes",
                            "storagegateway:describeFileSystemAssociations",
                            "storagegateway:describeGatewayInformation",
                            "storagegateway:describeMaintenanceStartTime",
                            "storagegateway:describeNFSFileShares",
                            "storagegateway:describeSMBFileShares",
                            "storagegateway:describeSMBSettings",
                            "storagegateway:describeSnapshotSchedule",
                            "storagegateway:describeStorediSCSIVolumes",
                            "storagegateway:describeTapeArchives",
                            "storagegateway:describeTapeRecoveryPoints",
                            "storagegateway:describeTapes",
                            "storagegateway:describeUploadBuffer",
                            "storagegateway:describeVTLDevices",
                            "storagegateway:describeWorkingStorage",
                            "storagegateway:listAutomaticTapeCreationPolicies",
                            "storagegateway:listFileShares",
                            "storagegateway:listFileSystemAssociations",
                            "storagegateway:listGateways",
                            "storagegateway:listLocalDisks",
                            "storagegateway:listTagsForResource",
                            "storagegateway:listTapes",
                            "storagegateway:listVolumeInitiators",
                            "storagegateway:listVolumeRecoveryPoints",
                            "storagegateway:listVolumes",
                            "swf:countClosedWorkflowExecutions",
                            "swf:countOpenWorkflowExecutions",
                            "swf:countPendingActivityTasks",
                            "swf:countPendingDecisionTasks",
                            "swf:describeActivityType",
                            "swf:describeDomain",
                            "swf:describeWorkflowExecution",
                            "swf:describeWorkflowType",
                            "swf:getWorkflowExecutionHistory",
                            "swf:listActivityTypes",
                            "swf:listClosedWorkflowExecutions",
                            "swf:listDomains",
                            "swf:listOpenWorkflowExecutions",
                            "swf:listWorkflowTypes",
                            "synthetics:describeCanaries",
                            "synthetics:describeCanariesLastRun",
                            "synthetics:describeRuntimeVersions",
                            "synthetics:getCanary",
                            "synthetics:getCanaryRuns",
                            "synthetics:getGroup",
                            "synthetics:listAssociatedGroups",
                            "synthetics:listGroupResources",
                            "synthetics:listGroups",
                            "tiros:createQuery",
                            "tiros:getQueryAnswer",
                            "tiros:getQueryExplanation",
                            "transcribe:describeLanguageModel",
                            "transcribe:getCallAnalyticsCategory",
                            "transcribe:getCallAnalyticsJob",
                            "transcribe:getMedicalTranscriptionJob",
                            "transcribe:getMedicalVocabulary",
                            "transcribe:getTranscriptionJob",
                            "transcribe:getVocabulary",
                            "transcribe:getVocabularyFilter",
                            "transcribe:listCallAnalyticsCategories",
                            "transcribe:listCallAnalyticsJobs",
                            "transcribe:listLanguageModels",
                            "transcribe:listMedicalTranscriptionJobs",
                            "transcribe:listMedicalVocabularies",
                            "transcribe:listTranscriptionJobs",
                            "transcribe:listVocabularies",
                            "transcribe:listVocabularyFilters",
                            "transfer:describeAccess",
                            "transfer:describeAgreement",
                            "transfer:describeConnector",
                            "transfer:describeExecution",
                            "transfer:describeProfile",
                            "transfer:describeServer",
                            "transfer:describeUser",
                            "transfer:describeWorkflow",
                            "transfer:listAccesses",
                            "transfer:listAgreements",
                            "transfer:listConnectors",
                            "transfer:listExecutions",
                            "transfer:listHostKeys",
                            "transfer:listProfiles",
                            "transfer:listServers",
                            "transfer:listTagsForResource",
                            "transfer:listUsers",
                            "transfer:listWorkflows",
                            "transfer:sendWorkflowStepState",
                            "trustedadvisor:getOrganizationRecommendation",
                            "trustedadvisor:getRecommendation",
                            "trustedadvisor:listChecks",
                            "trustedadvisor:listOrganizationRecommendationAccounts",
                            "trustedadvisor:listOrganizationRecommendationResources",
                            "trustedadvisor:listOrganizationRecommendations",
                            "trustedadvisor:listRecommendationResources",
                            "trustedadvisor:listRecommendations",
                            "verifiedpermissions:getIdentitySource",
                            "verifiedpermissions:getPolicy",
                            "verifiedpermissions:getPolicyStore",
                            "verifiedpermissions:getPolicyTemplate",
                            "verifiedpermissions:getSchema",
                            "verifiedpermissions:listIdentitySources",
                            "verifiedpermissions:listPolicies",
                            "verifiedpermissions:listPolicyStores",
                            "verifiedpermissions:listPolicyTemplates",
                            "vpc-lattice:getAccessLogSubscription",
                            "vpc-lattice:getAuthPolicy",
                            "vpc-lattice:getListener",
                            "vpc-lattice:getResourcePolicy",
                            "vpc-lattice:getRule",
                            "vpc-lattice:getService",
                            "vpc-lattice:getServiceNetwork",
                            "vpc-lattice:getServiceNetworkServiceAssociation",
                            "vpc-lattice:getServiceNetworkVpcAssociation",
                            "vpc-lattice:getTargetGroup",
                            "vpc-lattice:listAccessLogSubscriptions",
                            "vpc-lattice:listListeners",
                            "vpc-lattice:listRules",
                            "vpc-lattice:listServiceNetworks",
                            "vpc-lattice:listServiceNetworkServiceAssociations",
                            "vpc-lattice:listServiceNetworkVpcAssociations",
                            "vpc-lattice:listServices",
                            "vpc-lattice:listTargetGroups",
                            "vpc-lattice:listTargets",
                            "waf-regional:getByteMatchSet",
                            "waf-regional:getChangeTokenStatus",
                            "waf-regional:getGeoMatchSet",
                            "waf-regional:getIPSet",
                            "waf-regional:getLoggingConfiguration",
                            "waf-regional:getRateBasedRule",
                            "waf-regional:getRegexMatchSet",
                            "waf-regional:getRegexPatternSet",
                            "waf-regional:getRule",
                            "waf-regional:getRuleGroup",
                            "waf-regional:getSqlInjectionMatchSet",
                            "waf-regional:getWebACL",
                            "waf-regional:getWebACLForResource",
                            "waf-regional:listActivatedRulesInRuleGroup",
                            "waf-regional:listByteMatchSets",
                            "waf-regional:listGeoMatchSets",
                            "waf-regional:listIPSets",
                            "waf-regional:listLoggingConfigurations",
                            "waf-regional:listRateBasedRules",
                            "waf-regional:listRegexMatchSets",
                            "waf-regional:listRegexPatternSets",
                            "waf-regional:listResourcesForWebACL",
                            "waf-regional:listRuleGroups",
                            "waf-regional:listRules",
                            "waf-regional:listSqlInjectionMatchSets",
                            "waf-regional:listWebACLs",
                            "waf:getByteMatchSet",
                            "waf:getChangeTokenStatus",
                            "waf:getGeoMatchSet",
                            "waf:getIPSet",
                            "waf:getLoggingConfiguration",
                            "waf:getRateBasedRule",
                            "waf:getRegexMatchSet",
                            "waf:getRegexPatternSet",
                            "waf:getRule",
                            "waf:getRuleGroup",
                            "waf:getSampledRequests",
                            "waf:getSizeConstraintSet",
                            "waf:getSqlInjectionMatchSet",
                            "waf:getWebACL",
                            "waf:getXssMatchSet",
                            "waf:listActivatedRulesInRuleGroup",
                            "waf:listByteMatchSets",
                            "waf:listGeoMatchSets",
                            "waf:listIPSets",
                            "waf:listLoggingConfigurations",
                            "waf:listRateBasedRules",
                            "waf:listRegexMatchSets",
                            "waf:listRegexPatternSets",
                            "waf:listRuleGroups",
                            "waf:listRules",
                            "waf:listSizeConstraintSets",
                            "waf:listSqlInjectionMatchSets",
                            "waf:listWebACLs",
                            "waf:listXssMatchSets",
                            "wafv2:checkCapacity",
                            "wafv2:describeManagedRuleGroup",
                            "wafv2:getIPSet",
                            "wafv2:getLoggingConfiguration",
                            "wafv2:getPermissionPolicy",
                            "wafv2:getRateBasedStatementManagedKeys",
                            "wafv2:getRegexPatternSet",
                            "wafv2:getRuleGroup",
                            "wafv2:getSampledRequests",
                            "wafv2:getWebACL",
                            "wafv2:getWebACLForResource",
                            "wafv2:listAvailableManagedRuleGroups",
                            "wafv2:listIPSets",
                            "wafv2:listLoggingConfigurations",
                            "wafv2:listRegexPatternSets",
                            "wafv2:listResourcesForWebACL",
                            "wafv2:listRuleGroups",
                            "wafv2:listTagsForResource",
                            "wafv2:listWebACLs",
                            "workdocs:checkAlias",
                            "workdocs:describeAvailableDirectories",
                            "workdocs:describeInstances",
                            "workmail:describeGroup",
                            "workmail:describeOrganization",
                            "workmail:describeResource",
                            "workmail:describeUser",
                            "workmail:listAliases",
                            "workmail:listGroupMembers",
                            "workmail:listGroups",
                            "workmail:listMailboxPermissions",
                            "workmail:listOrganizations",
                            "workmail:listResourceDelegates",
                            "workmail:listResources",
                            "workmail:listUsers",
                            "workspaces-web:getBrowserSettings",
                            "workspaces-web:getIdentityProvider",
                            "workspaces-web:getNetworkSettings",
                            "workspaces-web:getPortal",
                            "workspaces-web:getPortalServiceProviderMetadata",
                            "workspaces-web:getTrustStoreCertificate",
                            "workspaces-web:getUserSettings",
                            "workspaces-web:listBrowserSettings",
                            "workspaces-web:listIdentityProviders",
                            "workspaces-web:listNetworkSettings",
                            "workspaces-web:listPortals",
                            "workspaces-web:listTagsForResource",
                            "workspaces-web:listTrustStoreCertificates",
                            "workspaces-web:listTrustStores",
                            "workspaces-web:listUserSettings",
                            "workspaces:describeAccount",
                            "workspaces:describeAccountModifications",
                            "workspaces:describeApplicationAssociations",
                            "workspaces:describeWorkspaceAssociations",
                            "workspaces:describeIpGroups",
                            "workspaces:describeTags",
                            "workspaces:describeWorkspaceBundles",
                            "workspaces:describeWorkspaceDirectories",
                            "workspaces:describeWorkspaceImages",
                            "workspaces:describeWorkspaces",
                            "workspaces:describeWorkspacesConnectionStatus",
                            "xray:getEncryptionConfig",
                            "xray:getGroup",
                            "xray:getGroups",
                            "xray:getSamplingRules",
                            "xray:listResourcePolicies",
                            "xray:getInsightImpactGraph",
                            "xray:getSamplingStatisticSummaries",
                            "xray:getSamplingTargets",
                            "xray:getServiceGraph",
                            "xray:getTimeSeriesServiceStatistics",
                            "xray:getTraceGraph"
                        ],
                        "Effect": "Allow",
                        "Resource": [
                            "*"
                        ]
                    }
                ],
                "Version": "2012-10-17"
            },
            "tags": []
        },
        {
            "name": "ReadOnlyAccess",
            "arn": "arn:aws:iam::aws:policy/ReadOnlyAccess",
            "entity": "ANPAILL3HVNFSB6DCOWYQ",
            "version_id": "v119",
            "type": "AWS",
            "attached": true,
            "document": {
                "Version": "2012-10-17",
                "Statement": [
                    {
                        "Sid": "ReadOnlyActions",
                        "Effect": "Allow",
                        "Action": [
                            "a4b:Get*",
                            "a4b:List*",
                            "a4b:Search*",
                            "access-analyzer:GetAccessPreview",
                            "access-analyzer:GetAnalyzedResource",
                            "access-analyzer:GetAnalyzer",
                            "access-analyzer:GetArchiveRule",
                            "access-analyzer:GetFinding",
                            "access-analyzer:GetGeneratedPolicy",
                            "access-analyzer:ListAccessPreviewFindings",
                            "access-analyzer:ListAccessPreviews",
                            "access-analyzer:ListAnalyzedResources",
                            "access-analyzer:ListAnalyzers",
                            "access-analyzer:ListArchiveRules",
                            "access-analyzer:ListFindings",
                            "access-analyzer:ListPolicyGenerations",
                            "access-analyzer:ListTagsForResource",
                            "access-analyzer:ValidatePolicy",
                            "account:GetAccountInformation",
                            "account:GetAlternateContact",
                            "account:GetChallengeQuestions",
                            "account:GetContactInformation",
                            "account:GetPrimaryEmail",
                            "account:GetRegionOptStatus",
                            "account:ListRegions",
                            "acm-pca:Describe*",
                            "acm-pca:Get*",
                            "acm-pca:List*",
                            "acm:Describe*",
                            "acm:Get*",
                            "acm:List*",
                            "airflow:ListEnvironments",
                            "airflow:ListTagsForResource",
                            "amplify:GetApp",
                            "amplify:GetBranch",
                            "amplify:GetDomainAssociation",
                            "amplify:GetJob",
                            "amplify:ListApps",
                            "amplify:ListBranches",
                            "amplify:ListDomainAssociations",
                            "amplify:ListJobs",
                            "aoss:BatchGetCollection",
                            "aoss:BatchGetLifecyclePolicy",
                            "aoss:BatchGetVpcEndpoint",
                            "aoss:GetAccessPolicy",
                            "aoss:GetAccountSettings",
                            "aoss:GetPoliciesStats",
                            "aoss:GetSecurityConfig",
                            "aoss:GetSecurityPolicy",
                            "aoss:ListAccessPolicies",
                            "aoss:ListCollections",
                            "aoss:ListLifecyclePolicies",
                            "aoss:ListSecurityConfigs",
                            "aoss:ListSecurityPolicies",
                            "aoss:ListTagsForResource",
                            "aoss:ListVpcEndpoints",
                            "apigateway:GET",
                            "appconfig:GetApplication",
                            "appconfig:GetConfiguration",
                            "appconfig:GetConfigurationProfile",
                            "appconfig:GetDeployment",
                            "appconfig:GetDeploymentStrategy",
                            "appconfig:GetEnvironment",
                            "appconfig:GetHostedConfigurationVersion",
                            "appconfig:ListApplications",
                            "appconfig:ListConfigurationProfiles",
                            "appconfig:ListDeployments",
                            "appconfig:ListDeploymentStrategies",
                            "appconfig:ListEnvironments",
                            "appconfig:ListHostedConfigurationVersions",
                            "appconfig:ListTagsForResource",
                            "appfabric:GetAppAuthorization",
                            "appfabric:GetAppBundle",
                            "appfabric:GetIngestion",
                            "appfabric:GetIngestionDestination",
                            "appfabric:ListAppAuthorizations",
                            "appfabric:ListAppBundles",
                            "appfabric:ListIngestionDestinations",
                            "appfabric:ListIngestions",
                            "appfabric:ListTagsForResource",
                            "appflow:DescribeConnector",
                            "appflow:DescribeConnectorEntity",
                            "appflow:DescribeConnectorFields",
                            "appflow:DescribeConnectorProfiles",
                            "appflow:DescribeConnectors",
                            "appflow:DescribeFlow",
                            "appflow:DescribeFlowExecution",
                            "appflow:DescribeFlowExecutionRecords",
                            "appflow:DescribeFlows",
                            "appflow:ListConnectorEntities",
                            "appflow:ListConnectorFields",
                            "appflow:ListConnectors",
                            "appflow:ListFlows",
                            "appflow:ListTagsForResource",
                            "application-autoscaling:Describe*",
                            "application-autoscaling:ListTagsForResource",
                            "application-signals:BatchGetServiceLevelObjectiveBudgetReport",
                            "application-signals:GetService",
                            "application-signals:GetServiceLevelObjective",
                            "application-signals:ListServiceDependencies",
                            "application-signals:ListServiceDependents",
                            "application-signals:ListServiceLevelObjectives",
                            "application-signals:ListServiceOperations",
                            "application-signals:ListServices",
                            "application-signals:ListTagsForResource",
                            "applicationinsights:Describe*",
                            "applicationinsights:List*",
                            "appmesh:Describe*",
                            "appmesh:List*",
                            "apprunner:DescribeAutoScalingConfiguration",
                            "apprunner:DescribeCustomDomains",
                            "apprunner:DescribeObservabilityConfiguration",
                            "apprunner:DescribeService",
                            "apprunner:DescribeVpcConnector",
                            "apprunner:DescribeVpcIngressConnection",
                            "apprunner:DescribeWebAclForService",
                            "apprunner:ListAssociatedServicesForWebAcl",
                            "apprunner:ListAutoScalingConfigurations",
                            "apprunner:ListConnections",
                            "apprunner:ListObservabilityConfigurations",
                            "apprunner:ListOperations",
                            "apprunner:ListServices",
                            "apprunner:ListServicesForAutoScalingConfiguration",
                            "apprunner:ListTagsForResource",
                            "apprunner:ListVpcConnectors",
                            "apprunner:ListVpcIngressConnections",
                            "appstream:Describe*",
                            "appstream:List*",
                            "appstudio:GetAccountStatus",
                            "appstudio:GetEnablementJobStatus",
                            "appsync:Get*",
                            "appsync:List*",
                            "aps:DescribeAlertManagerDefinition",
                            "aps:DescribeLoggingConfiguration",
                            "aps:DescribeRuleGroupsNamespace",
                            "aps:DescribeScraper",
                            "aps:DescribeWorkspace",
                            "aps:GetAlertManagerSilence",
                            "aps:GetAlertManagerStatus",
                            "aps:GetDefaultScraperConfiguration",
                            "aps:GetLabels",
                            "aps:GetMetricMetadata",
                            "aps:GetSeries",
                            "aps:ListAlertManagerAlertGroups",
                            "aps:ListAlertManagerAlerts",
                            "aps:ListAlertManagerReceivers",
                            "aps:ListAlertManagerSilences",
                            "aps:ListAlerts",
                            "aps:ListRuleGroupsNamespaces",
                            "aps:ListRules",
                            "aps:ListScrapers",
                            "aps:ListTagsForResource",
                            "aps:ListWorkspaces",
                            "aps:QueryMetrics",
                            "arc-zonal-shift:GetManagedResource",
                            "arc-zonal-shift:ListAutoshifts",
                            "arc-zonal-shift:ListManagedResources",
                            "arc-zonal-shift:ListZonalShifts",
                            "artifact:GetReport",
                            "artifact:GetReportMetadata",
                            "artifact:GetTermForReport",
                            "artifact:ListReports",
                            "athena:Batch*",
                            "athena:Get*",
                            "athena:List*",
                            "auditmanager:GetAccountStatus",
                            "auditmanager:GetAssessment",
                            "auditmanager:GetAssessmentFramework",
                            "auditmanager:GetAssessmentReportUrl",
                            "auditmanager:GetChangeLogs",
                            "auditmanager:GetControl",
                            "auditmanager:GetDelegations",
                            "auditmanager:GetEvidence",
                            "auditmanager:GetEvidenceByEvidenceFolder",
                            "auditmanager:GetEvidenceFolder",
                            "auditmanager:GetEvidenceFoldersByAssessment",
                            "auditmanager:GetEvidenceFoldersByAssessmentControl",
                            "auditmanager:GetOrganizationAdminAccount",
                            "auditmanager:GetServicesInScope",
                            "auditmanager:GetSettings",
                            "auditmanager:ListAssessmentFrameworks",
                            "auditmanager:ListAssessmentReports",
                            "auditmanager:ListAssessments",
                            "auditmanager:ListControls",
                            "auditmanager:ListKeywordsForDataSource",
                            "auditmanager:ListNotifications",
                            "auditmanager:ListTagsForResource",
                            "auditmanager:ValidateAssessmentReportIntegrity",
                            "autoscaling-plans:Describe*",
                            "autoscaling-plans:GetScalingPlanResourceForecastData",
                            "autoscaling:Describe*",
                            "autoscaling:GetPredictiveScalingForecast",
                            "aws-portal:View*",
                            "backup-gateway:GetBandwidthRateLimitSchedule",
                            "backup-gateway:GetGateway",
                            "backup-gateway:GetHypervisor",
                            "backup-gateway:GetHypervisorPropertyMappings",
                            "backup-gateway:GetVirtualMachine",
                            "backup-gateway:ListGateways",
                            "backup-gateway:ListHypervisors",
                            "backup-gateway:ListTagsForResource",
                            "backup-gateway:ListVirtualMachines",
                            "backup:Describe*",
                            "backup:Get*",
                            "backup:List*",
                            "batch:Describe*",
                            "batch:List*",
                            "bedrock:GetAgent",
                            "bedrock:GetAgentActionGroup",
                            "bedrock:GetAgentAlias",
                            "bedrock:GetAgentKnowledgeBase",
                            "bedrock:GetAgentVersion",
                            "bedrock:GetCustomModel",
                            "bedrock:GetDataSource",
                            "bedrock:GetEvaluationJob",
                            "bedrock:GetFoundationModel",
                            "bedrock:GetFoundationModelAvailability",
                            "bedrock:GetGuardrail",
                            "bedrock:GetIngestionJob",
                            "bedrock:GetKnowledgeBase",
                            "bedrock:GetModelCustomizationJob",
                            "bedrock:GetModelInvocationLoggingConfiguration",
                            "bedrock:GetProvisionedModelThroughput",
                            "bedrock:GetUseCaseForModelAccess",
                            "bedrock:ListAgentActionGroups",
                            "bedrock:ListAgentAliases",
                            "bedrock:ListAgentKnowledgeBases",
                            "bedrock:ListAgents",
                            "bedrock:ListAgentVersions",
                            "bedrock:ListCustomModels",
                            "bedrock:ListDataSources",
                            "bedrock:ListEvaluationJobs",
                            "bedrock:ListFoundationModelAgreementOffers",
                            "bedrock:ListFoundationModels",
                            "bedrock:ListGuardrails",
                            "bedrock:ListIngestionJobs",
                            "bedrock:ListKnowledgeBases",
                            "bedrock:ListModelCustomizationJobs",
                            "bedrock:ListProvisionedModelThroughputs",
                            "billing:GetBillingData",
                            "billing:GetBillingDetails",
                            "billing:GetBillingNotifications",
                            "billing:GetBillingPreferences",
                            "billing:GetContractInformation",
                            "billing:GetCredits",
                            "billing:GetIAMAccessPreference",
                            "billing:GetSellerOfRecord",
                            "billing:ListBillingViews",
                            "billingconductor:GetBillingGroupCostReport",
                            "billingconductor:ListAccountAssociations",
                            "billingconductor:ListBillingGroupCostReports",
                            "billingconductor:ListBillingGroups",
                            "billingconductor:ListCustomLineItems",
                            "billingconductor:ListCustomLineItemVersions",
                            "billingconductor:ListPricingPlans",
                            "billingconductor:ListPricingPlansAssociatedWithPricingRule",
                            "billingconductor:ListPricingRules",
                            "billingconductor:ListPricingRulesAssociatedToPricingPlan",
                            "billingconductor:ListResourcesAssociatedToCustomLineItem",
                            "billingconductor:ListTagsForResource",
                            "braket:GetDevice",
                            "braket:GetJob",
                            "braket:GetQuantumTask",
                            "braket:SearchDevices",
                            "braket:SearchJobs",
                            "braket:SearchQuantumTasks",
                            "budgets:Describe*",
                            "budgets:ListTagsForResource",
                            "budgets:View*",
                            "cassandra:Select",
                            "ce:DescribeCostCategoryDefinition",
                            "ce:DescribeNotificationSubscription",
                            "ce:DescribeReport",
                            "ce:GetAnomalies",
                            "ce:GetAnomalyMonitors",
                            "ce:GetAnomalySubscriptions",
                            "ce:GetApproximateUsageRecords",
                            "ce:GetCostAndUsage",
                            "ce:GetCostAndUsageWithResources",
                            "ce:GetCostCategories",
                            "ce:GetCostForecast",
                            "ce:GetDimensionValues",
                            "ce:GetPreferences",
                            "ce:GetReservationCoverage",
                            "ce:GetReservationPurchaseRecommendation",
                            "ce:GetReservationUtilization",
                            "ce:GetRightsizingRecommendation",
                            "ce:GetSavingsPlanPurchaseRecommendationDetails",
                            "ce:GetSavingsPlansCoverage",
                            "ce:GetSavingsPlansPurchaseRecommendation",
                            "ce:GetSavingsPlansUtilization",
                            "ce:GetSavingsPlansUtilizationDetails",
                            "ce:GetTags",
                            "ce:GetUsageForecast",
                            "ce:ListCostAllocationTagBackfillHistory",
                            "ce:ListCostAllocationTags",
                            "ce:ListCostCategoryDefinitions",
                            "ce:ListSavingsPlansPurchaseRecommendationGeneration",
                            "ce:ListTagsForResource",
                            "chatbot:Describe*",
                            "chatbot:Get*",
                            "chatbot:ListMicrosoftTeamsChannelConfigurations",
                            "chatbot:ListMicrosoftTeamsConfiguredTeams",
                            "chatbot:ListMicrosoftTeamsUserIdentities",
                            "chatbot:ListTagsForResource",
                            "chime:Get*",
                            "chime:List*",
                            "chime:Retrieve*",
                            "chime:Search*",
                            "chime:Validate*",
                            "cleanrooms-ml:GetAudienceGenerationJob",
                            "cleanrooms-ml:GetAudienceModel",
                            "cleanrooms-ml:GetConfiguredAudienceModel",
                            "cleanrooms-ml:GetConfiguredAudienceModelPolicy",
                            "cleanrooms-ml:GetTrainingDataset",
                            "cleanrooms-ml:ListAudienceExportJobs",
                            "cleanrooms-ml:ListAudienceGenerationJobs",
                            "cleanrooms-ml:ListAudienceModels",
                            "cleanrooms-ml:ListConfiguredAudienceModels",
                            "cleanrooms-ml:ListTagsForResource",
                            "cleanrooms-ml:ListTrainingDatasets",
                            "cleanrooms:BatchGetCollaborationAnalysisTemplate",
                            "cleanrooms:BatchGetSchema",
                            "cleanrooms:GetAnalysisTemplate",
                            "cleanrooms:GetCollaboration",
                            "cleanrooms:GetCollaborationAnalysisTemplate",
                            "cleanrooms:GetConfiguredAudienceModelAssociation",
                            "cleanrooms:GetConfiguredTable",
                            "cleanrooms:GetConfiguredTableAnalysisRule",
                            "cleanrooms:GetConfiguredTableAssociation",
                            "cleanrooms:GetMembership",
                            "cleanrooms:GetProtectedQuery",
                            "cleanrooms:GetSchema",
                            "cleanrooms:GetSchemaAnalysisRule",
                            "cleanrooms:ListAnalysisTemplates",
                            "cleanrooms:ListCollaborationAnalysisTemplates",
                            "cleanrooms:ListCollaborationConfiguredAudienceModelAssociations",
                            "cleanrooms:ListCollaborations",
                            "cleanrooms:ListConfiguredTableAssociations",
                            "cleanrooms:ListConfiguredTables",
                            "cleanrooms:ListMembers",
                            "cleanrooms:ListMemberships",
                            "cleanrooms:ListProtectedQueries",
                            "cleanrooms:ListSchemas",
                            "cleanrooms:ListTagsForResource",
                            "cloud9:Describe*",
                            "cloud9:List*",
                            "clouddirectory:BatchRead",
                            "clouddirectory:Get*",
                            "clouddirectory:List*",
                            "clouddirectory:LookupPolicy",
                            "cloudformation:Describe*",
                            "cloudformation:Detect*",
                            "cloudformation:Estimate*",
                            "cloudformation:Get*",
                            "cloudformation:List*",
                            "cloudformation:ValidateTemplate",
                            "cloudfront-keyvaluestore:Describe*",
                            "cloudfront-keyvaluestore:Get*",
                            "cloudfront-keyvaluestore:List*",
                            "cloudfront:Describe*",
                            "cloudfront:Get*",
                            "cloudfront:List*",
                            "cloudhsm:Describe*",
                            "cloudhsm:List*",
                            "cloudsearch:Describe*",
                            "cloudsearch:List*",
                            "cloudtrail:Describe*",
                            "cloudtrail:Get*",
                            "cloudtrail:List*",
                            "cloudtrail:LookupEvents",
                            "cloudwatch:Describe*",
                            "cloudwatch:GenerateQuery",
                            "cloudwatch:Get*",
                            "cloudwatch:List*",
                            "codeartifact:DescribeDomain",
                            "codeartifact:DescribePackage",
                            "codeartifact:DescribePackageVersion",
                            "codeartifact:DescribeRepository",
                            "codeartifact:GetAuthorizationToken",
                            "codeartifact:GetDomainPermissionsPolicy",
                            "codeartifact:GetPackageVersionAsset",
                            "codeartifact:GetPackageVersionReadme",
                            "codeartifact:GetRepositoryEndpoint",
                            "codeartifact:GetRepositoryPermissionsPolicy",
                            "codeartifact:ListDomains",
                            "codeartifact:ListPackages",
                            "codeartifact:ListPackageVersionAssets",
                            "codeartifact:ListPackageVersionDependencies",
                            "codeartifact:ListPackageVersions",
                            "codeartifact:ListRepositories",
                            "codeartifact:ListRepositoriesInDomain",
                            "codeartifact:ListTagsForResource",
                            "codeartifact:ReadFromRepository",
                            "codebuild:BatchGet*",
                            "codebuild:DescribeCodeCoverages",
                            "codebuild:DescribeTestCases",
                            "codebuild:List*",
                            "codecatalyst:GetBillingAuthorization",
                            "codecatalyst:GetConnection",
                            "codecatalyst:GetPendingConnection",
                            "codecatalyst:ListConnections",
                            "codecatalyst:ListIamRolesForConnection",
                            "codecatalyst:ListTagsForResource",
                            "codecommit:BatchGet*",
                            "codecommit:Describe*",
                            "codecommit:Get*",
                            "codecommit:GitPull",
                            "codecommit:List*",
                            "codedeploy:BatchGet*",
                            "codedeploy:Get*",
                            "codedeploy:List*",
                            "codeguru-profiler:Describe*",
                            "codeguru-profiler:Get*",
                            "codeguru-profiler:List*",
                            "codeguru-reviewer:Describe*",
                            "codeguru-reviewer:Get*",
                            "codeguru-reviewer:List*",
                            "codepipeline:Get*",
                            "codepipeline:List*",
                            "codestar-connections:GetConnection",
                            "codestar-connections:GetHost",
                            "codestar-connections:GetRepositoryLink",
                            "codestar-connections:GetRepositorySyncStatus",
                            "codestar-connections:GetResourceSyncStatus",
                            "codestar-connections:GetSyncConfiguration",
                            "codestar-connections:ListConnections",
                            "codestar-connections:ListHosts",
                            "codestar-connections:ListRepositoryLinks",
                            "codestar-connections:ListRepositorySyncDefinitions",
                            "codestar-connections:ListSyncConfigurations",
                            "codestar-connections:ListTagsForResource",
                            "codestar-notifications:describeNotificationRule",
                            "codestar-notifications:listEventTypes",
                            "codestar-notifications:listNotificationRules",
                            "codestar-notifications:listTagsForResource",
                            "codestar-notifications:ListTargets",
                            "codestar:Describe*",
                            "codestar:Get*",
                            "codestar:List*",
                            "codestar:Verify*",
                            "cognito-identity:Describe*",
                            "cognito-identity:GetCredentialsForIdentity",
                            "cognito-identity:GetIdentityPoolAnalytics",
                            "cognito-identity:GetIdentityPoolDailyAnalytics",
                            "cognito-identity:GetIdentityPoolRoles",
                            "cognito-identity:GetIdentityProviderDailyAnalytics",
                            "cognito-identity:GetOpenIdToken",
                            "cognito-identity:GetOpenIdTokenForDeveloperIdentity",
                            "cognito-identity:List*",
                            "cognito-identity:Lookup*",
                            "cognito-idp:AdminGet*",
                            "cognito-idp:AdminList*",
                            "cognito-idp:Describe*",
                            "cognito-idp:Get*",
                            "cognito-idp:List*",
                            "cognito-sync:Describe*",
                            "cognito-sync:Get*",
                            "cognito-sync:List*",
                            "cognito-sync:QueryRecords",
                            "comprehend:BatchDetect*",
                            "comprehend:Classify*",
                            "comprehend:Contains*",
                            "comprehend:Describe*",
                            "comprehend:Detect*",
                            "comprehend:List*",
                            "compute-optimizer:DescribeRecommendationExportJobs",
                            "compute-optimizer:GetAutoScalingGroupRecommendations",
                            "compute-optimizer:GetEBSVolumeRecommendations",
                            "compute-optimizer:GetEC2InstanceRecommendations",
                            "compute-optimizer:GetEC2RecommendationProjectedMetrics",
                            "compute-optimizer:GetECSServiceRecommendationProjectedMetrics",
                            "compute-optimizer:GetECSServiceRecommendations",
                            "compute-optimizer:GetEffectiveRecommendationPreferences",
                            "compute-optimizer:GetEnrollmentStatus",
                            "compute-optimizer:GetEnrollmentStatusesForOrganization",
                            "compute-optimizer:GetLambdaFunctionRecommendations",
                            "compute-optimizer:GetLicenseRecommendations",
                            "compute-optimizer:GetRDSDatabaseRecommendationProjectedMetrics",
                            "compute-optimizer:GetRDSDatabaseRecommendations",
                            "compute-optimizer:GetRecommendationPreferences",
                            "compute-optimizer:GetRecommendationSummaries",
                            "config:BatchGetAggregateResourceConfig",
                            "config:BatchGetResourceConfig",
                            "config:Deliver*",
                            "config:Describe*",
                            "config:Get*",
                            "config:List*",
                            "config:SelectAggregateResourceConfig",
                            "config:SelectResourceConfig",
                            "connect:Describe*",
                            "connect:GetContactAttributes",
                            "connect:GetCurrentMetricData",
                            "connect:GetCurrentUserData",
                            "connect:GetFederationToken",
                            "connect:GetMetricData",
                            "connect:GetMetricDataV2",
                            "connect:GetTaskTemplate",
                            "connect:GetTrafficDistribution",
                            "connect:List*",
                            "consoleapp:GetDeviceIdentity",
                            "consoleapp:ListDeviceIdentities",
                            "consolidatedbilling:GetAccountBillingRole",
                            "consolidatedbilling:ListLinkedAccounts",
                            "controlcatalog:ListCommonControls",
                            "controlcatalog:ListDomains",
                            "controlcatalog:ListObjectives",
                            "cost-optimization-hub:GetPreferences",
                            "cost-optimization-hub:GetRecommendation",
                            "cost-optimization-hub:ListEnrollmentStatuses",
                            "cost-optimization-hub:ListRecommendations",
                            "cost-optimization-hub:ListRecommendationSummaries",
                            "cur:GetClassicReport",
                            "cur:GetClassicReportPreferences",
                            "cur:GetUsageReport",
                            "customer-verification:GetCustomerVerificationDetails",
                            "customer-verification:GetCustomerVerificationEligibility",
                            "databrew:DescribeDataset",
                            "databrew:DescribeJob",
                            "databrew:DescribeJobRun",
                            "databrew:DescribeProject",
                            "databrew:DescribeRecipe",
                            "databrew:DescribeRuleset",
                            "databrew:DescribeSchedule",
                            "databrew:ListDatasets",
                            "databrew:ListJobRuns",
                            "databrew:ListJobs",
                            "databrew:ListProjects",
                            "databrew:ListRecipes",
                            "databrew:ListRecipeVersions",
                            "databrew:ListRulesets",
                            "databrew:ListSchedules",
                            "databrew:ListTagsForResource",
                            "dataexchange:Get*",
                            "dataexchange:List*",
                            "datapipeline:Describe*",
                            "datapipeline:EvaluateExpression",
                            "datapipeline:Get*",
                            "datapipeline:List*",
                            "datapipeline:QueryObjects",
                            "datapipeline:Validate*",
                            "datasync:Describe*",
                            "datasync:List*",
                            "dax:BatchGetItem",
                            "dax:Describe*",
                            "dax:GetItem",
                            "dax:ListTags",
                            "dax:Query",
                            "dax:Scan",
                            "deadline:BatchGetJobEntity",
                            "deadline:GetApplicationVersion",
                            "deadline:GetBudget",
                            "deadline:GetFarm",
                            "deadline:GetFleet",
                            "deadline:GetJob",
                            "deadline:GetLicenseEndpoint",
                            "deadline:GetMonitor",
                            "deadline:GetQueue",
                            "deadline:GetQueueEnvironment",
                            "deadline:GetQueueFleetAssociation",
                            "deadline:GetSession",
                            "deadline:GetSessionAction",
                            "deadline:GetSessionsStatisticsAggregation",
                            "deadline:GetStep",
                            "deadline:GetStorageProfile",
                            "deadline:GetStorageProfileForQueue",
                            "deadline:GetTask",
                            "deadline:GetWorker",
                            "deadline:ListAvailableMeteredProducts",
                            "deadline:ListBudgets",
                            "deadline:ListFarmMembers",
                            "deadline:ListFarms",
                            "deadline:ListFleetMembers",
                            "deadline:ListFleets",
                            "deadline:ListJobMembers",
                            "deadline:ListJobs",
                            "deadline:ListLicenseEndpoints",
                            "deadline:ListMeteredProducts",
                            "deadline:ListMonitors",
                            "deadline:ListQueueEnvironments",
                            "deadline:ListQueueFleetAssociations",
                            "deadline:ListQueueMembers",
                            "deadline:ListQueues",
                            "deadline:ListSessionActions",
                            "deadline:ListSessions",
                            "deadline:ListSessionsForWorker",
                            "deadline:ListStepConsumers",
                            "deadline:ListStepDependencies",
                            "deadline:ListSteps",
                            "deadline:ListStorageProfiles",
                            "deadline:ListStorageProfilesForQueue",
                            "deadline:ListTagsForResource",
                            "deadline:ListTasks",
                            "deadline:ListWorkers",
                            "deadline:SearchJobs",
                            "deadline:SearchSteps",
                            "deadline:SearchTasks",
                            "deadline:SearchWorkers",
                            "deepcomposer:GetComposition",
                            "deepcomposer:GetModel",
                            "deepcomposer:GetSampleModel",
                            "deepcomposer:ListCompositions",
                            "deepcomposer:ListModels",
                            "deepcomposer:ListSampleModels",
                            "deepcomposer:ListTrainingTopics",
                            "detective:BatchGetGraphMemberDatasources",
                            "detective:BatchGetMembershipDatasources",
                            "detective:Get*",
                            "detective:List*",
                            "detective:SearchGraph",
                            "devicefarm:Get*",
                            "devicefarm:List*",
                            "devops-guru:DescribeAccountHealth",
                            "devops-guru:DescribeAccountOverview",
                            "devops-guru:DescribeAnomaly",
                            "devops-guru:DescribeEventSourcesConfig",
                            "devops-guru:DescribeFeedback",
                            "devops-guru:DescribeInsight",
                            "devops-guru:DescribeOrganizationHealth",
                            "devops-guru:DescribeOrganizationOverview",
                            "devops-guru:DescribeOrganizationResourceCollectionHealth",
                            "devops-guru:DescribeResourceCollectionHealth",
                            "devops-guru:DescribeServiceIntegration",
                            "devops-guru:GetCostEstimation",
                            "devops-guru:GetResourceCollection",
                            "devops-guru:ListAnomaliesForInsight",
                            "devops-guru:ListAnomalousLogGroups",
                            "devops-guru:ListEvents",
                            "devops-guru:ListInsights",
                            "devops-guru:ListMonitoredResources",
                            "devops-guru:ListNotificationChannels",
                            "devops-guru:ListOrganizationInsights",
                            "devops-guru:ListRecommendations",
                            "devops-guru:SearchInsights",
                            "devops-guru:StartCostEstimation",
                            "directconnect:Describe*",
                            "discovery:Describe*",
                            "discovery:Get*",
                            "discovery:List*",
                            "dlm:Get*",
                            "dms:Describe*",
                            "dms:List*",
                            "dms:Test*",
                            "drs:DescribeJobLogItems",
                            "drs:DescribeJobs",
                            "drs:DescribeLaunchConfigurationTemplates",
                            "drs:DescribeRecoveryInstances",
                            "drs:DescribeRecoverySnapshots",
                            "drs:DescribeReplicationConfigurationTemplates",
                            "drs:DescribeSourceNetworks",
                            "drs:DescribeSourceServers",
                            "drs:GetFailbackReplicationConfiguration",
                            "drs:GetLaunchConfiguration",
                            "drs:GetReplicationConfiguration",
                            "drs:ListExtensibleSourceServers",
                            "drs:ListLaunchActions",
                            "drs:ListStagingAccounts",
                            "drs:ListTagsForResource",
                            "ds:Check*",
                            "ds:Describe*",
                            "ds:Get*",
                            "ds:List*",
                            "ds:Verify*",
                            "dynamodb:BatchGet*",
                            "dynamodb:Describe*",
                            "dynamodb:Get*",
                            "dynamodb:List*",
                            "dynamodb:PartiQLSelect",
                            "dynamodb:Query",
                            "dynamodb:Scan",
                            "ec2:Describe*",
                            "ec2:Get*",
                            "ec2:ListImagesInRecycleBin",
                            "ec2:ListSnapshotsInRecycleBin",
                            "ec2:SearchLocalGatewayRoutes",
                            "ec2:SearchTransitGatewayRoutes",
                            "ec2messages:Get*",
                            "ecr-public:BatchCheckLayerAvailability",
                            "ecr-public:DescribeImages",
                            "ecr-public:DescribeImageTags",
                            "ecr-public:DescribeRegistries",
                            "ecr-public:DescribeRepositories",
                            "ecr-public:GetAuthorizationToken",
                            "ecr-public:GetRegistryCatalogData",
                            "ecr-public:GetRepositoryCatalogData",
                            "ecr-public:GetRepositoryPolicy",
                            "ecr-public:ListTagsForResource",
                            "ecr:BatchCheck*",
                            "ecr:BatchGet*",
                            "ecr:Describe*",
                            "ecr:Get*",
                            "ecr:List*",
                            "ecs:Describe*",
                            "ecs:List*",
                            "eks:Describe*",
                            "eks:List*",
                            "elastic-inference:DescribeAcceleratorOfferings",
                            "elastic-inference:DescribeAccelerators",
                            "elastic-inference:DescribeAcceleratorTypes",
                            "elastic-inference:ListTagsForResource",
                            "elasticache:Describe*",
                            "elasticache:List*",
                            "elasticbeanstalk:Check*",
                            "elasticbeanstalk:Describe*",
                            "elasticbeanstalk:List*",
                            "elasticbeanstalk:Request*",
                            "elasticbeanstalk:Retrieve*",
                            "elasticbeanstalk:Validate*",
                            "elasticfilesystem:Describe*",
                            "elasticfilesystem:ListTagsForResource",
                            "elasticloadbalancing:Describe*",
                            "elasticmapreduce:Describe*",
                            "elasticmapreduce:GetBlockPublicAccessConfiguration",
                            "elasticmapreduce:List*",
                            "elasticmapreduce:View*",
                            "elastictranscoder:List*",
                            "elastictranscoder:Read*",
                            "elemental-appliances-software:Get*",
                            "elemental-appliances-software:List*",
                            "emr-containers:DescribeJobRun",
                            "emr-containers:DescribeManagedEndpoint",
                            "emr-containers:DescribeVirtualCluster",
                            "emr-containers:ListJobRuns",
                            "emr-containers:ListManagedEndpoints",
                            "emr-containers:ListTagsForResource",
                            "emr-containers:ListVirtualClusters",
                            "emr-serverless:GetApplication",
                            "emr-serverless:GetDashboardForJobRun",
                            "emr-serverless:GetJobRun",
                            "emr-serverless:ListApplications",
                            "emr-serverless:ListJobRuns",
                            "emr-serverless:ListTagsForResource",
                            "es:Describe*",
                            "es:ESHttpGet",
                            "es:ESHttpHead",
                            "es:Get*",
                            "es:List*",
                            "events:Describe*",
                            "events:List*",
                            "events:Test*",
                            "evidently:GetExperiment",
                            "evidently:GetExperimentResults",
                            "evidently:GetFeature",
                            "evidently:GetLaunch",
                            "evidently:GetProject",
                            "evidently:GetSegment",
                            "evidently:ListExperiments",
                            "evidently:ListFeatures",
                            "evidently:ListLaunches",
                            "evidently:ListProjects",
                            "evidently:ListSegmentReferences",
                            "evidently:ListSegments",
                            "evidently:ListTagsForResource",
                            "evidently:TestSegmentPattern",
                            "firehose:Describe*",
                            "firehose:List*",
                            "fis:GetAction",
                            "fis:GetExperiment",
                            "fis:GetExperimentTargetAccountConfiguration",
                            "fis:GetExperimentTemplate",
                            "fis:GetTargetAccountConfiguration",
                            "fis:GetTargetResourceType",
                            "fis:ListActions",
                            "fis:ListExperimentResolvedTargets",
                            "fis:ListExperiments",
                            "fis:ListExperimentTargetAccountConfigurations",
                            "fis:ListExperimentTemplates",
                            "fis:ListTagsForResource",
                            "fis:ListTargetAccountConfigurations",
                            "fis:ListTargetResourceTypes",
                            "fms:GetAdminAccount",
                            "fms:GetAppsList",
                            "fms:GetComplianceDetail",
                            "fms:GetNotificationChannel",
                            "fms:GetPolicy",
                            "fms:GetProtectionStatus",
                            "fms:GetProtocolsList",
                            "fms:GetViolationDetails",
                            "fms:ListAppsLists",
                            "fms:ListComplianceStatus",
                            "fms:ListMemberAccounts",
                            "fms:ListPolicies",
                            "fms:ListProtocolsLists",
                            "fms:ListTagsForResource",
                            "forecast:DescribeAutoPredictor",
                            "forecast:DescribeDataset",
                            "forecast:DescribeDatasetGroup",
                            "forecast:DescribeDatasetImportJob",
                            "forecast:DescribeExplainability",
                            "forecast:DescribeExplainabilityExport",
                            "forecast:DescribeForecast",
                            "forecast:DescribeForecastExportJob",
                            "forecast:DescribeMonitor",
                            "forecast:DescribePredictor",
                            "forecast:DescribePredictorBacktestExportJob",
                            "forecast:DescribeWhatIfAnalysis",
                            "forecast:DescribeWhatIfForecast",
                            "forecast:DescribeWhatIfForecastExport",
                            "forecast:GetAccuracyMetrics",
                            "forecast:ListDatasetGroups",
                            "forecast:ListDatasetImportJobs",
                            "forecast:ListDatasets",
                            "forecast:ListExplainabilities",
                            "forecast:ListExplainabilityExports",
                            "forecast:ListForecastExportJobs",
                            "forecast:ListForecasts",
                            "forecast:ListMonitorEvaluations",
                            "forecast:ListMonitors",
                            "forecast:ListPredictorBacktestExportJobs",
                            "forecast:ListPredictors",
                            "forecast:ListWhatIfAnalyses",
                            "forecast:ListWhatIfForecastExports",
                            "forecast:ListWhatIfForecasts",
                            "forecast:QueryForecast",
                            "forecast:QueryWhatIfForecast",
                            "frauddetector:BatchGetVariable",
                            "frauddetector:DescribeDetector",
                            "frauddetector:DescribeModelVersions",
                            "frauddetector:GetBatchImportJobs",
                            "frauddetector:GetBatchPredictionJobs",
                            "frauddetector:GetDeleteEventsByEventTypeStatus",
                            "frauddetector:GetDetectors",
                            "frauddetector:GetDetectorVersion",
                            "frauddetector:GetEntityTypes",
                            "frauddetector:GetEvent",
                            "frauddetector:GetEventPredictionMetadata",
                            "frauddetector:GetEventTypes",
                            "frauddetector:GetExternalModels",
                            "frauddetector:GetKMSEncryptionKey",
                            "frauddetector:GetLabels",
                            "frauddetector:GetListElements",
                            "frauddetector:GetListsMetadata",
                            "frauddetector:GetModels",
                            "frauddetector:GetModelVersion",
                            "frauddetector:GetOutcomes",
                            "frauddetector:GetRules",
                            "frauddetector:GetVariables",
                            "frauddetector:ListEventPredictions",
                            "frauddetector:ListTagsForResource",
                            "freertos:Describe*",
                            "freertos:List*",
                            "freetier:GetFreeTierAlertPreference",
                            "freetier:GetFreeTierUsage",
                            "fsx:Describe*",
                            "fsx:List*",
                            "gamelift:Describe*",
                            "gamelift:Get*",
                            "gamelift:List*",
                            "gamelift:ResolveAlias",
                            "gamelift:Search*",
                            "glacier:Describe*",
                            "glacier:Get*",
                            "glacier:List*",
                            "globalaccelerator:Describe*",
                            "globalaccelerator:List*",
                            "glue:BatchGetCrawlers",
                            "glue:BatchGetDevEndpoints",
                            "glue:BatchGetJobs",
                            "glue:BatchGetPartition",
                            "glue:BatchGetTableOptimizer",
                            "glue:BatchGetTriggers",
                            "glue:BatchGetWorkflows",
                            "glue:CheckSchemaVersionValidity",
                            "glue:GetCatalogImportStatus",
                            "glue:GetClassifier",
                            "glue:GetClassifiers",
                            "glue:GetCrawler",
                            "glue:GetCrawlerMetrics",
                            "glue:GetCrawlers",
                            "glue:GetDatabase",
                            "glue:GetDatabases",
                            "glue:GetDataCatalogEncryptionSettings",
                            "glue:GetDataflowGraph",
                            "glue:GetDevEndpoint",
                            "glue:GetDevEndpoints",
                            "glue:GetJob",
                            "glue:GetJobBookmark",
                            "glue:GetJobRun",
                            "glue:GetJobRuns",
                            "glue:GetJobs",
                            "glue:GetMapping",
                            "glue:GetMLTaskRun",
                            "glue:GetMLTaskRuns",
                            "glue:GetMLTransform",
                            "glue:GetMLTransforms",
                            "glue:GetPartition",
                            "glue:GetPartitions",
                            "glue:GetPlan",
                            "glue:GetRegistry",
                            "glue:GetResourcePolicy",
                            "glue:GetSchema",
                            "glue:GetSchemaByDefinition",
                            "glue:GetSchemaVersion",
                            "glue:GetSchemaVersionsDiff",
                            "glue:GetSecurityConfiguration",
                            "glue:GetSecurityConfigurations",
                            "glue:GetTable",
                            "glue:GetTableOptimizer",
                            "glue:GetTables",
                            "glue:GetTableVersion",
                            "glue:GetTableVersions",
                            "glue:GetTags",
                            "glue:GetTrigger",
                            "glue:GetTriggers",
                            "glue:GetUserDefinedFunction",
                            "glue:GetUserDefinedFunctions",
                            "glue:GetWorkflow",
                            "glue:GetWorkflowRun",
                            "glue:GetWorkflowRunProperties",
                            "glue:GetWorkflowRuns",
                            "glue:ListCrawlers",
                            "glue:ListCrawls",
                            "glue:ListDevEndpoints",
                            "glue:ListJobs",
                            "glue:ListMLTransforms",
                            "glue:ListRegistries",
                            "glue:ListSchemas",
                            "glue:ListSchemaVersions",
                            "glue:ListTableOptimizerRuns",
                            "glue:ListTriggers",
                            "glue:ListWorkflows",
                            "glue:QuerySchemaVersionMetadata",
                            "glue:SearchTables",
                            "grafana:DescribeWorkspace",
                            "grafana:DescribeWorkspaceAuthentication",
                            "grafana:DescribeWorkspaceConfiguration",
                            "grafana:ListPermissions",
                            "grafana:ListTagsForResource",
                            "grafana:ListVersions",
                            "grafana:ListWorkspaces",
                            "greengrass:DescribeComponent",
                            "greengrass:Get*",
                            "greengrass:List*",
                            "groundstation:DescribeContact",
                            "groundstation:GetConfig",
                            "groundstation:GetDataflowEndpointGroup",
                            "groundstation:GetMinuteUsage",
                            "groundstation:GetMissionProfile",
                            "groundstation:GetSatellite",
                            "groundstation:ListConfigs",
                            "groundstation:ListContacts",
                            "groundstation:ListDataflowEndpointGroups",
                            "groundstation:ListGroundStations",
                            "groundstation:ListMissionProfiles",
                            "groundstation:ListSatellites",
                            "groundstation:ListTagsForResource",
                            "guardduty:Describe*",
                            "guardduty:Get*",
                            "guardduty:List*",
                            "health:Describe*",
                            "healthlake:DescribeFHIRDatastore",
                            "healthlake:DescribeFHIRExportJob",
                            "healthlake:DescribeFHIRImportJob",
                            "healthlake:GetCapabilities",
                            "healthlake:ListFHIRDatastores",
                            "healthlake:ListFHIRExportJobs",
                            "healthlake:ListFHIRImportJobs",
                            "healthlake:ListTagsForResource",
                            "healthlake:ReadResource",
                            "healthlake:SearchWithGet",
                            "healthlake:SearchWithPost",
                            "iam:Generate*",
                            "iam:Get*",
                            "iam:List*",
                            "iam:Simulate*",
                            "identity-sync:GetSyncProfile",
                            "identity-sync:GetSyncTarget",
                            "identity-sync:ListSyncFilters",
                            "identitystore-auth:BatchGetSession",
                            "identitystore-auth:ListSessions",
                            "identitystore:DescribeGroup",
                            "identitystore:DescribeGroupMembership",
                            "identitystore:DescribeUser",
                            "identitystore:GetGroupId",
                            "identitystore:GetGroupMembershipId",
                            "identitystore:GetUserId",
                            "identitystore:IsMemberInGroups",
                            "identitystore:ListGroupMemberships",
                            "identitystore:ListGroupMembershipsForMember",
                            "identitystore:ListGroups",
                            "identitystore:ListUsers",
                            "imagebuilder:Get*",
                            "imagebuilder:List*",
                            "importexport:Get*",
                            "importexport:List*",
                            "inspector:Describe*",
                            "inspector:Get*",
                            "inspector:List*",
                            "inspector:Preview*",
                            "inspector2:BatchGetAccountStatus",
                            "inspector2:BatchGetFreeTrialInfo",
                            "inspector2:DescribeOrganizationConfiguration",
                            "inspector2:GetDelegatedAdminAccount",
                            "inspector2:GetFindingsReportStatus",
                            "inspector2:GetMember",
                            "inspector2:ListAccountPermissions",
                            "inspector2:ListCisScans",
                            "inspector2:ListCoverage",
                            "inspector2:ListCoverageStatistics",
                            "inspector2:ListDelegatedAdminAccounts",
                            "inspector2:ListFilters",
                            "inspector2:ListFindingAggregations",
                            "inspector2:ListFindings",
                            "inspector2:ListMembers",
                            "inspector2:ListTagsForResource",
                            "inspector2:ListUsageTotals",
                            "internetmonitor:GetHealthEvent",
                            "internetmonitor:GetInternetEvent",
                            "internetmonitor:GetMonitor",
                            "internetmonitor:ListHealthEvents",
                            "internetmonitor:ListInternetEvents",
                            "internetmonitor:ListMonitors",
                            "internetmonitor:ListTagsForResource",
                            "invoicing:GetInvoiceEmailDeliveryPreferences",
                            "invoicing:GetInvoicePDF",
                            "invoicing:ListInvoiceSummaries",
                            "iot:Describe*",
                            "iot:Get*",
                            "iot:List*",
                            "iot1click:DescribeDevice",
                            "iot1click:DescribePlacement",
                            "iot1click:DescribeProject",
                            "iot1click:GetDeviceMethods",
                            "iot1click:GetDevicesInPlacement",
                            "iot1click:ListDeviceEvents",
                            "iot1click:ListDevices",
                            "iot1click:ListPlacements",
                            "iot1click:ListProjects",
                            "iot1click:ListTagsForResource",
                            "iotanalytics:Describe*",
                            "iotanalytics:Get*",
                            "iotanalytics:List*",
                            "iotanalytics:SampleChannelData",
                            "iotevents:DescribeAlarm",
                            "iotevents:DescribeAlarmModel",
                            "iotevents:DescribeDetector",
                            "iotevents:DescribeDetectorModel",
                            "iotevents:DescribeInput",
                            "iotevents:DescribeLoggingOptions",
                            "iotevents:ListAlarmModels",
                            "iotevents:ListAlarmModelVersions",
                            "iotevents:ListAlarms",
                            "iotevents:ListDetectorModels",
                            "iotevents:ListDetectorModelVersions",
                            "iotevents:ListDetectors",
                            "iotevents:ListInputs",
                            "iotevents:ListTagsForResource",
                            "iotfleethub:DescribeApplication",
                            "iotfleethub:ListApplications",
                            "iotfleetwise:GetCampaign",
                            "iotfleetwise:GetDecoderManifest",
                            "iotfleetwise:GetFleet",
                            "iotfleetwise:GetLoggingOptions",
                            "iotfleetwise:GetModelManifest",
                            "iotfleetwise:GetRegisterAccountStatus",
                            "iotfleetwise:GetSignalCatalog",
                            "iotfleetwise:GetVehicle",
                            "iotfleetwise:GetVehicleStatus",
                            "iotfleetwise:ListCampaigns",
                            "iotfleetwise:ListDecoderManifestNetworkInterfaces",
                            "iotfleetwise:ListDecoderManifests",
                            "iotfleetwise:ListDecoderManifestSignals",
                            "iotfleetwise:ListFleets",
                            "iotfleetwise:ListFleetsForVehicle",
                            "iotfleetwise:ListModelManifestNodes",
                            "iotfleetwise:ListModelManifests",
                            "iotfleetwise:ListSignalCatalogNodes",
                            "iotfleetwise:ListSignalCatalogs",
                            "iotfleetwise:ListTagsForResource",
                            "iotfleetwise:ListVehicles",
                            "iotfleetwise:ListVehiclesInFleet",
                            "iotroborunner:GetDestination",
                            "iotroborunner:GetSite",
                            "iotroborunner:GetWorker",
                            "iotroborunner:GetWorkerFleet",
                            "iotroborunner:ListDestinations",
                            "iotroborunner:ListSites",
                            "iotroborunner:ListWorkerFleets",
                            "iotroborunner:ListWorkers",
                            "iotsitewise:Describe*",
                            "iotsitewise:Get*",
                            "iotsitewise:List*",
                            "iotwireless:GetDestination",
                            "iotwireless:GetDeviceProfile",
                            "iotwireless:GetEventConfigurationByResourceTypes",
                            "iotwireless:GetFuotaTask",
                            "iotwireless:GetLogLevelsByResourceTypes",
                            "iotwireless:GetMetricConfiguration",
                            "iotwireless:GetMetrics",
                            "iotwireless:GetMulticastGroup",
                            "iotwireless:GetMulticastGroupSession",
                            "iotwireless:GetNetworkAnalyzerConfiguration",
                            "iotwireless:GetPartnerAccount",
                            "iotwireless:GetPosition",
                            "iotwireless:GetPositionConfiguration",
                            "iotwireless:GetPositionEstimate",
                            "iotwireless:GetResourceEventConfiguration",
                            "iotwireless:GetResourceLogLevel",
                            "iotwireless:GetResourcePosition",
                            "iotwireless:GetServiceEndpoint",
                            "iotwireless:GetServiceProfile",
                            "iotwireless:GetWirelessDevice",
                            "iotwireless:GetWirelessDeviceImportTask",
                            "iotwireless:GetWirelessDeviceStatistics",
                            "iotwireless:GetWirelessGateway",
                            "iotwireless:GetWirelessGatewayCertificate",
                            "iotwireless:GetWirelessGatewayFirmwareInformation",
                            "iotwireless:GetWirelessGatewayStatistics",
                            "iotwireless:GetWirelessGatewayTask",
                            "iotwireless:GetWirelessGatewayTaskDefinition",
                            "iotwireless:ListDestinations",
                            "iotwireless:ListDeviceProfiles",
                            "iotwireless:ListDevicesForWirelessDeviceImportTask",
                            "iotwireless:ListEventConfigurations",
                            "iotwireless:ListFuotaTasks",
                            "iotwireless:ListMulticastGroups",
                            "iotwireless:ListMulticastGroupsByFuotaTask",
                            "iotwireless:ListNetworkAnalyzerConfigurations",
                            "iotwireless:ListPartnerAccounts",
                            "iotwireless:ListPositionConfigurations",
                            "iotwireless:ListQueuedMessages",
                            "iotwireless:ListServiceProfiles",
                            "iotwireless:ListTagsForResource",
                            "iotwireless:ListWirelessDeviceImportTasks",
                            "iotwireless:ListWirelessDevices",
                            "iotwireless:ListWirelessGateways",
                            "iotwireless:ListWirelessGatewayTaskDefinitions",
                            "ivs:BatchGetChannel",
                            "ivs:GetChannel",
                            "ivs:GetComposition",
                            "ivs:GetEncoderConfiguration",
                            "ivs:GetParticipant",
                            "ivs:GetPlaybackKeyPair",
                            "ivs:GetPlaybackRestrictionPolicy",
                            "ivs:GetRecordingConfiguration",
                            "ivs:GetStage",
                            "ivs:GetStageSession",
                            "ivs:GetStreamSession",
                            "ivs:ListChannels",
                            "ivs:ListCompositions",
                            "ivs:ListEncoderConfigurations",
                            "ivs:ListParticipantEvents",
                            "ivs:ListParticipants",
                            "ivs:ListPlaybackKeyPairs",
                            "ivs:ListPlaybackRestrictionPolicies",
                            "ivs:ListRecordingConfigurations",
                            "ivs:ListStages",
                            "ivs:ListStageSessions",
                            "ivs:ListStreamKeys",
                            "ivs:ListStreams",
                            "ivs:ListStreamSessions",
                            "ivs:ListTagsForResource",
                            "ivschat:GetLoggingConfiguration",
                            "ivschat:GetRoom",
                            "ivschat:ListLoggingConfigurations",
                            "ivschat:ListRooms",
                            "ivschat:ListTagsForResource",
                            "kafka:Describe*",
                            "kafka:DescribeCluster",
                            "kafka:DescribeClusterOperation",
                            "kafka:DescribeClusterV2",
                            "kafka:DescribeConfiguration",
                            "kafka:DescribeConfigurationRevision",
                            "kafka:Get*",
                            "kafka:GetBootstrapBrokers",
                            "kafka:GetCompatibleKafkaVersions",
                            "kafka:List*",
                            "kafka:ListClusterOperations",
                            "kafka:ListClusters",
                            "kafka:ListClustersV2",
                            "kafka:ListConfigurationRevisions",
                            "kafka:ListConfigurations",
                            "kafka:ListKafkaVersions",
                            "kafka:ListNodes",
                            "kafka:ListTagsForResource",
                            "kafkaconnect:DescribeConnector",
                            "kafkaconnect:DescribeCustomPlugin",
                            "kafkaconnect:DescribeWorkerConfiguration",
                            "kafkaconnect:ListConnectors",
                            "kafkaconnect:ListCustomPlugins",
                            "kafkaconnect:ListWorkerConfigurations",
                            "kendra:BatchGetDocumentStatus",
                            "kendra:DescribeDataSource",
                            "kendra:DescribeExperience",
                            "kendra:DescribeFaq",
                            "kendra:DescribeIndex",
                            "kendra:DescribePrincipalMapping",
                            "kendra:DescribeQuerySuggestionsBlockList",
                            "kendra:DescribeQuerySuggestionsConfig",
                            "kendra:DescribeThesaurus",
                            "kendra:GetQuerySuggestions",
                            "kendra:GetSnapshots",
                            "kendra:ListDataSources",
                            "kendra:ListDataSourceSyncJobs",
                            "kendra:ListEntityPersonas",
                            "kendra:ListExperienceEntities",
                            "kendra:ListExperiences",
                            "kendra:ListFaqs",
                            "kendra:ListGroupsOlderThanOrderingId",
                            "kendra:ListIndices",
                            "kendra:ListQuerySuggestionsBlockLists",
                            "kendra:ListTagsForResource",
                            "kendra:ListThesauri",
                            "kendra:Query",
                            "kinesis:Describe*",
                            "kinesis:Get*",
                            "kinesis:List*",
                            "kinesisanalytics:Describe*",
                            "kinesisanalytics:Discover*",
                            "kinesisanalytics:Get*",
                            "kinesisanalytics:List*",
                            "kinesisvideo:Describe*",
                            "kinesisvideo:Get*",
                            "kinesisvideo:List*",
                            "kms:Describe*",
                            "kms:Get*",
                            "kms:List*",
                            "lakeformation:DescribeResource",
                            "lakeformation:GetDataCellsFilter",
                            "lakeformation:GetDataLakeSettings",
                            "lakeformation:GetEffectivePermissionsForPath",
                            "lakeformation:GetLfTag",
                            "lakeformation:GetResourceLfTags",
                            "lakeformation:ListDataCellsFilter",
                            "lakeformation:ListLfTags",
                            "lakeformation:ListPermissions",
                            "lakeformation:ListResources",
                            "lakeformation:ListTableStorageOptimizers",
                            "lakeformation:SearchDatabasesByLfTags",
                            "lakeformation:SearchTablesByLfTags",
                            "lambda:Get*",
                            "lambda:List*",
                            "launchwizard:DescribeAdditionalNode",
                            "launchwizard:DescribeProvisionedApp",
                            "launchwizard:DescribeProvisioningEvents",
                            "launchwizard:DescribeSettingsSet",
                            "launchwizard:GetDeployment",
                            "launchwizard:GetInfrastructureSuggestion",
                            "launchwizard:GetIpAddress",
                            "launchwizard:GetResourceCostEstimate",
                            "launchwizard:GetResourceRecommendation",
                            "launchwizard:GetSettingsSet",
                            "launchwizard:GetWorkload",
                            "launchwizard:GetWorkloadAsset",
                            "launchwizard:GetWorkloadAssets",
                            "launchwizard:GetWorkloadDeploymentPattern",
                            "launchwizard:ListAdditionalNodes",
                            "launchwizard:ListAllowedResources",
                            "launchwizard:ListDeploymentEvents",
                            "launchwizard:ListDeployments",
                            "launchwizard:ListProvisionedApps",
                            "launchwizard:ListResourceCostEstimates",
                            "launchwizard:ListSettingsSets",
                            "launchwizard:ListTagsForResource",
                            "launchwizard:ListWorkloadDeploymentOptions",
                            "launchwizard:ListWorkloadDeploymentPatterns",
                            "launchwizard:ListWorkloads",
                            "lex:DescribeBot",
                            "lex:DescribeBotAlias",
                            "lex:DescribeBotChannel",
                            "lex:DescribeBotLocale",
                            "lex:DescribeBotReplica",
                            "lex:DescribeBotVersion",
                            "lex:DescribeExport",
                            "lex:DescribeImport",
                            "lex:DescribeIntent",
                            "lex:DescribeResourcePolicy",
                            "lex:DescribeSlot",
                            "lex:DescribeSlotType",
                            "lex:Get*",
                            "lex:ListBotAliases",
                            "lex:ListBotAliasReplicas",
                            "lex:ListBotChannels",
                            "lex:ListBotLocales",
                            "lex:ListBotReplicas",
                            "lex:ListBots",
                            "lex:ListBotVersionReplicas",
                            "lex:ListBotVersions",
                            "lex:ListBuiltInIntents",
                            "lex:ListBuiltInSlotTypes",
                            "lex:ListExports",
                            "lex:ListImports",
                            "lex:ListIntents",
                            "lex:ListSlots",
                            "lex:ListSlotTypes",
                            "lex:ListTagsForResource",
                            "license-manager:Get*",
                            "license-manager:List*",
                            "lightsail:GetActiveNames",
                            "lightsail:GetAlarms",
                            "lightsail:GetAutoSnapshots",
                            "lightsail:GetBlueprints",
                            "lightsail:GetBucketAccessKeys",
                            "lightsail:GetBucketBundles",
                            "lightsail:GetBucketMetricData",
                            "lightsail:GetBuckets",
                            "lightsail:GetBundles",
                            "lightsail:GetCertificates",
                            "lightsail:GetCloudFormationStackRecords",
                            "lightsail:GetContainerAPIMetadata",
                            "lightsail:GetContainerImages",
                            "lightsail:GetContainerServiceDeployments",
                            "lightsail:GetContainerServiceMetricData",
                            "lightsail:GetContainerServicePowers",
                            "lightsail:GetContainerServices",
                            "lightsail:GetDisk",
                            "lightsail:GetDisks",
                            "lightsail:GetDiskSnapshot",
                            "lightsail:GetDiskSnapshots",
                            "lightsail:GetDistributionBundles",
                            "lightsail:GetDistributionLatestCacheReset",
                            "lightsail:GetDistributionMetricData",
                            "lightsail:GetDistributions",
                            "lightsail:GetDomain",
                            "lightsail:GetDomains",
                            "lightsail:GetExportSnapshotRecords",
                            "lightsail:GetInstance",
                            "lightsail:GetInstanceMetricData",
                            "lightsail:GetInstancePortStates",
                            "lightsail:GetInstances",
                            "lightsail:GetInstanceSnapshot",
                            "lightsail:GetInstanceSnapshots",
                            "lightsail:GetInstanceState",
                            "lightsail:GetKeyPair",
                            "lightsail:GetKeyPairs",
                            "lightsail:GetLoadBalancer",
                            "lightsail:GetLoadBalancerMetricData",
                            "lightsail:GetLoadBalancers",
                            "lightsail:GetLoadBalancerTlsCertificates",
                            "lightsail:GetOperation",
                            "lightsail:GetOperations",
                            "lightsail:GetOperationsForResource",
                            "lightsail:GetRegions",
                            "lightsail:GetRelationalDatabase",
                            "lightsail:GetRelationalDatabaseBlueprints",
                            "lightsail:GetRelationalDatabaseBundles",
                            "lightsail:GetRelationalDatabaseEvents",
                            "lightsail:GetRelationalDatabaseLogEvents",
                            "lightsail:GetRelationalDatabaseLogStreams",
                            "lightsail:GetRelationalDatabaseMetricData",
                            "lightsail:GetRelationalDatabaseParameters",
                            "lightsail:GetRelationalDatabases",
                            "lightsail:GetRelationalDatabaseSnapshot",
                            "lightsail:GetRelationalDatabaseSnapshots",
                            "lightsail:GetStaticIp",
                            "lightsail:GetStaticIps",
                            "lightsail:Is*",
                            "logs:Describe*",
                            "logs:FilterLogEvents",
                            "logs:Get*",
                            "logs:ListAnomalies",
                            "logs:ListLogAnomalyDetectors",
                            "logs:ListLogDeliveries",
                            "logs:ListTagsForResource",
                            "logs:ListTagsLogGroup",
                            "logs:StartLiveTail",
                            "logs:StartQuery",
                            "logs:StopLiveTail",
                            "logs:StopQuery",
                            "logs:TestMetricFilter",
                            "lookoutequipment:DescribeDataIngestionJob",
                            "lookoutequipment:DescribeDataset",
                            "lookoutequipment:DescribeInferenceScheduler",
                            "lookoutequipment:DescribeLabel",
                            "lookoutequipment:DescribeLabelGroup",
                            "lookoutequipment:DescribeModel",
                            "lookoutequipment:DescribeModelVersion",
                            "lookoutequipment:DescribeResourcePolicy",
                            "lookoutequipment:DescribeRetrainingScheduler",
                            "lookoutequipment:ListDataIngestionJobs",
                            "lookoutequipment:ListDatasets",
                            "lookoutequipment:ListInferenceEvents",
                            "lookoutequipment:ListInferenceExecutions",
                            "lookoutequipment:ListInferenceSchedulers",
                            "lookoutequipment:ListLabelGroups",
                            "lookoutequipment:ListLabels",
                            "lookoutequipment:ListModels",
                            "lookoutequipment:ListModelVersions",
                            "lookoutequipment:ListRetrainingSchedulers",
                            "lookoutequipment:ListSensorStatistics",
                            "lookoutequipment:ListTagsForResource",
                            "lookoutmetrics:Describe*",
                            "lookoutmetrics:Get*",
                            "lookoutmetrics:List*",
                            "lookoutvision:DescribeDataset",
                            "lookoutvision:DescribeModel",
                            "lookoutvision:DescribeModelPackagingJob",
                            "lookoutvision:DescribeProject",
                            "lookoutvision:ListDatasetEntries",
                            "lookoutvision:ListModelPackagingJobs",
                            "lookoutvision:ListModels",
                            "lookoutvision:ListProjects",
                            "lookoutvision:ListTagsForResource",
                            "m2:GetApplication",
                            "m2:GetApplicationVersion",
                            "m2:GetBatchJobExecution",
                            "m2:GetDataSetDetails",
                            "m2:GetDataSetImportTask",
                            "m2:GetDeployment",
                            "m2:GetEnvironment",
                            "m2:ListApplications",
                            "m2:ListApplicationVersions",
                            "m2:ListBatchJobDefinitions",
                            "m2:ListBatchJobExecutions",
                            "m2:ListDataSetImportHistory",
                            "m2:ListDataSets",
                            "m2:ListDeployments",
                            "m2:ListEngineVersions",
                            "m2:ListEnvironments",
                            "m2:ListTagsForResource",
                            "machinelearning:Describe*",
                            "machinelearning:Get*",
                            "macie2:BatchGetCustomDataIdentifiers",
                            "macie2:DescribeBuckets",
                            "macie2:DescribeClassificationJob",
                            "macie2:DescribeOrganizationConfiguration",
                            "macie2:GetAdministratorAccount",
                            "macie2:GetAllowList",
                            "macie2:GetAutomatedDiscoveryConfiguration",
                            "macie2:GetBucketStatistics",
                            "macie2:GetClassificationExportConfiguration",
                            "macie2:GetClassificationScope",
                            "macie2:GetCustomDataIdentifier",
                            "macie2:GetFindings",
                            "macie2:GetFindingsFilter",
                            "macie2:GetFindingsPublicationConfiguration",
                            "macie2:GetFindingStatistics",
                            "macie2:GetInvitationsCount",
                            "macie2:GetMacieSession",
                            "macie2:GetMember",
                            "macie2:GetResourceProfile",
                            "macie2:GetRevealConfiguration",
                            "macie2:GetSensitiveDataOccurrencesAvailability",
                            "macie2:GetSensitivityInspectionTemplate",
                            "macie2:GetUsageStatistics",
                            "macie2:GetUsageTotals",
                            "macie2:ListAllowLists",
                            "macie2:ListAutomatedDiscoveryAccounts",
                            "macie2:ListClassificationJobs",
                            "macie2:ListClassificationScopes",
                            "macie2:ListCustomDataIdentifiers",
                            "macie2:ListFindings",
                            "macie2:ListFindingsFilters",
                            "macie2:ListInvitations",
                            "macie2:ListMembers",
                            "macie2:ListOrganizationAdminAccounts",
                            "macie2:ListResourceProfileArtifacts",
                            "macie2:ListResourceProfileDetections",
                            "macie2:ListSensitivityInspectionTemplates",
                            "macie2:ListTagsForResource",
                            "macie2:SearchResources",
                            "managedblockchain:GetMember",
                            "managedblockchain:GetNetwork",
                            "managedblockchain:GetNode",
                            "managedblockchain:GetProposal",
                            "managedblockchain:ListInvitations",
                            "managedblockchain:ListMembers",
                            "managedblockchain:ListNetworks",
                            "managedblockchain:ListNodes",
                            "managedblockchain:ListProposals",
                            "managedblockchain:ListProposalVotes",
                            "managedblockchain:ListTagsForResource",
                            "mediaconnect:DescribeFlow",
                            "mediaconnect:DescribeOffering",
                            "mediaconnect:DescribeReservation",
                            "mediaconnect:ListEntitlements",
                            "mediaconnect:ListFlows",
                            "mediaconnect:ListOfferings",
                            "mediaconnect:ListReservations",
                            "mediaconnect:ListTagsForResource",
                            "mediaconvert:DescribeEndpoints",
                            "mediaconvert:Get*",
                            "mediaconvert:List*",
                            "medialive:DescribeChannel",
                            "medialive:DescribeInput",
                            "medialive:DescribeInputDevice",
                            "medialive:DescribeInputDeviceThumbnail",
                            "medialive:DescribeInputSecurityGroup",
                            "medialive:DescribeMultiplex",
                            "medialive:DescribeMultiplexProgram",
                            "medialive:DescribeOffering",
                            "medialive:DescribeReservation",
                            "medialive:DescribeSchedule",
                            "medialive:GetCloudWatchAlarmTemplate",
                            "medialive:GetCloudWatchAlarmTemplateGroup",
                            "medialive:GetEventBridgeRuleTemplate",
                            "medialive:GetEventBridgeRuleTemplateGroup",
                            "medialive:GetSignalMap",
                            "medialive:ListChannels",
                            "medialive:ListCloudWatchAlarmTemplateGroups",
                            "medialive:ListCloudWatchAlarmTemplates",
                            "medialive:ListEventBridgeRuleTemplateGroups",
                            "medialive:ListEventBridgeRuleTemplates",
                            "medialive:ListInputDevices",
                            "medialive:ListInputDeviceTransfers",
                            "medialive:ListInputs",
                            "medialive:ListInputSecurityGroups",
                            "medialive:ListMultiplexes",
                            "medialive:ListMultiplexPrograms",
                            "medialive:ListOfferings",
                            "medialive:ListReservations",
                            "medialive:ListSignalMaps",
                            "medialive:ListTagsForResource",
                            "mediapackage-vod:Describe*",
                            "mediapackage-vod:List*",
                            "mediapackage:Describe*",
                            "mediapackage:List*",
                            "mediapackagev2:GetChannel",
                            "mediapackagev2:GetChannelGroup",
                            "mediapackagev2:GetChannelPolicy",
                            "mediapackagev2:GetHeadObject",
                            "mediapackagev2:GetObject",
                            "mediapackagev2:GetOriginEndpoint",
                            "mediapackagev2:GetOriginEndpointPolicy",
                            "mediapackagev2:ListChannelGroups",
                            "mediapackagev2:ListChannels",
                            "mediapackagev2:ListOriginEndpoints",
                            "mediapackagev2:ListTagsForResource",
                            "mediastore:DescribeContainer",
                            "mediastore:DescribeObject",
                            "mediastore:GetContainerPolicy",
                            "mediastore:GetCorsPolicy",
                            "mediastore:GetLifecyclePolicy",
                            "mediastore:GetMetricPolicy",
                            "mediastore:GetObject",
                            "mediastore:ListContainers",
                            "mediastore:ListItems",
                            "mediastore:ListTagsForResource",
                            "memorydb:DescribeClusters",
                            "memorydb:DescribeParameterGroups",
                            "memorydb:DescribeParameters",
                            "memorydb:ListTags",
                            "mgh:Describe*",
                            "mgh:GetHomeRegion",
                            "mgh:List*",
                            "mgn:DescribeJobLogItems",
                            "mgn:DescribeJobs",
                            "mgn:DescribeLaunchConfigurationTemplates",
                            "mgn:DescribeReplicationConfigurationTemplates",
                            "mgn:DescribeSourceServers",
                            "mgn:DescribeVcenterClients",
                            "mgn:GetLaunchConfiguration",
                            "mgn:GetReplicationConfiguration",
                            "mgn:ListApplications",
                            "mgn:ListSourceServerActions",
                            "mgn:ListTemplateActions",
                            "mgn:ListWaves",
                            "mobileanalytics:Get*",
                            "mobiletargeting:Get*",
                            "mobiletargeting:List*",
                            "monitron:GetProject",
                            "monitron:GetProjectAdminUser",
                            "monitron:ListProjects",
                            "monitron:ListTagsForResource",
                            "mq:Describe*",
                            "mq:List*",
                            "network-firewall:DescribeFirewall",
                            "network-firewall:DescribeFirewallPolicy",
                            "network-firewall:DescribeLoggingConfiguration",
                            "network-firewall:DescribeResourcePolicy",
                            "network-firewall:DescribeRuleGroup",
                            "network-firewall:DescribeRuleGroupMetadata",
                            "network-firewall:DescribeTLSInspectionConfiguration",
                            "network-firewall:ListFirewallPolicies",
                            "network-firewall:ListFirewalls",
                            "network-firewall:ListRuleGroups",
                            "network-firewall:ListTagsForResource",
                            "network-firewall:ListTLSInspectionConfigurations",
                            "networkmanager:DescribeGlobalNetworks",
                            "networkmanager:GetConnectAttachment",
                            "networkmanager:GetConnections",
                            "networkmanager:GetConnectPeer",
                            "networkmanager:GetConnectPeerAssociations",
                            "networkmanager:GetCoreNetwork",
                            "networkmanager:GetCoreNetworkChangeEvents",
                            "networkmanager:GetCoreNetworkChangeSet",
                            "networkmanager:GetCoreNetworkPolicy",
                            "networkmanager:GetCustomerGatewayAssociations",
                            "networkmanager:GetDevices",
                            "networkmanager:GetLinkAssociations",
                            "networkmanager:GetLinks",
                            "networkmanager:GetNetworkResourceCounts",
                            "networkmanager:GetNetworkResourceRelationships",
                            "networkmanager:GetNetworkResources",
                            "networkmanager:GetNetworkRoutes",
                            "networkmanager:GetNetworkTelemetry",
                            "networkmanager:GetResourcePolicy",
                            "networkmanager:GetRouteAnalysis",
                            "networkmanager:GetSites",
                            "networkmanager:GetSiteToSiteVpnAttachment",
                            "networkmanager:GetTransitGatewayConnectPeerAssociations",
                            "networkmanager:GetTransitGatewayPeering",
                            "networkmanager:GetTransitGatewayRegistrations",
                            "networkmanager:GetTransitGatewayRouteTableAttachment",
                            "networkmanager:GetVpcAttachment",
                            "networkmanager:ListAttachments",
                            "networkmanager:ListConnectPeers",
                            "networkmanager:ListCoreNetworkPolicyVersions",
                            "networkmanager:ListCoreNetworks",
                            "networkmanager:ListPeerings",
                            "networkmanager:ListTagsForResource",
                            "nimble:GetEula",
                            "nimble:GetFeatureMap",
                            "nimble:GetLaunchProfile",
                            "nimble:GetLaunchProfileDetails",
                            "nimble:GetLaunchProfileInitialization",
                            "nimble:GetLaunchProfileMember",
                            "nimble:GetStreamingImage",
                            "nimble:GetStreamingSession",
                            "nimble:GetStudio",
                            "nimble:GetStudioComponent",
                            "nimble:GetStudioMember",
                            "nimble:ListEulaAcceptances",
                            "nimble:ListEulas",
                            "nimble:ListLaunchProfileMembers",
                            "nimble:ListLaunchProfiles",
                            "nimble:ListStreamingImages",
                            "nimble:ListStreamingSessions",
                            "nimble:ListStudioComponents",
                            "nimble:ListStudioMembers",
                            "nimble:ListStudios",
                            "nimble:ListTagsForResource",
                            "notifications-contacts:GetEmailContact",
                            "notifications-contacts:ListEmailContacts",
                            "notifications-contacts:ListTagsForResource",
                            "notifications:GetEventRule",
                            "notifications:GetNotificationConfiguration",
                            "notifications:GetNotificationEvent",
                            "notifications:ListChannels",
                            "notifications:ListEventRules",
                            "notifications:ListNotificationConfigurations",
                            "notifications:ListNotificationEvents",
                            "notifications:ListNotificationHubs",
                            "notifications:ListTagsForResource",
                            "oam:GetLink",
                            "oam:GetSink",
                            "oam:GetSinkPolicy",
                            "oam:ListAttachedLinks",
                            "oam:ListLinks",
                            "oam:ListSinks",
                            "omics:Get*",
                            "omics:List*",
                            "one:GetDeviceConfigurationTemplate",
                            "one:GetDeviceInstance",
                            "one:GetDeviceInstanceConfiguration",
                            "one:GetSite",
                            "one:GetSiteAddress",
                            "one:ListDeviceConfigurationTemplates",
                            "one:ListDeviceInstances",
                            "one:ListSites",
                            "one:ListUsers",
                            "opsworks-cm:Describe*",
                            "opsworks-cm:List*",
                            "opsworks:Describe*",
                            "opsworks:Get*",
                            "organizations:Describe*",
                            "organizations:List*",
                            "osis:GetPipeline",
                            "osis:GetPipelineBlueprint",
                            "osis:GetPipelineChangeProgress",
                            "osis:ListPipelineBlueprints",
                            "osis:ListPipelines",
                            "osis:ListTagsForResource",
                            "outposts:Get*",
                            "outposts:List*",
                            "payment-cryptography:GetAlias",
                            "payment-cryptography:GetKey",
                            "payment-cryptography:GetPublicKeyCertificate",
                            "payment-cryptography:ListAliases",
                            "payment-cryptography:ListKeys",
                            "payment-cryptography:ListTagsForResource",
                            "payments:GetPaymentInstrument",
                            "payments:GetPaymentStatus",
                            "payments:ListPaymentInstruments",
                            "payments:ListPaymentPreferences",
                            "payments:ListTagsForResource",
                            "pca-connector-ad:GetConnector",
                            "pca-connector-ad:GetDirectoryRegistration",
                            "pca-connector-ad:GetServicePrincipalName",
                            "pca-connector-ad:GetTemplate",
                            "pca-connector-ad:GetTemplateGroupAccessControlEntry",
                            "pca-connector-ad:ListConnectors",
                            "pca-connector-ad:ListDirectoryRegistrations",
                            "pca-connector-ad:ListServicePrincipalNames",
                            "pca-connector-ad:ListTagsForResource",
                            "pca-connector-ad:ListTemplateGroupAccessControlEntries",
                            "pca-connector-ad:ListTemplates",
                            "pca-connector-scep:GetChallengeMetadata",
                            "pca-connector-scep:GetConnector",
                            "pca-connector-scep:ListChallengeMetadata",
                            "pca-connector-scep:ListConnectors",
                            "pca-connector-scep:ListTagsForResource",
                            "personalize:Describe*",
                            "personalize:Get*",
                            "personalize:List*",
                            "pi:DescribeDimensionKeys",
                            "pi:GetDimensionKeyDetails",
                            "pi:GetResourceMetadata",
                            "pi:GetResourceMetrics",
                            "pi:ListAvailableResourceDimensions",
                            "pi:ListAvailableResourceMetrics",
                            "pipes:DescribePipe",
                            "pipes:ListPipes",
                            "pipes:ListTagsForResource",
                            "polly:Describe*",
                            "polly:Get*",
                            "polly:List*",
                            "polly:SynthesizeSpeech",
                            "pricing:DescribeServices",
                            "pricing:GetAttributeValues",
                            "pricing:GetPriceListFileUrl",
                            "pricing:GetProducts",
                            "pricing:ListPriceLists",
                            "proton:GetDeployment",
                            "proton:GetEnvironment",
                            "proton:GetEnvironmentTemplate",
                            "proton:GetEnvironmentTemplateVersion",
                            "proton:GetService",
                            "proton:GetServiceInstance",
                            "proton:GetServiceTemplate",
                            "proton:GetServiceTemplateVersion",
                            "proton:ListDeployments",
                            "proton:ListEnvironmentAccountConnections",
                            "proton:ListEnvironments",
                            "proton:ListEnvironmentTemplates",
                            "proton:ListServiceInstances",
                            "proton:ListServices",
                            "proton:ListServiceTemplates",
                            "proton:ListTagsForResource",
                            "purchase-orders:GetPurchaseOrder",
                            "purchase-orders:ListPurchaseOrderInvoices",
                            "purchase-orders:ListPurchaseOrders",
                            "purchase-orders:ViewPurchaseOrders",
                            "qbusiness:GetApplication",
                            "qbusiness:GetChatControlsConfiguration",
                            "qbusiness:GetDataSource",
                            "qbusiness:GetGroup",
                            "qbusiness:GetIndex",
                            "qbusiness:GetPlugin",
                            "qbusiness:GetRetriever",
                            "qbusiness:GetUser",
                            "qbusiness:GetWebExperience",
                            "qbusiness:ListApplications",
                            "qbusiness:ListDataSources",
                            "qbusiness:ListDataSourceSyncJobs",
                            "qbusiness:ListGroups",
                            "qbusiness:ListIndices",
                            "qbusiness:ListPlugins",
                            "qbusiness:ListRetrievers",
                            "qbusiness:ListSubscriptions",
                            "qbusiness:ListTagsForResource",
                            "qbusiness:ListWebExperiences",
                            "qldb:DescribeJournalKinesisStream",
                            "qldb:DescribeJournalS3Export",
                            "qldb:DescribeLedger",
                            "qldb:GetBlock",
                            "qldb:GetDigest",
                            "qldb:GetRevision",
                            "qldb:ListJournalKinesisStreamsForLedger",
                            "qldb:ListJournalS3Exports",
                            "qldb:ListJournalS3ExportsForLedger",
                            "qldb:ListLedgers",
                            "qldb:ListTagsForResource",
                            "ram:Get*",
                            "ram:List*",
                            "rbin:GetRule",
                            "rbin:ListRules",
                            "rbin:ListTagsForResource",
                            "rds:Describe*",
                            "rds:Download*",
                            "rds:List*",
                            "redshift-serverless:GetCustomDomainAssociation",
                            "redshift-serverless:GetEndpointAccess",
                            "redshift-serverless:GetNamespace",
                            "redshift-serverless:GetRecoveryPoint",
                            "redshift-serverless:GetResourcePolicy",
                            "redshift-serverless:GetScheduledAction",
                            "redshift-serverless:GetSnapshot",
                            "redshift-serverless:GetTableRestoreStatus",
                            "redshift-serverless:GetUsageLimit",
                            "redshift-serverless:GetWorkgroup",
                            "redshift-serverless:ListCustomDomainAssociations",
                            "redshift-serverless:ListEndpointAccess",
                            "redshift-serverless:ListNamespaces",
                            "redshift-serverless:ListRecoveryPoints",
                            "redshift-serverless:ListScheduledActions",
                            "redshift-serverless:ListSnapshotCopyConfigurations",
                            "redshift-serverless:ListSnapshots",
                            "redshift-serverless:ListTableRestoreStatus",
                            "redshift-serverless:ListTagsForResource",
                            "redshift-serverless:ListUsageLimits",
                            "redshift-serverless:ListWorkgroups",
                            "redshift:Describe*",
                            "redshift:GetReservedNodeExchangeOfferings",
                            "redshift:ListRecommendations",
                            "redshift:View*",
                            "refactor-spaces:GetApplication",
                            "refactor-spaces:GetEnvironment",
                            "refactor-spaces:GetResourcePolicy",
                            "refactor-spaces:GetRoute",
                            "refactor-spaces:GetService",
                            "refactor-spaces:ListApplications",
                            "refactor-spaces:ListEnvironments",
                            "refactor-spaces:ListEnvironmentVpcs",
                            "refactor-spaces:ListRoutes",
                            "refactor-spaces:ListServices",
                            "refactor-spaces:ListTagsForResource",
                            "rekognition:CompareFaces",
                            "rekognition:DescribeDataset",
                            "rekognition:DescribeProjects",
                            "rekognition:DescribeProjectVersions",
                            "rekognition:DescribeStreamProcessor",
                            "rekognition:Detect*",
                            "rekognition:GetCelebrityInfo",
                            "rekognition:GetCelebrityRecognition",
                            "rekognition:GetContentModeration",
                            "rekognition:GetFaceDetection",
                            "rekognition:GetFaceSearch",
                            "rekognition:GetLabelDetection",
                            "rekognition:GetPersonTracking",
                            "rekognition:GetSegmentDetection",
                            "rekognition:GetTextDetection",
                            "rekognition:List*",
                            "rekognition:RecognizeCelebrities",
                            "rekognition:Search*",
                            "resiliencehub:DescribeApp",
                            "resiliencehub:DescribeAppAssessment",
                            "resiliencehub:DescribeAppVersion",
                            "resiliencehub:DescribeAppVersionAppComponent",
                            "resiliencehub:DescribeAppVersionResource",
                            "resiliencehub:DescribeAppVersionResourcesResolutionStatus",
                            "resiliencehub:DescribeAppVersionTemplate",
                            "resiliencehub:DescribeDraftAppVersionResourcesImportStatus",
                            "resiliencehub:DescribeResiliencyPolicy",
                            "resiliencehub:DescribeResourceGroupingRecommendationTask",
                            "resiliencehub:ListAlarmRecommendations",
                            "resiliencehub:ListAppAssessmentComplianceDrifts",
                            "resiliencehub:ListAppAssessmentResourceDrifts",
                            "resiliencehub:ListAppAssessments",
                            "resiliencehub:ListAppComponentCompliances",
                            "resiliencehub:ListAppComponentRecommendations",
                            "resiliencehub:ListAppInputSources",
                            "resiliencehub:ListApps",
                            "resiliencehub:ListAppVersionAppComponents",
                            "resiliencehub:ListAppVersionResourceMappings",
                            "resiliencehub:ListAppVersionResources",
                            "resiliencehub:ListAppVersions",
                            "resiliencehub:ListRecommendationTemplates",
                            "resiliencehub:ListResiliencyPolicies",
                            "resiliencehub:ListResourceGroupingRecommendations",
                            "resiliencehub:ListSopRecommendations",
                            "resiliencehub:ListSuggestedResiliencyPolicies",
                            "resiliencehub:ListTagsForResource",
                            "resiliencehub:ListTestRecommendations",
                            "resiliencehub:ListUnsupportedAppVersionResources",
                            "resource-explorer-2:BatchGetView",
                            "resource-explorer-2:GetDefaultView",
                            "resource-explorer-2:GetIndex",
                            "resource-explorer-2:GetView",
                            "resource-explorer-2:ListIndexes",
                            "resource-explorer-2:ListSupportedResourceTypes",
                            "resource-explorer-2:ListTagsForResource",
                            "resource-explorer-2:ListViews",
                            "resource-explorer-2:Search",
                            "resource-groups:Get*",
                            "resource-groups:List*",
                            "resource-groups:Search*",
                            "robomaker:BatchDescribe*",
                            "robomaker:Describe*",
                            "robomaker:Get*",
                            "robomaker:List*",
                            "route53-recovery-cluster:Get*",
                            "route53-recovery-cluster:ListRoutingControls",
                            "route53-recovery-control-config:Describe*",
                            "route53-recovery-control-config:GetResourcePolicy",
                            "route53-recovery-control-config:List*",
                            "route53-recovery-readiness:Get*",
                            "route53-recovery-readiness:List*",
                            "route53:Get*",
                            "route53:List*",
                            "route53:Test*",
                            "route53domains:Check*",
                            "route53domains:Get*",
                            "route53domains:List*",
                            "route53domains:View*",
                            "route53profiles:GetProfile",
                            "route53profiles:GetProfileAssociation",
                            "route53profiles:GetProfileResourceAssociation",
                            "route53profiles:ListProfileAssociations",
                            "route53profiles:ListProfileResourceAssociations",
                            "route53profiles:ListProfiles",
                            "route53profiles:ListTagsForResource",
                            "route53resolver:Get*",
                            "route53resolver:List*",
                            "rum:GetAppMonitor",
                            "rum:GetAppMonitorData",
                            "rum:ListAppMonitors",
                            "s3-object-lambda:GetObject",
                            "s3-object-lambda:GetObjectAcl",
                            "s3-object-lambda:GetObjectLegalHold",
                            "s3-object-lambda:GetObjectRetention",
                            "s3-object-lambda:GetObjectTagging",
                            "s3-object-lambda:GetObjectVersion",
                            "s3-object-lambda:GetObjectVersionAcl",
                            "s3-object-lambda:GetObjectVersionTagging",
                            "s3-object-lambda:ListBucket",
                            "s3-object-lambda:ListBucketMultipartUploads",
                            "s3-object-lambda:ListBucketVersions",
                            "s3-object-lambda:ListMultipartUploadParts",
                            "s3-outposts:GetAccessPoint",
                            "s3-outposts:GetAccessPointPolicy",
                            "s3-outposts:GetBucket",
                            "s3-outposts:GetBucketPolicy",
                            "s3-outposts:GetBucketTagging",
                            "s3-outposts:GetBucketVersioning",
                            "s3-outposts:GetLifecycleConfiguration",
                            "s3-outposts:GetObject",
                            "s3-outposts:GetObjectTagging",
                            "s3-outposts:GetObjectVersion",
                            "s3-outposts:GetObjectVersionForReplication",
                            "s3-outposts:GetObjectVersionTagging",
                            "s3-outposts:GetReplicationConfiguration",
                            "s3-outposts:ListAccessPoints",
                            "s3-outposts:ListBucket",
                            "s3-outposts:ListBucketMultipartUploads",
                            "s3-outposts:ListBucketVersions",
                            "s3-outposts:ListEndpoints",
                            "s3-outposts:ListMultipartUploadParts",
                            "s3-outposts:ListOutpostsWithS3",
                            "s3-outposts:ListRegionalBuckets",
                            "s3-outposts:ListSharedEndpoints",
                            "s3:DescribeJob",
                            "s3:Get*",
                            "s3:List*",
                            "sagemaker-groundtruth-synthetic:GetAccountDetails",
                            "sagemaker-groundtruth-synthetic:GetBatch",
                            "sagemaker-groundtruth-synthetic:GetProject",
                            "sagemaker-groundtruth-synthetic:ListBatchDataTransfers",
                            "sagemaker-groundtruth-synthetic:ListBatchSummaries",
                            "sagemaker-groundtruth-synthetic:ListProjectDataTransfers",
                            "sagemaker-groundtruth-synthetic:ListProjectSummaries",
                            "sagemaker:Describe*",
                            "sagemaker:GetSearchSuggestions",
                            "sagemaker:List*",
                            "sagemaker:Search",
                            "savingsplans:DescribeSavingsPlanRates",
                            "savingsplans:DescribeSavingsPlans",
                            "savingsplans:DescribeSavingsPlansOfferingRates",
                            "savingsplans:DescribeSavingsPlansOfferings",
                            "savingsplans:ListTagsForResource",
                            "scheduler:GetSchedule",
                            "scheduler:GetScheduleGroup",
                            "scheduler:ListScheduleGroups",
                            "scheduler:ListSchedules",
                            "scheduler:ListTagsForResource",
                            "schemas:Describe*",
                            "schemas:Get*",
                            "schemas:List*",
                            "schemas:Search*",
                            "sdb:Get*",
                            "sdb:List*",
                            "sdb:Select*",
                            "secretsmanager:Describe*",
                            "secretsmanager:GetResourcePolicy",
                            "secretsmanager:List*",
                            "securityhub:BatchGetAutomationRules",
                            "securityhub:BatchGetConfigurationPolicyAssociations",
                            "securityhub:BatchGetControlEvaluations",
                            "securityhub:BatchGetSecurityControls",
                            "securityhub:BatchGetStandardsControlAssociations",
                            "securityhub:Describe*",
                            "securityhub:Get*",
                            "securityhub:List*",
                            "securitylake:GetDataLakeExceptionSubscription",
                            "securitylake:GetDataLakeOrganizationConfiguration",
                            "securitylake:GetDataLakeSources",
                            "securitylake:GetSubscriber",
                            "securitylake:ListDataLakeExceptions",
                            "securitylake:ListDataLakes",
                            "securitylake:ListLogSources",
                            "securitylake:ListSubscribers",
                            "securitylake:ListTagsForResource",
                            "serverlessrepo:Get*",
                            "serverlessrepo:List*",
                            "serverlessrepo:SearchApplications",
                            "servicecatalog:Describe*",
                            "servicecatalog:GetApplication",
                            "servicecatalog:GetAttributeGroup",
                            "servicecatalog:List*",
                            "servicecatalog:Scan*",
                            "servicecatalog:Search*",
                            "servicediscovery:DiscoverInstances",
                            "servicediscovery:DiscoverInstancesRevision",
                            "servicediscovery:Get*",
                            "servicediscovery:List*",
                            "servicequotas:GetAssociationForServiceQuotaTemplate",
                            "servicequotas:GetAWSDefaultServiceQuota",
                            "servicequotas:GetRequestedServiceQuotaChange",
                            "servicequotas:GetServiceQuota",
                            "servicequotas:GetServiceQuotaIncreaseRequestFromTemplate",
                            "servicequotas:ListAWSDefaultServiceQuotas",
                            "servicequotas:ListRequestedServiceQuotaChangeHistory",
                            "servicequotas:ListRequestedServiceQuotaChangeHistoryByQuota",
                            "servicequotas:ListServiceQuotaIncreaseRequestsInTemplate",
                            "servicequotas:ListServiceQuotas",
                            "servicequotas:ListServices",
                            "ses:BatchGetMetricData",
                            "ses:Describe*",
                            "ses:Get*",
                            "ses:List*",
                            "shield:Describe*",
                            "shield:Get*",
                            "shield:List*",
                            "signer:DescribeSigningJob",
                            "signer:GetSigningPlatform",
                            "signer:GetSigningProfile",
                            "signer:ListProfilePermissions",
                            "signer:ListSigningJobs",
                            "signer:ListSigningPlatforms",
                            "signer:ListSigningProfiles",
                            "signer:ListTagsForResource",
                            "signin:ListTrustedIdentityPropagationApplicationsForConsole",
                            "sms-voice:DescribeAccountAttributes",
                            "sms-voice:DescribeAccountLimits",
                            "sms-voice:DescribeConfigurationSets",
                            "sms-voice:DescribeKeywords",
                            "sms-voice:DescribeOptedOutNumbers",
                            "sms-voice:DescribeOptOutLists",
                            "sms-voice:DescribePhoneNumbers",
                            "sms-voice:DescribePools",
                            "sms-voice:DescribeSenderIds",
                            "sms-voice:DescribeSpendLimits",
                            "sms-voice:ListPoolOriginationIdentities",
                            "sms-voice:ListTagsForResource",
                            "snowball:Describe*",
                            "snowball:Get*",
                            "snowball:List*",
                            "sns:Check*",
                            "sns:Get*",
                            "sns:List*",
                            "sqs:Get*",
                            "sqs:List*",
                            "sqs:Receive*",
                            "ssm-contacts:DescribeEngagement",
                            "ssm-contacts:DescribePage",
                            "ssm-contacts:GetContact",
                            "ssm-contacts:GetContactChannel",
                            "ssm-contacts:ListContactChannels",
                            "ssm-contacts:ListContacts",
                            "ssm-contacts:ListEngagements",
                            "ssm-contacts:ListPageReceipts",
                            "ssm-contacts:ListPagesByContact",
                            "ssm-contacts:ListPagesByEngagement",
                            "ssm-incidents:GetIncidentRecord",
                            "ssm-incidents:GetReplicationSet",
                            "ssm-incidents:GetResourcePolicies",
                            "ssm-incidents:GetResponsePlan",
                            "ssm-incidents:GetTimelineEvent",
                            "ssm-incidents:ListIncidentRecords",
                            "ssm-incidents:ListRelatedItems",
                            "ssm-incidents:ListReplicationSets",
                            "ssm-incidents:ListResponsePlans",
                            "ssm-incidents:ListTagsForResource",
                            "ssm-incidents:ListTimelineEvents",
                            "ssm-sap:GetApplication",
                            "ssm-sap:GetComponent",
                            "ssm-sap:GetDatabase",
                            "ssm-sap:GetOperation",
                            "ssm-sap:GetResourcePermission",
                            "ssm-sap:ListApplications",
                            "ssm-sap:ListComponents",
                            "ssm-sap:ListDatabases",
                            "ssm-sap:ListOperationEvents",
                            "ssm-sap:ListOperations",
                            "ssm-sap:ListTagsForResource",
                            "ssm:Describe*",
                            "ssm:Get*",
                            "ssm:List*",
                            "sso-directory:Describe*",
                            "sso-directory:List*",
                            "sso-directory:Search*",
                            "sso:Describe*",
                            "sso:Get*",
                            "sso:List*",
                            "sso:Search*",
                            "states:Describe*",
                            "states:GetExecutionHistory",
                            "states:List*",
                            "states:ValidateStateMachineDefinition",
                            "storagegateway:Describe*",
                            "storagegateway:List*",
                            "sts:GetAccessKeyInfo",
                            "sts:GetCallerIdentity",
                            "sts:GetSessionToken",
                            "support:DescribeAttachment",
                            "support:DescribeCases",
                            "support:DescribeCommunications",
                            "support:DescribeServices",
                            "support:DescribeSeverityLevels",
                            "support:DescribeTrustedAdvisorCheckRefreshStatuses",
                            "support:DescribeTrustedAdvisorCheckResult",
                            "support:DescribeTrustedAdvisorChecks",
                            "support:DescribeTrustedAdvisorCheckSummaries",
                            "supportplans:GetSupportPlan",
                            "supportplans:GetSupportPlanUpdateStatus",
                            "sustainability:GetCarbonFootprintSummary",
                            "swf:Count*",
                            "swf:Describe*",
                            "swf:Get*",
                            "swf:List*",
                            "synthetics:Describe*",
                            "synthetics:Get*",
                            "synthetics:List*",
                            "tag:DescribeReportCreation",
                            "tag:Get*",
                            "tax:GetExemptions",
                            "tax:GetTaxInheritance",
                            "tax:GetTaxInterview",
                            "tax:GetTaxRegistration",
                            "tax:GetTaxRegistrationDocument",
                            "tax:ListTaxRegistrations",
                            "timestream:DescribeBatchLoadTask",
                            "timestream:DescribeDatabase",
                            "timestream:DescribeEndpoints",
                            "timestream:DescribeTable",
                            "timestream:ListBatchLoadTasks",
                            "timestream:ListDatabases",
                            "timestream:ListMeasures",
                            "timestream:ListTables",
                            "timestream:ListTagsForResource",
                            "tnb:GetSolFunctionInstance",
                            "tnb:GetSolFunctionPackage",
                            "tnb:GetSolFunctionPackageContent",
                            "tnb:GetSolFunctionPackageDescriptor",
                            "tnb:GetSolNetworkInstance",
                            "tnb:GetSolNetworkOperation",
                            "tnb:GetSolNetworkPackage",
                            "tnb:GetSolNetworkPackageContent",
                            "tnb:GetSolNetworkPackageDescriptor",
                            "tnb:ListSolFunctionInstances",
                            "tnb:ListSolFunctionPackages",
                            "tnb:ListSolNetworkInstances",
                            "tnb:ListSolNetworkOperations",
                            "tnb:ListSolNetworkPackages",
                            "tnb:ListTagsForResource",
                            "transcribe:Get*",
                            "transcribe:List*",
                            "transfer:Describe*",
                            "transfer:List*",
                            "transfer:TestIdentityProvider",
                            "translate:DescribeTextTranslationJob",
                            "translate:GetParallelData",
                            "translate:GetTerminology",
                            "translate:ListParallelData",
                            "translate:ListTerminologies",
                            "translate:ListTextTranslationJobs",
                            "trustedadvisor:Describe*",
                            "trustedadvisor:GetOrganizationRecommendation",
                            "trustedadvisor:GetRecommendation",
                            "trustedadvisor:ListChecks",
                            "trustedadvisor:ListOrganizationRecommendationAccounts",
                            "trustedadvisor:ListOrganizationRecommendationResources",
                            "trustedadvisor:ListOrganizationRecommendations",
                            "trustedadvisor:ListRecommendationResources",
                            "trustedadvisor:ListRecommendations",
                            "user-subscriptions:ListApplicationClaims",
                            "user-subscriptions:ListClaims",
                            "user-subscriptions:ListUserSubscriptions",
                            "verifiedpermissions:GetIdentitySource",
                            "verifiedpermissions:GetPolicy",
                            "verifiedpermissions:GetPolicyStore",
                            "verifiedpermissions:GetPolicyTemplate",
                            "verifiedpermissions:GetSchema",
                            "verifiedpermissions:IsAuthorized",
                            "verifiedpermissions:IsAuthorizedWithToken",
                            "verifiedpermissions:ListIdentitySources",
                            "verifiedpermissions:ListPolicies",
                            "verifiedpermissions:ListPolicyStores",
                            "verifiedpermissions:ListPolicyTemplates",
                            "vpc-lattice:GetAccessLogSubscription",
                            "vpc-lattice:GetAuthPolicy",
                            "vpc-lattice:GetListener",
                            "vpc-lattice:GetResourcePolicy",
                            "vpc-lattice:GetRule",
                            "vpc-lattice:GetService",
                            "vpc-lattice:GetServiceNetwork",
                            "vpc-lattice:GetServiceNetworkServiceAssociation",
                            "vpc-lattice:GetServiceNetworkVpcAssociation",
                            "vpc-lattice:GetTargetGroup",
                            "vpc-lattice:ListAccessLogSubscriptions",
                            "vpc-lattice:ListListeners",
                            "vpc-lattice:ListRules",
                            "vpc-lattice:ListServiceNetworks",
                            "vpc-lattice:ListServiceNetworkServiceAssociations",
                            "vpc-lattice:ListServiceNetworkVpcAssociations",
                            "vpc-lattice:ListServices",
                            "vpc-lattice:ListTagsForResource",
                            "vpc-lattice:ListTargetGroups",
                            "vpc-lattice:ListTargets",
                            "waf-regional:Get*",
                            "waf-regional:List*",
                            "waf:Get*",
                            "waf:List*",
                            "wafv2:CheckCapacity",
                            "wafv2:Describe*",
                            "wafv2:Get*",
                            "wafv2:List*",
                            "wellarchitected:ExportLens",
                            "wellarchitected:GetAnswer",
                            "wellarchitected:GetConsolidatedReport",
                            "wellarchitected:GetLens",
                            "wellarchitected:GetLensReview",
                            "wellarchitected:GetLensReviewReport",
                            "wellarchitected:GetLensVersionDifference",
                            "wellarchitected:GetMilestone",
                            "wellarchitected:GetProfile",
                            "wellarchitected:GetProfileTemplate",
                            "wellarchitected:GetReviewTemplate",
                            "wellarchitected:GetReviewTemplateAnswer",
                            "wellarchitected:GetReviewTemplateLensReview",
                            "wellarchitected:GetWorkload",
                            "wellarchitected:ListAnswers",
                            "wellarchitected:ListCheckDetails",
                            "wellarchitected:ListCheckSummaries",
                            "wellarchitected:ListLenses",
                            "wellarchitected:ListLensReviewImprovements",
                            "wellarchitected:ListLensReviews",
                            "wellarchitected:ListLensShares",
                            "wellarchitected:ListMilestones",
                            "wellarchitected:ListNotifications",
                            "wellarchitected:ListProfileNotifications",
                            "wellarchitected:ListProfiles",
                            "wellarchitected:ListProfileShares",
                            "wellarchitected:ListReviewTemplateAnswers",
                            "wellarchitected:ListReviewTemplates",
                            "wellarchitected:ListShareInvitations",
                            "wellarchitected:ListTagsForResource",
                            "wellarchitected:ListTemplateShares",
                            "wellarchitected:ListWorkloads",
                            "wellarchitected:ListWorkloadShares",
                            "workdocs:CheckAlias",
                            "workdocs:Describe*",
                            "workdocs:Get*",
                            "workmail:Describe*",
                            "workmail:Get*",
                            "workmail:List*",
                            "workmail:Search*",
                            "workspaces-web:GetBrowserSettings",
                            "workspaces-web:GetIdentityProvider",
                            "workspaces-web:GetNetworkSettings",
                            "workspaces-web:GetPortal",
                            "workspaces-web:GetPortalServiceProviderMetadata",
                            "workspaces-web:GetTrustStore",
                            "workspaces-web:GetUserAccessLoggingSettings",
                            "workspaces-web:GetUserSettings",
                            "workspaces-web:ListBrowserSettings",
                            "workspaces-web:ListIdentityProviders",
                            "workspaces-web:ListNetworkSettings",
                            "workspaces-web:ListPortals",
                            "workspaces-web:ListTagsForResource",
                            "workspaces-web:ListTrustStores",
                            "workspaces-web:ListUserAccessLoggingSettings",
                            "workspaces-web:ListUserSettings",
                            "workspaces:Describe*",
                            "xray:BatchGet*",
                            "xray:Get*"
                        ],
                        "Resource": "*"
                    }
                ]
            },
            "tags": []
        },
        {
            "name": "AmazonRDSEnhancedMonitoringRole",
            "arn": "arn:aws:iam::aws:policy/service-role/AmazonRDSEnhancedMonitoringRole",
            "entity": "ANPAJV7BS425S4PTSSVGK",
            "version_id": "v1",
            "type": "AWS",
            "attached": true,
            "document": {
                "Version": "2012-10-17",
                "Statement": [
                    {
                        "Sid": "EnableCreationAndManagementOfRDSCloudwatchLogGroups",
                        "Effect": "Allow",
                        "Action": [
                            "logs:CreateLogGroup",
                            "logs:PutRetentionPolicy"
                        ],
                        "Resource": [
                            "arn:aws:logs:*:*:log-group:RDS*"
                        ]
                    },
                    {
                        "Sid": "EnableCreationAndManagementOfRDSCloudwatchLogStreams",
                        "Effect": "Allow",
                        "Action": [
                            "logs:CreateLogStream",
                            "logs:PutLogEvents",
                            "logs:DescribeLogStreams",
                            "logs:GetLogEvents"
                        ],
                        "Resource": [
                            "arn:aws:logs:*:*:log-group:RDS*:log-stream:*"
                        ]
                    }
                ]
            },
            "tags": []
        },
        {
            "name": "DataScientist",
            "arn": "arn:aws:iam::aws:policy/job-function/DataScientist",
            "entity": "ANPAJ5YHI2BQW7EQFYDXS",
            "version_id": "v5",
            "type": "AWS",
            "attached": true,
            "document": {
                "Version": "2012-10-17",
                "Statement": [
                    {
                        "Action": [
                            "autoscaling:*",
                            "cloudwatch:*",
                            "cloudformation:CreateStack",
                            "cloudformation:DescribeStackEvents",
                            "datapipeline:Describe*",
                            "datapipeline:ListPipelines",
                            "datapipeline:GetPipelineDefinition",
                            "datapipeline:QueryObjects",
                            "dynamodb:*",
                            "ec2:CancelSpotInstanceRequests",
                            "ec2:CancelSpotFleetRequests",
                            "ec2:CreateTags",
                            "ec2:DeleteTags",
                            "ec2:Describe*",
                            "ec2:ModifyImageAttribute",
                            "ec2:ModifyInstanceAttribute",
                            "ec2:ModifySpotFleetRequest",
                            "ec2:RequestSpotInstances",
                            "ec2:RequestSpotFleet",
                            "elasticfilesystem:*",
                            "elasticmapreduce:*",
                            "es:*",
                            "firehose:*",
                            "fsx:DescribeFileSystems",
                            "iam:GetInstanceProfile",
                            "iam:GetRole",
                            "iam:GetPolicy",
                            "iam:GetPolicyVersion",
                            "iam:ListRoles",
                            "kinesis:*",
                            "kms:List*",
                            "lambda:Create*",
                            "lambda:Delete*",
                            "lambda:Get*",
                            "lambda:InvokeFunction",
                            "lambda:PublishVersion",
                            "lambda:Update*",
                            "lambda:List*",
                            "machinelearning:*",
                            "sdb:*",
                            "rds:*",
                            "sns:ListSubscriptions",
                            "sns:ListTopics",
                            "logs:DescribeLogStreams",
                            "logs:GetLogEvents",
                            "redshift:*",
                            "s3:CreateBucket",
                            "sns:CreateTopic",
                            "sns:Get*",
                            "sns:List*"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    },
                    {
                        "Effect": "Allow",
                        "Action": [
                            "s3:Abort*",
                            "s3:DeleteObject",
                            "s3:Get*",
                            "s3:List*",
                            "s3:PutAccelerateConfiguration",
                            "s3:PutBucketCors",
                            "s3:PutBucketLogging",
                            "s3:PutBucketNotification",
                            "s3:PutBucketTagging",
                            "s3:PutObject",
                            "s3:Replicate*",
                            "s3:RestoreObject"
                        ],
                        "Resource": [
                            "*"
                        ]
                    },
                    {
                        "Effect": "Allow",
                        "Action": [
                            "ec2:RunInstances",
                            "ec2:TerminateInstances"
                        ],
                        "Resource": [
                            "*"
                        ]
                    },
                    {
                        "Effect": "Allow",
                        "Action": [
                            "iam:PassRole"
                        ],
                        "Resource": [
                            "arn:aws:iam::*:role/DataPipelineDefaultRole",
                            "arn:aws:iam::*:role/DataPipelineDefaultResourceRole",
                            "arn:aws:iam::*:role/EMR_EC2_DefaultRole",
                            "arn:aws:iam::*:role/EMR_DefaultRole",
                            "arn:aws:iam::*:role/kinesis-*"
                        ]
                    },
                    {
                        "Effect": "Allow",
                        "Action": [
                            "iam:PassRole"
                        ],
                        "Resource": "*",
                        "Condition": {
                            "StringEquals": {
                                "iam:PassedToService": "sagemaker.amazonaws.com"
                            }
                        }
                    },
                    {
                        "Effect": "Allow",
                        "Action": [
                            "sagemaker:*"
                        ],
                        "NotResource": [
                            "arn:aws:sagemaker:*:*:domain/*",
                            "arn:aws:sagemaker:*:*:user-profile/*",
                            "arn:aws:sagemaker:*:*:app/*",
                            "arn:aws:sagemaker:*:*:flow-definition/*"
                        ]
                    },
                    {
                        "Effect": "Allow",
                        "Action": [
                            "sagemaker:CreatePresignedDomainUrl",
                            "sagemaker:DescribeDomain",
                            "sagemaker:ListDomains",
                            "sagemaker:DescribeUserProfile",
                            "sagemaker:ListUserProfiles",
                            "sagemaker:*App",
                            "sagemaker:ListApps"
                        ],
                        "Resource": "*"
                    },
                    {
                        "Effect": "Allow",
                        "Action": [
                            "sagemaker:*FlowDefinition",
                            "sagemaker:*FlowDefinitions"
                        ],
                        "Resource": "*",
                        "Condition": {
                            "StringEqualsIfExists": {
                                "sagemaker:WorkteamType": [
                                    "private-crowd",
                                    "vendor-crowd"
                                ]
                            }
                        }
                    }
                ]
            },
            "tags": []
        },
        {
            "name": "Billing",
            "arn": "arn:aws:iam::aws:policy/job-function/Billing",
            "entity": "ANPAIFTHXT6FFMIRT7ZEA",
            "version_id": "v11",
            "type": "AWS",
            "attached": true,
            "document": {
                "Version": "2012-10-17",
                "Statement": [
                    {
                        "Sid": "VisualEditor0",
                        "Effect": "Allow",
                        "Action": [
                            "account:GetAccountInformation",
                            "aws-portal:*Billing",
                            "aws-portal:*PaymentMethods",
                            "aws-portal:*Usage",
                            "billing:GetBillingData",
                            "billing:GetBillingDetails",
                            "billing:GetBillingNotifications",
                            "billing:GetBillingPreferences",
                            "billing:GetContractInformation",
                            "billing:GetCredits",
                            "billing:GetIAMAccessPreference",
                            "billing:GetSellerOfRecord",
                            "billing:ListBillingViews",
                            "billing:PutContractInformation",
                            "billing:RedeemCredits",
                            "billing:UpdateBillingPreferences",
                            "billing:UpdateIAMAccessPreference",
                            "budgets:CreateBudgetAction",
                            "budgets:DeleteBudgetAction",
                            "budgets:DescribeBudgetActionsForBudget",
                            "budgets:DescribeBudgetAction",
                            "budgets:DescribeBudgetActionsForAccount",
                            "budgets:DescribeBudgetActionHistories",
                            "budgets:ExecuteBudgetAction",
                            "budgets:ModifyBudget",
                            "budgets:UpdateBudgetAction",
                            "budgets:ViewBudget",
                            "ce:CreateCostCategoryDefinition",
                            "ce:CreateNotificationSubscription",
                            "ce:CreateReport",
                            "ce:DeleteCostCategoryDefinition",
                            "ce:DeleteNotificationSubscription",
                            "ce:DeleteReport",
                            "ce:DescribeCostCategoryDefinition",
                            "ce:GetCostAndUsage",
                            "ce:ListCostAllocationTags",
                            "ce:ListCostCategoryDefinitions",
                            "ce:ListTagsForResource",
                            "ce:TagResource",
                            "ce:UpdateCostAllocationTagsStatus",
                            "ce:UpdateNotificationSubscription",
                            "ce:UpdatePreferences",
                            "ce:UpdateReport",
                            "ce:UpdateCostCategoryDefinition",
                            "ce:UntagResource",
                            "ce:StartCostAllocationTagBackfill",
                            "ce:ListCostAllocationTagBackfillHistory",
                            "ce:GetTags",
                            "ce:GetDimensionValues",
                            "consolidatedbilling:GetAccountBillingRole",
                            "consolidatedbilling:ListLinkedAccounts",
                            "cur:DeleteReportDefinition",
                            "cur:DescribeReportDefinitions",
                            "cur:GetClassicReport",
                            "cur:GetClassicReportPreferences",
                            "cur:GetUsageReport",
                            "cur:ModifyReportDefinition",
                            "cur:PutClassicReportPreferences",
                            "cur:PutReportDefinition",
                            "cur:ValidateReportDestination",
                            "freetier:GetFreeTierAlertPreference",
                            "freetier:GetFreeTierUsage",
                            "freetier:PutFreeTierAlertPreference",
                            "invoicing:GetInvoiceEmailDeliveryPreferences",
                            "invoicing:GetInvoicePDF",
                            "invoicing:ListInvoiceSummaries",
                            "invoicing:PutInvoiceEmailDeliveryPreferences",
                            "payments:CreatePaymentInstrument",
                            "payments:DeletePaymentInstrument",
                            "payments:GetPaymentInstrument",
                            "payments:GetPaymentStatus",
                            "payments:ListPaymentPreferences",
                            "payments:ListTagsForResource",
                            "payments:ListPaymentInstruments",
                            "payments:MakePayment",
                            "payments:TagResource",
                            "payments:UpdatePaymentPreferences",
                            "payments:UpdatePaymentInstrument",
                            "payments:UntagResource",
                            "pricing:DescribeServices",
                            "purchase-orders:AddPurchaseOrder",
                            "purchase-orders:DeletePurchaseOrder",
                            "purchase-orders:GetPurchaseOrder",
                            "purchase-orders:ListPurchaseOrderInvoices",
                            "purchase-orders:ListPurchaseOrders",
                            "purchase-orders:ListTagsForResource",
                            "purchase-orders:ModifyPurchaseOrders",
                            "purchase-orders:TagResource",
                            "purchase-orders:UntagResource",
                            "purchase-orders:UpdatePurchaseOrder",
                            "purchase-orders:UpdatePurchaseOrderStatus",
                            "purchase-orders:ViewPurchaseOrders",
                            "support:CreateCase",
                            "support:AddAttachmentsToSet",
                            "sustainability:GetCarbonFootprintSummary",
                            "tax:BatchPutTaxRegistration",
                            "tax:DeleteTaxRegistration",
                            "tax:GetExemptions",
                            "tax:GetTaxInheritance",
                            "tax:GetTaxInterview",
                            "tax:GetTaxRegistration",
                            "tax:GetTaxRegistrationDocument",
                            "tax:ListTaxRegistrations",
                            "tax:PutTaxInheritance",
                            "tax:PutTaxInterview",
                            "tax:PutTaxRegistration",
                            "tax:UpdateExemptions"
                        ],
                        "Resource": "*"
                    }
                ]
            },
            "tags": []
        },
        {
            "name": "SupportUser",
            "arn": "arn:aws:iam::aws:policy/job-function/SupportUser",
            "entity": "ANPAI3V4GSSN5SJY3P2RO",
            "version_id": "v8",
            "type": "AWS",
            "attached": true,
            "document": {
                "Version": "2012-10-17",
                "Statement": [
                    {
                        "Action": [
                            "support:*",
                            "acm:DescribeCertificate",
                            "acm:GetCertificate",
                            "acm:List*",
                            "acm-pca:DescribeCertificateAuthority",
                            "acm-pca:ListCertificateAuthorities",
                            "apigateway:GET",
                            "autoscaling:Describe*",
                            "aws-marketplace:ViewSubscriptions",
                            "cloudformation:Describe*",
                            "cloudformation:Get*",
                            "cloudformation:List*",
                            "cloudformation:EstimateTemplateCost",
                            "cloudfront:Get*",
                            "cloudfront:List*",
                            "cloudsearch:Describe*",
                            "cloudsearch:List*",
                            "cloudtrail:DescribeTrails",
                            "cloudtrail:GetTrailStatus",
                            "cloudtrail:LookupEvents",
                            "cloudtrail:ListTags",
                            "cloudtrail:ListPublicKeys",
                            "cloudwatch:Describe*",
                            "cloudwatch:Get*",
                            "cloudwatch:List*",
                            "codecommit:BatchGetRepositories",
                            "codecommit:Get*",
                            "codecommit:List*",
                            "codedeploy:Batch*",
                            "codedeploy:Get*",
                            "codedeploy:List*",
                            "codepipeline:AcknowledgeJob",
                            "codepipeline:AcknowledgeThirdPartyJob",
                            "codepipeline:ListActionTypes",
                            "codepipeline:ListPipelines",
                            "codepipeline:PollForJobs",
                            "codepipeline:PollForThirdPartyJobs",
                            "codepipeline:GetPipelineState",
                            "codepipeline:GetPipeline",
                            "cognito-identity:List*",
                            "cognito-identity:LookupDeveloperIdentity",
                            "cognito-identity:Describe*",
                            "cognito-idp:DescribeResourceServer",
                            "cognito-idp:DescribeRiskConfiguration",
                            "cognito-idp:DescribeUserImportJob",
                            "cognito-idp:DescribeUserPool",
                            "cognito-idp:DescribeUserPoolDomain",
                            "cognito-idp:List*",
                            "cognito-sync:Describe*",
                            "cognito-sync:GetBulkPublishDetails",
                            "cognito-sync:GetCognitoEvents",
                            "cognito-sync:GetIdentityPoolConfiguration",
                            "cognito-sync:List*",
                            "config:DescribeConfigurationRecorders",
                            "config:DescribeConfigurationRecorderStatus",
                            "config:DescribeConfigRuleEvaluationStatus",
                            "config:DescribeConfigRules",
                            "config:DescribeDeliveryChannels",
                            "config:DescribeDeliveryChannelStatus",
                            "config:GetResourceConfigHistory",
                            "config:ListDiscoveredResources",
                            "datapipeline:DescribeObjects",
                            "datapipeline:DescribePipelines",
                            "datapipeline:GetPipelineDefinition",
                            "datapipeline:ListPipelines",
                            "datapipeline:QueryObjects",
                            "datapipeline:ReportTaskProgress",
                            "datapipeline:ReportTaskRunnerHeartbeat",
                            "devicefarm:List*",
                            "devicefarm:Get*",
                            "directconnect:Describe*",
                            "discovery:Describe*",
                            "discovery:ListConfigurations",
                            "dms:Describe*",
                            "dms:List*",
                            "ds:DescribeDirectories",
                            "ds:DescribeSnapshots",
                            "ds:GetDirectoryLimits",
                            "ds:GetSnapshotLimits",
                            "ds:ListAuthorizedApplications",
                            "dynamodb:DescribeLimits",
                            "dynamodb:DescribeTable",
                            "dynamodb:ListTables",
                            "ec2:Describe*",
                            "ec2:DescribeHosts",
                            "ec2:describeIdentityIdFormat",
                            "ec2:DescribeIdFormat",
                            "ec2:DescribeInstanceAttribute",
                            "ec2:DescribeNatGateways",
                            "ec2:DescribeReservedInstancesModifications",
                            "ec2:DescribeTags",
                            "ec2:SearchLocalGatewayRoutes",
                            "ecr:GetRepositoryPolicy",
                            "ecr:BatchCheckLayerAvailability",
                            "ecr:DescribeRepositories",
                            "ecr:ListImages",
                            "ecs:Describe*",
                            "ecs:List*",
                            "elasticache:Describe*",
                            "elasticache:List*",
                            "elasticbeanstalk:Check*",
                            "elasticbeanstalk:Describe*",
                            "elasticbeanstalk:List*",
                            "elasticbeanstalk:RequestEnvironmentInfo",
                            "elasticbeanstalk:RetrieveEnvironmentInfo",
                            "elasticbeanstalk:ValidateConfigurationSettings",
                            "elasticfilesystem:Describe*",
                            "elasticloadbalancing:Describe*",
                            "elasticmapreduce:Describe*",
                            "elasticmapreduce:List*",
                            "elastictranscoder:List*",
                            "elastictranscoder:ReadJob",
                            "elasticfilesystem:DescribeFileSystems",
                            "es:Describe*",
                            "es:List*",
                            "es:ESHttpGet",
                            "es:ESHttpHead",
                            "events:DescribeRule",
                            "events:List*",
                            "events:TestEventPattern",
                            "firehose:Describe*",
                            "firehose:List*",
                            "gamelift:List*",
                            "gamelift:Describe*",
                            "glacier:ListVaults",
                            "glacier:DescribeVault",
                            "glacier:DescribeJob",
                            "glacier:Get*",
                            "glacier:List*",
                            "iam:GenerateCredentialReport",
                            "iam:GenerateServiceLastAccessedDetails",
                            "iam:Get*",
                            "iam:List*",
                            "importexport:GetStatus",
                            "importexport:ListJobs",
                            "inspector:Describe*",
                            "inspector:List*",
                            "iot:Describe*",
                            "iot:Get*",
                            "iot:List*",
                            "kinesisanalytics:DescribeApplication",
                            "kinesisanalytics:DiscoverInputSchema",
                            "kinesisanalytics:GetApplicationState",
                            "kinesisanalytics:ListApplications",
                            "kinesis:Describe*",
                            "kinesis:Get*",
                            "kinesis:List*",
                            "kms:Describe*",
                            "kms:Get*",
                            "kms:List*",
                            "lambda:List*",
                            "lambda:Get*",
                            "logs:Describe*",
                            "logs:TestMetricFilter",
                            "machinelearning:Describe*",
                            "machinelearning:Get*",
                            "opsworks:Describe*",
                            "rds:Describe*",
                            "rds:ListTagsForResource",
                            "redshift:Describe*",
                            "route53:Get*",
                            "route53:List*",
                            "route53domains:CheckDomainAvailability",
                            "route53domains:GetDomainDetail",
                            "route53domains:GetOperationDetail",
                            "route53domains:List*",
                            "s3:List*",
                            "sdb:GetAttributes",
                            "sdb:List*",
                            "sdb:Select*",
                            "servicecatalog:SearchProducts",
                            "servicecatalog:DescribeProduct",
                            "servicecatalog:DescribeProductView",
                            "servicecatalog:ListLaunchPaths",
                            "servicecatalog:DescribeProvisioningParameters",
                            "servicecatalog:ListRecordHistory",
                            "servicecatalog:DescribeRecord",
                            "servicecatalog:ScanProvisionedProducts",
                            "ses:Get*",
                            "ses:List*",
                            "sns:Get*",
                            "sns:List*",
                            "sqs:GetQueueAttributes",
                            "sqs:GetQueueUrl",
                            "sqs:ListQueues",
                            "sqs:ReceiveMessage",
                            "ssm:List*",
                            "ssm:Describe*",
                            "storagegateway:Describe*",
                            "storagegateway:List*",
                            "swf:Count*",
                            "swf:Describe*",
                            "swf:Get*",
                            "swf:List*",
                            "waf:Get*",
                            "waf:List*",
                            "workdocs:Describe*",
                            "workmail:Describe*",
                            "workmail:Get*",
                            "workspaces:Describe*"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    }
                ]
            },
            "tags": []
        },
        {
            "name": "DatabaseAdministrator",
            "arn": "arn:aws:iam::aws:policy/job-function/DatabaseAdministrator",
            "entity": "ANPAIGBMAW4VUQKOQNVT6",
            "version_id": "v2",
            "type": "AWS",
            "attached": true,
            "document": {
                "Version": "2012-10-17",
                "Statement": [
                    {
                        "Effect": "Allow",
                        "Action": [
                            "cloudwatch:DeleteAlarms",
                            "cloudwatch:Describe*",
                            "cloudwatch:DisableAlarmActions",
                            "cloudwatch:EnableAlarmActions",
                            "cloudwatch:Get*",
                            "cloudwatch:List*",
                            "cloudwatch:PutMetricAlarm",
                            "datapipeline:ActivatePipeline",
                            "datapipeline:CreatePipeline",
                            "datapipeline:DeletePipeline",
                            "datapipeline:DescribeObjects",
                            "datapipeline:DescribePipelines",
                            "datapipeline:GetPipelineDefinition",
                            "datapipeline:ListPipelines",
                            "datapipeline:PutPipelineDefinition",
                            "datapipeline:QueryObjects",
                            "dynamodb:*",
                            "ec2:DescribeAccountAttributes",
                            "ec2:DescribeAddresses",
                            "ec2:DescribeAvailabilityZones",
                            "ec2:DescribeInternetGateways",
                            "ec2:DescribeSecurityGroups",
                            "ec2:DescribeSubnets",
                            "ec2:DescribeVpcs",
                            "elasticache:*",
                            "iam:ListRoles",
                            "iam:GetRole",
                            "kms:ListKeys",
                            "lambda:CreateEventSourceMapping",
                            "lambda:CreateFunction",
                            "lambda:DeleteEventSourceMapping",
                            "lambda:DeleteFunction",
                            "lambda:GetFunctionConfiguration",
                            "lambda:ListEventSourceMappings",
                            "lambda:ListFunctions",
                            "logs:DescribeLogGroups",
                            "logs:DescribeLogStreams",
                            "logs:FilterLogEvents",
                            "logs:GetLogEvents",
                            "logs:Create*",
                            "logs:PutLogEvents",
                            "logs:PutMetricFilter",
                            "rds:*",
                            "redshift:*",
                            "s3:CreateBucket",
                            "sns:CreateTopic",
                            "sns:DeleteTopic",
                            "sns:Get*",
                            "sns:List*",
                            "sns:SetTopicAttributes",
                            "sns:Subscribe",
                            "sns:Unsubscribe"
                        ],
                        "Resource": "*"
                    },
                    {
                        "Effect": "Allow",
                        "Action": [
                            "s3:AbortMultipartUpload",
                            "s3:DeleteObject*",
                            "s3:Get*",
                            "s3:List*",
                            "s3:PutAccelerateConfiguration",
                            "s3:PutBucketTagging",
                            "s3:PutBucketVersioning",
                            "s3:PutBucketWebsite",
                            "s3:PutLifecycleConfiguration",
                            "s3:PutReplicationConfiguration",
                            "s3:PutObject*",
                            "s3:Replicate*",
                            "s3:RestoreObject"
                        ],
                        "Resource": [
                            "*"
                        ]
                    },
                    {
                        "Effect": "Allow",
                        "Action": [
                            "iam:PassRole"
                        ],
                        "Resource": [
                            "arn:aws:iam::*:role/rds-monitoring-role",
                            "arn:aws:iam::*:role/rdbms-lambda-access",
                            "arn:aws:iam::*:role/lambda_exec_role",
                            "arn:aws:iam::*:role/lambda-dynamodb-*",
                            "arn:aws:iam::*:role/lambda-vpc-execution-role",
                            "arn:aws:iam::*:role/DataPipelineDefaultRole",
                            "arn:aws:iam::*:role/DataPipelineDefaultResourceRole"
                        ]
                    }
                ]
            },
            "tags": []
        },
        {
            "name": "AmazonCognitoIdpEmailServiceRolePolicy",
            "arn": "arn:aws:iam::aws:policy/aws-service-role/AmazonCognitoIdpEmailServiceRolePolicy",
            "entity": "ANPAIX7PW362PLAQFKBHM",
            "version_id": "v1",
            "type": "AWS",
            "attached": true,
            "document": {
                "Version": "2012-10-17",
                "Statement": [
                    {
                        "Effect": "Allow",
                        "Action": [
                            "ses:SendEmail",
                            "ses:SendRawEmail"
                        ],
                        "Resource": "*"
                    },
                    {
                        "Effect": "Deny",
                        "Action": [
                            "ses:List*"
                        ],
                        "Resource": "*"
                    }
                ]
            },
            "tags": []
        },
        {
            "name": "SecurityAudit",
            "arn": "arn:aws:iam::aws:policy/SecurityAudit",
            "entity": "ANPAIX2T3QCXHR2OGGCTO",
            "version_id": "v42",
            "type": "AWS",
            "attached": true,
            "document": {
                "Version": "2012-10-17",
                "Statement": [
                    {
                        "Sid": "BaseSecurityAuditStatement",
                        "Effect": "Allow",
                        "Action": [
                            "a4b:ListSkills",
                            "access-analyzer:GetAnalyzedResource",
                            "access-analyzer:GetAnalyzer",
                            "access-analyzer:GetArchiveRule",
                            "access-analyzer:GetFinding",
                            "access-analyzer:ListAnalyzedResources",
                            "access-analyzer:ListAnalyzers",
                            "access-analyzer:ListArchiveRules",
                            "access-analyzer:ListFindings",
                            "access-analyzer:ListTagsForResource",
                            "account:GetAlternateContact",
                            "account:GetRegionOptStatus",
                            "acm-pca:DescribeCertificateAuthority",
                            "acm-pca:DescribeCertificateAuthorityAuditReport",
                            "acm-pca:GetPolicy",
                            "acm-pca:ListCertificateAuthorities",
                            "acm-pca:ListPermissions",
                            "acm-pca:ListTags",
                            "acm:Describe*",
                            "acm:List*",
                            "airflow:GetEnvironment",
                            "airflow:ListEnvironments",
                            "appflow:ListFlows",
                            "appflow:ListTagsForResource",
                            "application-autoscaling:Describe*",
                            "appmesh:Describe*",
                            "appmesh:List*",
                            "apprunner:DescribeAutoScalingConfiguration",
                            "apprunner:DescribeCustomDomains",
                            "apprunner:DescribeObservabilityConfiguration",
                            "apprunner:DescribeService",
                            "apprunner:DescribeVpcConnector",
                            "apprunner:DescribeVpcIngressConnection",
                            "apprunner:ListAutoScalingConfigurations",
                            "apprunner:ListConnections",
                            "apprunner:ListObservabilityConfigurations",
                            "apprunner:ListOperations",
                            "apprunner:ListServices",
                            "apprunner:ListTagsForResource",
                            "apprunner:ListVpcConnectors",
                            "apprunner:ListVpcIngressConnections",
                            "appsync:GetApiCache",
                            "appsync:List*",
                            "athena:GetWorkGroup",
                            "athena:List*",
                            "auditmanager:GetAccountStatus",
                            "auditmanager:ListAssessmentControlInsightsByControlDomain",
                            "auditmanager:ListAssessmentFrameworkShareRequests",
                            "auditmanager:ListAssessmentFrameworks",
                            "auditmanager:ListAssessmentReports",
                            "auditmanager:ListAssessments",
                            "auditmanager:ListControlDomainInsights",
                            "auditmanager:ListControlDomainInsightsByAssessment",
                            "auditmanager:ListControlInsightsByControlDomain",
                            "auditmanager:ListControls",
                            "auditmanager:ListNotifications",
                            "auditmanager:ListTagsForResource",
                            "autoscaling-plans:DescribeScalingPlans",
                            "autoscaling:Describe*",
                            "backup:DescribeGlobalSettings",
                            "backup:DescribeRegionSettings",
                            "backup:GetBackupVaultAccessPolicy",
                            "backup:GetBackupVaultNotifications",
                            "backup:ListBackupVaults",
                            "backup:ListTags",
                            "batch:DescribeComputeEnvironments",
                            "batch:DescribeJobDefinitions",
                            "bedrock:GetCustomModel",
                            "bedrock:GetModelInvocationLoggingConfiguration",
                            "bedrock:ListCustomModels",
                            "bedrock:ListTagsForResource",
                            "braket:SearchJobs",
                            "braket:SearchQuantumTasks",
                            "chime:List*",
                            "cloud9:Describe*",
                            "cloud9:ListEnvironments",
                            "clouddirectory:ListDirectories",
                            "cloudformation:DescribeStack*",
                            "cloudformation:GetStackPolicy",
                            "cloudformation:GetTemplate",
                            "cloudformation:ListStack*",
                            "cloudfront:Get*",
                            "cloudfront:List*",
                            "cloudsearch:DescribeDomainEndpointOptions",
                            "cloudsearch:DescribeDomains",
                            "cloudsearch:DescribeServiceAccessPolicies",
                            "cloudtrail:DescribeTrails",
                            "cloudtrail:GetEventSelectors",
                            "cloudtrail:GetInsightSelectors",
                            "cloudtrail:GetTrail",
                            "cloudtrail:GetTrailStatus",
                            "cloudtrail:ListTags",
                            "cloudtrail:ListTrails",
                            "cloudtrail:LookupEvents",
                            "cloudwatch:Describe*",
                            "cloudwatch:GetDashboard",
                            "cloudwatch:ListDashboards",
                            "cloudwatch:ListTagsForResource",
                            "codeartifact:GetDomainPermissionsPolicy",
                            "codeartifact:GetRepositoryPermissionsPolicy",
                            "codeartifact:ListRepositories",
                            "codebuild:BatchGetProjects",
                            "codebuild:GetResourcePolicy",
                            "codebuild:ListProjects",
                            "codecommit:BatchGetRepositories",
                            "codecommit:GetBranch",
                            "codecommit:GetObjectIdentifier",
                            "codecommit:GetRepository",
                            "codecommit:GetRepositoryTriggers",
                            "codecommit:List*",
                            "codedeploy:Batch*",
                            "codedeploy:Get*",
                            "codedeploy:List*",
                            "codepipeline:GetJobDetails",
                            "codepipeline:GetPipeline",
                            "codepipeline:GetPipelineExecution",
                            "codepipeline:GetPipelineState",
                            "codepipeline:ListPipelines",
                            "codestar:Describe*",
                            "codestar:List*",
                            "cognito-identity:Describe*",
                            "cognito-identity:GetIdentityPoolRoles",
                            "cognito-identity:ListIdentityPools",
                            "cognito-identity:ListTagsForResource",
                            "cognito-idp:Describe*",
                            "cognito-idp:ListDevices",
                            "cognito-idp:ListGroups",
                            "cognito-idp:ListIdentityProviders",
                            "cognito-idp:ListResourceServers",
                            "cognito-idp:ListTagsForResource",
                            "cognito-idp:ListUserImportJobs",
                            "cognito-idp:ListUserPoolClients",
                            "cognito-idp:ListUserPools",
                            "cognito-idp:ListUsers",
                            "cognito-idp:ListUsersInGroup",
                            "cognito-sync:Describe*",
                            "cognito-sync:List*",
                            "comprehend:Describe*",
                            "comprehend:List*",
                            "comprehendmedical:ListICD10CMInferenceJobs",
                            "comprehendmedical:ListPHIDetectionJobs",
                            "comprehendmedical:ListRxNormInferenceJobs",
                            "comprehendmedical:ListSNOMEDCTInferenceJobs",
                            "config:BatchGetAggregateResourceConfig",
                            "config:BatchGetResourceConfig",
                            "config:Deliver*",
                            "config:Describe*",
                            "config:Get*",
                            "config:List*",
                            "config:SelectAggregateResourceConfig",
                            "config:SelectResourceConfig",
                            "connect:ListApprovedOrigins",
                            "connect:ListInstanceAttributes",
                            "connect:ListInstanceStorageConfigs",
                            "connect:ListInstances",
                            "connect:ListIntegrationAssociations",
                            "connect:ListLambdaFunctions",
                            "connect:ListLexBots",
                            "connect:ListSecurityKeys",
                            "databrew:DescribeDataset",
                            "databrew:DescribeProject",
                            "databrew:ListJobs",
                            "databrew:ListProjects",
                            "dataexchange:ListDataSets",
                            "datapipeline:DescribeObjects",
                            "datapipeline:DescribePipelines",
                            "datapipeline:EvaluateExpression",
                            "datapipeline:GetPipelineDefinition",
                            "datapipeline:ListPipelines",
                            "datapipeline:QueryObjects",
                            "datapipeline:ValidatePipelineDefinition",
                            "datasync:Describe*",
                            "datasync:List*",
                            "dax:Describe*",
                            "dax:ListTags",
                            "deepracer:ListModels",
                            "detective:GetGraphIngestState",
                            "detective:ListGraphs",
                            "detective:ListMembers",
                            "devicefarm:ListProjects",
                            "directconnect:Describe*",
                            "discovery:DescribeAgents",
                            "discovery:DescribeConfigurations",
                            "discovery:DescribeContinuousExports",
                            "discovery:DescribeExportConfigurations",
                            "discovery:DescribeExportTasks",
                            "discovery:DescribeImportTasks",
                            "dms:Describe*",
                            "dms:ListTagsForResource",
                            "docdb-elastic:ListClusters",
                            "ds:DescribeDirectories",
                            "dynamodb:DescribeContinuousBackups",
                            "dynamodb:DescribeExport",
                            "dynamodb:DescribeGlobalTable",
                            "dynamodb:DescribeKinesisStreamingDestination",
                            "dynamodb:DescribeTable",
                            "dynamodb:DescribeTimeToLive",
                            "dynamodb:ListBackups",
                            "dynamodb:ListExports",
                            "dynamodb:ListGlobalTables",
                            "dynamodb:ListStreams",
                            "dynamodb:ListTables",
                            "dynamodb:ListTagsOfResource",
                            "ec2:Describe*",
                            "ec2:GetEbsEncryptionByDefault",
                            "ec2:GetImageBlockPublicAccessState",
                            "ec2:GetManagedPrefixListAssociations",
                            "ec2:GetManagedPrefixListEntries",
                            "ec2:GetNetworkInsightsAccessScopeAnalysisFindings",
                            "ec2:GetNetworkInsightsAccessScopeContent",
                            "ec2:GetTransitGatewayAttachmentPropagations",
                            "ec2:GetTransitGatewayMulticastDomainAssociations",
                            "ec2:GetTransitGatewayPrefixListReferences",
                            "ec2:GetTransitGatewayRouteTableAssociations",
                            "ec2:GetTransitGatewayRouteTablePropagations",
                            "ec2:SearchTransitGatewayRoutes",
                            "ecr-public:DescribeImageTags",
                            "ecr-public:DescribeImages",
                            "ecr-public:DescribeRegistries",
                            "ecr-public:DescribeRepositories",
                            "ecr-public:GetRegistryCatalogData",
                            "ecr-public:GetRepositoryCatalogData",
                            "ecr-public:GetRepositoryPolicy",
                            "ecr-public:ListTagsForResource",
                            "ecr:BatchGetRepositoryScanningConfiguration",
                            "ecr:DescribeImageScanFindings",
                            "ecr:DescribeImages",
                            "ecr:DescribeRegistry",
                            "ecr:DescribeRepositories",
                            "ecr:GetLifecyclePolicy",
                            "ecr:GetRegistryPolicy",
                            "ecr:GetRegistryScanningConfiguration",
                            "ecr:GetRepositoryPolicy",
                            "ecr:ListImages",
                            "ecr:ListTagsForResource",
                            "ecs:Describe*",
                            "ecs:List*",
                            "eks:DescribeCluster",
                            "eks:DescribeFargateProfile",
                            "eks:DescribeNodeGroup",
                            "eks:ListClusters",
                            "eks:ListFargateProfiles",
                            "eks:ListNodeGroups",
                            "eks:ListTagsForResource",
                            "eks:ListUpdates",
                            "elastic-inference:DescribeAccelerators",
                            "elasticache:Describe*",
                            "elasticache:ListTagsForResource",
                            "elasticbeanstalk:Describe*",
                            "elasticbeanstalk:ListTagsForResource",
                            "elasticfilesystem:DescribeAccessPoints",
                            "elasticfilesystem:DescribeAccountPreferences",
                            "elasticfilesystem:DescribeBackupPolicy",
                            "elasticfilesystem:DescribeFileSystemPolicy",
                            "elasticfilesystem:DescribeFileSystems",
                            "elasticfilesystem:DescribeLifecycleConfiguration",
                            "elasticfilesystem:DescribeMountTargetSecurityGroups",
                            "elasticfilesystem:DescribeMountTargets",
                            "elasticfilesystem:DescribeReplicationConfigurations",
                            "elasticfilesystem:DescribeTags",
                            "elasticloadbalancing:Describe*",
                            "elasticmapreduce:Describe*",
                            "elasticmapreduce:GetAutoTerminationPolicy",
                            "elasticmapreduce:GetBlockPublicAccessConfiguration",
                            "elasticmapreduce:GetManagedScalingPolicy",
                            "elasticmapreduce:ListClusters",
                            "elasticmapreduce:ListInstances",
                            "elasticmapreduce:ListSecurityConfigurations",
                            "elastictranscoder:ListPipelines",
                            "emr-serverless:GetApplication",
                            "emr-serverless:ListApplications",
                            "emr-serverless:ListJobRuns",
                            "es:Describe*",
                            "es:GetCompatibleVersions",
                            "es:ListDomainNames",
                            "es:ListElasticsearchInstanceTypeDetails",
                            "es:ListElasticsearchVersions",
                            "es:ListTags",
                            "events:Describe*",
                            "events:List*",
                            "events:TestEventPattern",
                            "finspace:ListEnvironments",
                            "finspace:ListKxEnvironments",
                            "firehose:Describe*",
                            "firehose:List*",
                            "fms:ListComplianceStatus",
                            "fms:ListPolicies",
                            "forecast:ListDatasets",
                            "frauddetector:GetDetectors",
                            "fsx:Describe*",
                            "fsx:List*",
                            "gamelift:ListBuilds",
                            "gamelift:ListFleets",
                            "geo:ListMaps",
                            "glacier:DescribeVault",
                            "glacier:GetDataRetrievalPolicy",
                            "glacier:GetVaultAccessPolicy",
                            "glacier:GetVaultLock",
                            "glacier:ListVaults",
                            "globalaccelerator:Describe*",
                            "globalaccelerator:List*",
                            "glue:GetCrawlers",
                            "glue:GetDataCatalogEncryptionSettings",
                            "glue:GetDatabases",
                            "glue:GetDevEndpoints",
                            "glue:GetJobs",
                            "glue:GetResourcePolicy",
                            "glue:GetSecurityConfiguration",
                            "glue:GetSecurityConfigurations",
                            "glue:GetTags",
                            "grafana:ListWorkspaces",
                            "greengrass:List*",
                            "guardduty:DescribePublishingDestination",
                            "guardduty:Get*",
                            "guardduty:List*",
                            "health:DescribeAffectedAccountsForOrganization",
                            "health:DescribeAffectedEntities",
                            "health:DescribeAffectedEntitiesForOrganization",
                            "health:DescribeEntityAggregates",
                            "health:DescribeEventAggregates",
                            "health:DescribeEventDetails",
                            "health:DescribeEventDetailsForOrganization",
                            "health:DescribeEventTypes",
                            "health:DescribeEvents",
                            "health:DescribeEventsForOrganization",
                            "health:DescribeHealthServiceStatusForOrganization",
                            "healthlake:ListFHIRDatastores",
                            "honeycode:ListTables",
                            "iam:GenerateCredentialReport",
                            "iam:GenerateServiceLastAccessedDetails",
                            "iam:Get*",
                            "iam:List*",
                            "iam:SimulateCustomPolicy",
                            "iam:SimulatePrincipalPolicy",
                            "identitystore:ListGroupMemberships",
                            "identitystore:ListGroupMembershipsForMember",
                            "identitystore:ListGroups",
                            "identitystore:ListUsers",
                            "inspector2:BatchGetAccountStatus",
                            "inspector2:BatchGetFreeTrialInfo",
                            "inspector2:DescribeOrganizationConfiguration",
                            "inspector2:GetConfiguration",
                            "inspector2:GetDelegatedAdminAccount",
                            "inspector2:GetFindingsReportStatus",
                            "inspector2:GetMember",
                            "inspector2:ListAccountPermissions",
                            "inspector2:ListCoverage",
                            "inspector2:ListCoverageStatistics",
                            "inspector2:ListDelegatedAdminAccounts",
                            "inspector2:ListFilters",
                            "inspector2:ListFindingAggregations",
                            "inspector2:ListFindings",
                            "inspector2:ListTagsForResource",
                            "inspector2:ListUsageTotals",
                            "inspector:Describe*",
                            "inspector:Get*",
                            "inspector:List*",
                            "inspector:Preview*",
                            "iot:Describe*",
                            "iot:GetPolicy",
                            "iot:GetPolicyVersion",
                            "iot:List*",
                            "iotanalytics:ListChannels",
                            "iotevents:ListInputs",
                            "iotfleetwise:ListModelManifests",
                            "iotsitewise:DescribeGatewayCapabilityConfiguration",
                            "iotsitewise:ListAssetModels",
                            "iotsitewise:ListGateways",
                            "iottwinmaker:ListWorkspaces",
                            "kafka-cluster:Describe*",
                            "kafka:Describe*",
                            "kafka:GetBootstrapBrokers",
                            "kafka:GetCompatibleKafkaVersions",
                            "kafka:List*",
                            "kafkaconnect:Describe*",
                            "kafkaconnect:List*",
                            "kendra:DescribeIndex",
                            "kendra:ListDataSources",
                            "kendra:ListIndices",
                            "kendra:ListTagsForResource",
                            "kinesis:DescribeLimits",
                            "kinesis:DescribeStream",
                            "kinesis:DescribeStreamConsumer",
                            "kinesis:DescribeStreamSummary",
                            "kinesis:ListShards",
                            "kinesis:ListStreamConsumers",
                            "kinesis:ListStreams",
                            "kinesis:ListTagsForStream",
                            "kinesisanalytics:ListApplications",
                            "kinesisanalytics:ListTagsForResource",
                            "kinesisvideo:DescribeEdgeConfiguration",
                            "kinesisvideo:DescribeMappedResourceConfiguration",
                            "kinesisvideo:DescribeMediaStorageConfiguration",
                            "kinesisvideo:DescribeNotificationConfiguration",
                            "kinesisvideo:DescribeSignalingChannel",
                            "kinesisvideo:DescribeStream",
                            "kinesisvideo:ListSignalingChannels",
                            "kinesisvideo:ListStreams",
                            "kinesisvideo:ListTagsForResource",
                            "kinesisvideo:ListTagsForStream",
                            "kms:Describe*",
                            "kms:Get*",
                            "kms:List*",
                            "lambda:GetAccountSettings",
                            "lambda:GetFunctionConfiguration",
                            "lambda:GetFunctionEventInvokeConfig",
                            "lambda:GetLayerVersionPolicy",
                            "lambda:GetPolicy",
                            "lambda:List*",
                            "lex:DescribeBot",
                            "lex:DescribeResourcePolicy",
                            "lex:ListBots",
                            "license-manager:List*",
                            "lightsail:GetBuckets",
                            "lightsail:GetContainerServices",
                            "lightsail:GetDiskSnapshots",
                            "lightsail:GetDisks",
                            "lightsail:GetInstances",
                            "lightsail:GetLoadBalancers",
                            "logs:Describe*",
                            "logs:ListTagsForResource",
                            "logs:ListTagsLogGroup",
                            "lookoutequipment:ListDatasets",
                            "lookoutmetrics:ListAnomalyDetectors",
                            "lookoutvision:ListProjects",
                            "machinelearning:DescribeMLModels",
                            "macie2:ListFindings",
                            "managedblockchain:ListNetworks",
                            "mechanicalturk:ListHITs",
                            "mediaconnect:Describe*",
                            "mediaconnect:List*",
                            "medialive:ListChannels",
                            "mediapackage-vod:DescribePackagingGroup",
                            "mediapackage-vod:ListPackagingGroups",
                            "mediapackage:DescribeOriginEndpoint",
                            "mediapackage:ListOriginEndpoints",
                            "mediastore:GetContainerPolicy",
                            "mediastore:GetCorsPolicy",
                            "mediastore:ListContainers",
                            "memorydb:DescribeClusters",
                            "mq:DescribeBroker",
                            "mq:DescribeBrokerEngineTypes",
                            "mq:DescribeBrokerInstanceOptions",
                            "mq:DescribeConfiguration",
                            "mq:DescribeConfigurationRevision",
                            "mq:DescribeUser",
                            "mq:ListBrokers",
                            "mq:ListConfigurationRevisions",
                            "mq:ListConfigurations",
                            "mq:ListTags",
                            "mq:ListUsers",
                            "network-firewall:DescribeFirewall",
                            "network-firewall:DescribeFirewallPolicy",
                            "network-firewall:DescribeLoggingConfiguration",
                            "network-firewall:DescribeResourcePolicy",
                            "network-firewall:DescribeRuleGroup",
                            "network-firewall:ListFirewallPolicies",
                            "network-firewall:ListFirewalls",
                            "network-firewall:ListRuleGroups",
                            "networkmanager:DescribeGlobalNetworks",
                            "nimble:ListStudios",
                            "opsworks-cm:DescribeServers",
                            "opsworks:DescribeStacks",
                            "organizations:Describe*",
                            "organizations:List*",
                            "personalize:DescribeDatasetGroup",
                            "personalize:ListDatasetGroups",
                            "private-networks:ListNetworks",
                            "profile:GetDomain",
                            "profile:ListDomains",
                            "profile:ListIntegrations",
                            "qldb:DescribeJournalS3Export",
                            "qldb:DescribeLedger",
                            "qldb:ListJournalS3Exports",
                            "qldb:ListJournalS3ExportsForLedger",
                            "qldb:ListLedgers",
                            "quicksight:Describe*",
                            "quicksight:List*",
                            "ram:GetResourceShares",
                            "ram:List*",
                            "rds:Describe*",
                            "rds:DownloadDBLogFilePortion",
                            "rds:ListTagsForResource",
                            "redshift-serverless:GetNamespace",
                            "redshift-serverless:ListTagsForResource",
                            "redshift-serverless:ListWorkgroups",
                            "redshift:Describe*",
                            "rekognition:Describe*",
                            "rekognition:List*",
                            "resource-groups:ListGroupResources",
                            "robomaker:Describe*",
                            "robomaker:List*",
                            "route53:Get*",
                            "route53:List*",
                            "route53domains:GetDomainDetail",
                            "route53domains:GetOperationDetail",
                            "route53domains:ListDomains",
                            "route53domains:ListOperations",
                            "route53domains:ListTagsForDomain",
                            "route53resolver:Get*",
                            "route53resolver:List*",
                            "s3-outposts:ListEndpoints",
                            "s3-outposts:ListOutpostsWithS3",
                            "s3-outposts:ListSharedEndpoints",
                            "s3:GetAccelerateConfiguration",
                            "s3:GetAccessPoint",
                            "s3:GetAccessPointPolicy",
                            "s3:GetAccessPointPolicyStatus",
                            "s3:GetAccountPublicAccessBlock",
                            "s3:GetAnalyticsConfiguration",
                            "s3:GetBucket*",
                            "s3:GetEncryptionConfiguration",
                            "s3:GetInventoryConfiguration",
                            "s3:GetLifecycleConfiguration",
                            "s3:GetMetricsConfiguration",
                            "s3:GetMultiRegionAccessPointPolicy",
                            "s3:GetObjectAcl",
                            "s3:GetObjectVersionAcl",
                            "s3:GetReplicationConfiguration",
                            "s3:ListAccessPoints",
                            "s3:ListAllMyBuckets",
                            "s3:ListMultiRegionAccessPoints",
                            "sagemaker:Describe*",
                            "sagemaker:List*",
                            "schemas:DescribeCodeBinding",
                            "schemas:DescribeDiscoverer",
                            "schemas:DescribeRegistry",
                            "schemas:DescribeSchema",
                            "schemas:GetResourcePolicy",
                            "schemas:ListDiscoverers",
                            "schemas:ListRegistries",
                            "schemas:ListSchemaVersions",
                            "schemas:ListSchemas",
                            "schemas:ListTagsForResource",
                            "sdb:DomainMetadata",
                            "sdb:ListDomains",
                            "secretsmanager:DescribeSecret",
                            "secretsmanager:GetResourcePolicy",
                            "secretsmanager:ListSecretVersionIds",
                            "secretsmanager:ListSecrets",
                            "securityhub:Describe*",
                            "securityhub:Get*",
                            "securityhub:List*",
                            "serverlessrepo:GetApplicationPolicy",
                            "serverlessrepo:List*",
                            "servicequotas:GetAWSDefaultServiceQuota",
                            "servicequotas:GetAssociationForServiceQuotaTemplate",
                            "servicequotas:GetRequestedServiceQuotaChange",
                            "servicequotas:GetServiceQuota",
                            "servicequotas:GetServiceQuotaIncreaseRequestFromTemplate",
                            "servicequotas:ListAWSDefaultServiceQuotas",
                            "servicequotas:ListRequestedServiceQuotaChangeHistory",
                            "servicequotas:ListRequestedServiceQuotaChangeHistoryByQuota",
                            "servicequotas:ListServiceQuotaIncreaseRequestsInTemplate",
                            "servicequotas:ListServiceQuotas",
                            "servicequotas:ListServices",
                            "servicequotas:ListTagsForResource",
                            "ses:Describe*",
                            "ses:GetAccount",
                            "ses:GetAccountSendingEnabled",
                            "ses:GetConfigurationSet",
                            "ses:GetConfigurationSetEventDestinations",
                            "ses:GetDedicatedIps",
                            "ses:GetEmailIdentity",
                            "ses:GetIdentityDkimAttributes",
                            "ses:GetIdentityPolicies",
                            "ses:GetIdentityVerificationAttributes",
                            "ses:ListConfigurationSets",
                            "ses:ListDedicatedIpPools",
                            "ses:ListIdentities",
                            "ses:ListIdentityPolicies",
                            "ses:ListReceiptFilters",
                            "ses:ListReceiptRuleSets",
                            "ses:ListVerifiedEmailAddresses",
                            "shield:Describe*",
                            "shield:GetSubscriptionState",
                            "shield:List*",
                            "snowball:ListClusters",
                            "snowball:ListJobs",
                            "sns:GetPlatformApplicationAttributes",
                            "sns:GetTopicAttributes",
                            "sns:ListSubscriptions",
                            "sns:ListSubscriptionsByTopic",
                            "sns:ListTagsForResource",
                            "sns:ListTopics",
                            "sqs:GetQueueAttributes",
                            "sqs:ListDeadLetterSourceQueues",
                            "sqs:ListQueueTags",
                            "sqs:ListQueues",
                            "ssm:Describe*",
                            "ssm:GetAutomationExecution",
                            "ssm:GetServiceSetting",
                            "ssm:ListAssociationVersions",
                            "ssm:ListAssociations",
                            "ssm:ListCommands",
                            "ssm:ListComplianceItems",
                            "ssm:ListComplianceSummaries",
                            "ssm:ListDocumentMetadataHistory",
                            "ssm:ListDocumentVersions",
                            "ssm:ListDocuments",
                            "ssm:ListInventoryEntries",
                            "ssm:ListOpsMetadata",
                            "ssm:ListResourceComplianceSummaries",
                            "ssm:ListResourceDataSync",
                            "ssm:ListTagsForResource",
                            "sso:DescribeAccountAssignmentCreationStatus",
                            "sso:DescribePermissionSet",
                            "sso:DescribePermissionsPolicies",
                            "sso:List*",
                            "states:DescribeStateMachine",
                            "states:ListStateMachines",
                            "storagegateway:DescribeBandwidthRateLimit",
                            "storagegateway:DescribeCache",
                            "storagegateway:DescribeCachediSCSIVolumes",
                            "storagegateway:DescribeGatewayInformation",
                            "storagegateway:DescribeMaintenanceStartTime",
                            "storagegateway:DescribeNFSFileShares",
                            "storagegateway:DescribeSnapshotSchedule",
                            "storagegateway:DescribeStorediSCSIVolumes",
                            "storagegateway:DescribeTapeArchives",
                            "storagegateway:DescribeTapeRecoveryPoints",
                            "storagegateway:DescribeTapes",
                            "storagegateway:DescribeUploadBuffer",
                            "storagegateway:DescribeVTLDevices",
                            "storagegateway:DescribeWorkingStorage",
                            "storagegateway:List*",
                            "sts:GetAccessKeyInfo",
                            "support:DescribeTrustedAdvisorCheckRefreshStatuses",
                            "support:DescribeTrustedAdvisorCheckResult",
                            "support:DescribeTrustedAdvisorCheckSummaries",
                            "support:DescribeTrustedAdvisorChecks",
                            "synthetics:DescribeCanaries",
                            "synthetics:DescribeCanariesLastRun",
                            "synthetics:DescribeRuntimeVersions",
                            "synthetics:GetCanary",
                            "synthetics:GetCanaryRuns",
                            "synthetics:GetGroup",
                            "synthetics:ListAssociatedGroups",
                            "synthetics:ListGroupResources",
                            "synthetics:ListGroups",
                            "synthetics:ListTagsForResource",
                            "tag:GetResources",
                            "tag:GetTagKeys",
                            "transcribe:GetCallAnalyticsCategory",
                            "transcribe:GetMedicalVocabulary",
                            "transcribe:GetVocabulary",
                            "transcribe:GetVocabularyFilter",
                            "transcribe:ListCallAnalyticsCategories",
                            "transcribe:ListCallAnalyticsJobs",
                            "transcribe:ListLanguageModels",
                            "transcribe:ListMedicalTranscriptionJobs",
                            "transcribe:ListMedicalVocabularies",
                            "transcribe:ListTagsForResource",
                            "transcribe:ListTranscriptionJobs",
                            "transcribe:ListVocabularies",
                            "transcribe:ListVocabularyFilters",
                            "transfer:Describe*",
                            "transfer:List*",
                            "translate:List*",
                            "trustedadvisor:Describe*",
                            "voiceid:DescribeDomain",
                            "waf-regional:GetWebACL",
                            "waf-regional:ListResourcesForWebACL",
                            "waf-regional:ListTagsForResource",
                            "waf-regional:ListWebACLs",
                            "waf:GetWebACL",
                            "waf:ListTagsForResource",
                            "waf:ListWebACLs",
                            "wafv2:GetLoggingConfiguration",
                            "wafv2:GetWebACL",
                            "wafv2:GetWebACLForResource",
                            "wafv2:ListAvailableManagedRuleGroups",
                            "wafv2:ListIPSets",
                            "wafv2:ListLoggingConfigurations",
                            "wafv2:ListRegexPatternSets",
                            "wafv2:ListResourcesForWebACL",
                            "wafv2:ListRuleGroups",
                            "wafv2:ListTagsForResource",
                            "wafv2:ListWebACLs",
                            "wisdom:GetAssistant",
                            "workdocs:DescribeResourcePermissions",
                            "workspaces:Describe*",
                            "xray:GetEncryptionConfig",
                            "xray:GetGroup",
                            "xray:GetGroups",
                            "xray:GetSamplingRules",
                            "xray:GetSamplingTargets",
                            "xray:GetTraceSummaries",
                            "xray:ListTagsForResource"
                        ],
                        "Resource": "*"
                    },
                    {
                        "Sid": "APIGatewayAccess",
                        "Effect": "Allow",
                        "Action": [
                            "apigateway:GET"
                        ],
                        "Resource": [
                            "arn:aws:apigateway:*::/apis",
                            "arn:aws:apigateway:*::/apis/*/authorizers/*",
                            "arn:aws:apigateway:*::/apis/*/authorizers",
                            "arn:aws:apigateway:*::/apis/*/cors",
                            "arn:aws:apigateway:*::/apis/*/deployments/*",
                            "arn:aws:apigateway:*::/apis/*/deployments",
                            "arn:aws:apigateway:*::/apis/*/exports/*",
                            "arn:aws:apigateway:*::/apis/*/integrations/*",
                            "arn:aws:apigateway:*::/apis/*/integrations",
                            "arn:aws:apigateway:*::/apis/*/models/*",
                            "arn:aws:apigateway:*::/apis/*/models",
                            "arn:aws:apigateway:*::/apis/*/routes/*",
                            "arn:aws:apigateway:*::/apis/*/routes",
                            "arn:aws:apigateway:*::/apis/*/stages",
                            "arn:aws:apigateway:*::/apis/*/stages/*",
                            "arn:aws:apigateway:*::/clientcertificates",
                            "arn:aws:apigateway:*::/clientcertificates/*",
                            "arn:aws:apigateway:*::/domainnames",
                            "arn:aws:apigateway:*::/domainnames/*/apimappings",
                            "arn:aws:apigateway:*::/restapis",
                            "arn:aws:apigateway:*::/restapis/*/authorizers/*",
                            "arn:aws:apigateway:*::/restapis/*/authorizers",
                            "arn:aws:apigateway:*::/restapis/*/deployments/*",
                            "arn:aws:apigateway:*::/restapis/*/deployments",
                            "arn:aws:apigateway:*::/restapis/*/documentation/parts/*",
                            "arn:aws:apigateway:*::/restapis/*/documentation/parts",
                            "arn:aws:apigateway:*::/restapis/*/documentation/versions/*",
                            "arn:aws:apigateway:*::/restapis/*/documentation/versions",
                            "arn:aws:apigateway:*::/restapis/*/gatewayresponses/*",
                            "arn:aws:apigateway:*::/restapis/*/gatewayresponses",
                            "arn:aws:apigateway:*::/restapis/*/models/*",
                            "arn:aws:apigateway:*::/restapis/*/models",
                            "arn:aws:apigateway:*::/restapis/*/requestvalidators",
                            "arn:aws:apigateway:*::/restapis/*/requestvalidators/*",
                            "arn:aws:apigateway:*::/restapis/*/resources/*",
                            "arn:aws:apigateway:*::/restapis/*/resources",
                            "arn:aws:apigateway:*::/restapis/*/stages",
                            "arn:aws:apigateway:*::/restapis/*/stages/*",
                            "arn:aws:apigateway:*::/tags/*",
                            "arn:aws:apigateway:*::/vpclinks"
                        ]
                    }
                ]
            },
            "tags": []
        },
        {
            "name": "IAMUserChangePassword",
            "arn": "arn:aws:iam::aws:policy/IAMUserChangePassword",
            "entity": "ANPAJ4L4MM2A7QIEB56MS",
            "version_id": "v2",
            "type": "AWS",
            "attached": true,
            "document": {
                "Version": "2012-10-17",
                "Statement": [
                    {
                        "Effect": "Allow",
                        "Action": [
                            "iam:ChangePassword"
                        ],
                        "Resource": [
                            "arn:aws:iam::*:user/${aws:username}"
                        ]
                    },
                    {
                        "Effect": "Allow",
                        "Action": [
                            "iam:GetAccountPasswordPolicy"
                        ],
                        "Resource": "*"
                    }
                ]
            },
            "tags": []
        },
        {
            "name": "PowerUserAccess",
            "arn": "arn:aws:iam::aws:policy/PowerUserAccess",
            "entity": "ANPAJYRXTHIB4FOVS3ZXS",
            "version_id": "v6",
            "type": "AWS",
            "attached": true,
            "document": {
                "Version": "2012-10-17",
                "Statement": [
                    {
                        "Effect": "Allow",
                        "NotAction": [
                            "iam:*",
                            "organizations:*",
                            "account:*"
                        ],
                        "Resource": "*"
                    },
                    {
                        "Effect": "Allow",
                        "Action": [
                            "account:GetAccountInformation",
                            "account:GetPrimaryEmail",
                            "account:ListRegions",
                            "iam:CreateServiceLinkedRole",
                            "iam:DeleteServiceLinkedRole",
                            "iam:ListRoles",
                            "organizations:DescribeOrganization"
                        ],
                        "Resource": "*"
                    }
                ]
            },
            "tags": []
        },
        {
            "name": "AmazonS3ReadOnlyAccess",
            "arn": "arn:aws:iam::aws:policy/AmazonS3ReadOnlyAccess",
            "entity": "ANPAIZTJ4DXE7G6AGAE6M",
            "version_id": "v3",
            "type": "AWS",
            "attached": true,
            "document": {
                "Version": "2012-10-17",
                "Statement": [
                    {
                        "Effect": "Allow",
                        "Action": [
                            "s3:Get*",
                            "s3:List*",
                            "s3:Describe*",
                            "s3-object-lambda:Get*",
                            "s3-object-lambda:List*"
                        ],
                        "Resource": "*"
                    }
                ]
            },
            "tags": []
        },
        {
            "name": "NetworkAdministrator",
            "arn": "arn:aws:iam::aws:policy/job-function/NetworkAdministrator",
            "entity": "ANPAJPNMADZFJCVPJVZA2",
            "version_id": "v12",
            "type": "AWS",
            "attached": true,
            "document": {
                "Version": "2012-10-17",
                "Statement": [
                    {
                        "Sid": "AllowDefaultNetworkAdminActions",
                        "Effect": "Allow",
                        "Action": [
                            "autoscaling:Describe*",
                            "cloudfront:ListDistributions",
                            "cloudwatch:DeleteAlarms",
                            "cloudwatch:DescribeAlarms",
                            "cloudwatch:GetMetricStatistics",
                            "cloudwatch:PutMetricAlarm",
                            "directconnect:*",
                            "ec2:AcceptVpcEndpointConnections",
                            "ec2:AllocateAddress",
                            "ec2:AssignIpv6Addresses",
                            "ec2:AssignPrivateIpAddresses",
                            "ec2:AssociateAddress",
                            "ec2:AssociateDhcpOptions",
                            "ec2:AssociateRouteTable",
                            "ec2:AssociateSubnetCidrBlock",
                            "ec2:AssociateVpcCidrBlock",
                            "ec2:AttachInternetGateway",
                            "ec2:AttachNetworkInterface",
                            "ec2:AttachVpnGateway",
                            "ec2:CreateCarrierGateway",
                            "ec2:CreateCustomerGateway",
                            "ec2:CreateDefaultSubnet",
                            "ec2:CreateDefaultVpc",
                            "ec2:CreateDhcpOptions",
                            "ec2:CreateEgressOnlyInternetGateway",
                            "ec2:CreateFlowLogs",
                            "ec2:CreateInternetGateway",
                            "ec2:CreateNatGateway",
                            "ec2:CreateNetworkAcl",
                            "ec2:CreateNetworkAclEntry",
                            "ec2:CreateNetworkInterface",
                            "ec2:CreateNetworkInterfacePermission",
                            "ec2:CreatePlacementGroup",
                            "ec2:CreateRoute",
                            "ec2:CreateRouteTable",
                            "ec2:CreateSecurityGroup",
                            "ec2:CreateSubnet",
                            "ec2:CreateTags",
                            "ec2:CreateVpc",
                            "ec2:CreateVpcEndpoint",
                            "ec2:CreateVpcEndpointConnectionNotification",
                            "ec2:CreateVpcEndpointServiceConfiguration",
                            "ec2:CreateVpnConnection",
                            "ec2:CreateVpnConnectionRoute",
                            "ec2:CreateVpnGateway",
                            "ec2:DeleteCarrierGateway",
                            "ec2:DeleteEgressOnlyInternetGateway",
                            "ec2:DeleteFlowLogs",
                            "ec2:DeleteNatGateway",
                            "ec2:DeleteNetworkInterface",
                            "ec2:DeleteNetworkInterfacePermission",
                            "ec2:DeletePlacementGroup",
                            "ec2:DeleteSubnet",
                            "ec2:DeleteTags",
                            "ec2:DeleteVpc",
                            "ec2:DeleteVpcEndpointConnectionNotifications",
                            "ec2:DeleteVpcEndpointServiceConfigurations",
                            "ec2:DeleteVpcEndpoints",
                            "ec2:DeleteVpnConnection",
                            "ec2:DeleteVpnConnectionRoute",
                            "ec2:DeleteVpnGateway",
                            "ec2:DescribeAccountAttributes",
                            "ec2:DescribeAddresses",
                            "ec2:DescribeAvailabilityZones",
                            "ec2:DescribeCarrierGateways",
                            "ec2:DescribeClassicLinkInstances",
                            "ec2:DescribeCustomerGateways",
                            "ec2:DescribeDhcpOptions",
                            "ec2:DescribeEgressOnlyInternetGateways",
                            "ec2:DescribeFlowLogs",
                            "ec2:DescribeInstances",
                            "ec2:DescribeInternetGateways",
                            "ec2:DescribeIpv6Pools",
                            "ec2:DescribeKeyPairs",
                            "ec2:DescribeMovingAddresses",
                            "ec2:DescribeNatGateways",
                            "ec2:DescribeNetworkAcls",
                            "ec2:DescribeNetworkInterfaceAttribute",
                            "ec2:DescribeNetworkInterfacePermissions",
                            "ec2:DescribeNetworkInterfaces",
                            "ec2:DescribePlacementGroups",
                            "ec2:DescribePrefixLists",
                            "ec2:DescribePublicIpv4Pools",
                            "ec2:DescribeRouteTables",
                            "ec2:DescribeSecurityGroupReferences",
                            "ec2:DescribeSecurityGroupRules",
                            "ec2:DescribeSecurityGroups",
                            "ec2:DescribeStaleSecurityGroups",
                            "ec2:DescribeSubnets",
                            "ec2:DescribeTags",
                            "ec2:DescribeVpcAttribute",
                            "ec2:DescribeVpcClassicLink",
                            "ec2:DescribeVpcClassicLinkDnsSupport",
                            "ec2:DescribeVpcEndpointConnectionNotifications",
                            "ec2:DescribeVpcEndpointConnections",
                            "ec2:DescribeVpcEndpointServiceConfigurations",
                            "ec2:DescribeVpcEndpointServicePermissions",
                            "ec2:DescribeVpcEndpointServices",
                            "ec2:DescribeVpcEndpoints",
                            "ec2:DescribeVpcPeeringConnections",
                            "ec2:DescribeVpcs",
                            "ec2:DescribeVpnConnections",
                            "ec2:DescribeVpnGateways",
                            "ec2:DetachInternetGateway",
                            "ec2:DetachNetworkInterface",
                            "ec2:DetachVpnGateway",
                            "ec2:DisableVgwRoutePropagation",
                            "ec2:DisableVpcClassicLinkDnsSupport",
                            "ec2:DisassociateAddress",
                            "ec2:DisassociateRouteTable",
                            "ec2:DisassociateSubnetCidrBlock",
                            "ec2:DisassociateVpcCidrBlock",
                            "ec2:EnableVgwRoutePropagation",
                            "ec2:EnableVpcClassicLinkDnsSupport",
                            "ec2:GetVpnConnectionDeviceSampleConfiguration",
                            "ec2:GetVpnConnectionDeviceTypes",
                            "ec2:GetVpnTunnelReplacementStatus",
                            "ec2:ModifyNetworkInterfaceAttribute",
                            "ec2:ModifySecurityGroupRules",
                            "ec2:ModifySubnetAttribute",
                            "ec2:ModifyVpcAttribute",
                            "ec2:ModifyVpcEndpoint",
                            "ec2:ModifyVpcEndpointConnectionNotification",
                            "ec2:ModifyVpcEndpointServiceConfiguration",
                            "ec2:ModifyVpcEndpointServicePermissions",
                            "ec2:ModifyVpcPeeringConnectionOptions",
                            "ec2:ModifyVpcTenancy",
                            "ec2:ModifyVpnConnection",
                            "ec2:ModifyVpnConnectionOptions",
                            "ec2:ModifyVpnTunnelCertificate",
                            "ec2:ModifyVpnTunnelOptions",
                            "ec2:MoveAddressToVpc",
                            "ec2:RejectVpcEndpointConnections",
                            "ec2:ReleaseAddress",
                            "ec2:ReplaceNetworkAclAssociation",
                            "ec2:ReplaceNetworkAclEntry",
                            "ec2:ReplaceRoute",
                            "ec2:ReplaceRouteTableAssociation",
                            "ec2:ReplaceVpnTunnel",
                            "ec2:ResetNetworkInterfaceAttribute",
                            "ec2:RestoreAddressToClassic",
                            "ec2:UnassignIpv6Addresses",
                            "ec2:UnassignPrivateIpAddresses",
                            "ec2:UpdateSecurityGroupRuleDescriptionsEgress",
                            "ec2:UpdateSecurityGroupRuleDescriptionsIngress",
                            "elasticbeanstalk:Describe*",
                            "elasticbeanstalk:List*",
                            "elasticbeanstalk:RequestEnvironmentInfo",
                            "elasticbeanstalk:RetrieveEnvironmentInfo",
                            "elasticloadbalancing:*",
                            "logs:DescribeLogGroups",
                            "logs:DescribeLogStreams",
                            "logs:GetLogEvents",
                            "route53:*",
                            "route53domains:*",
                            "sns:CreateTopic",
                            "sns:ListSubscriptionsByTopic",
                            "sns:ListTopics"
                        ],
                        "Resource": "*"
                    },
                    {
                        "Sid": "AllowVPCPermissions",
                        "Effect": "Allow",
                        "Action": [
                            "ec2:AcceptVpcPeeringConnection",
                            "ec2:AttachClassicLinkVpc",
                            "ec2:AuthorizeSecurityGroupEgress",
                            "ec2:AuthorizeSecurityGroupIngress",
                            "ec2:CreateVpcPeeringConnection",
                            "ec2:DeleteCustomerGateway",
                            "ec2:DeleteDhcpOptions",
                            "ec2:DeleteInternetGateway",
                            "ec2:DeleteNetworkAcl",
                            "ec2:DeleteNetworkAclEntry",
                            "ec2:DeleteRoute",
                            "ec2:DeleteRouteTable",
                            "ec2:DeleteSecurityGroup",
                            "ec2:DeleteVolume",
                            "ec2:DeleteVpcPeeringConnection",
                            "ec2:DetachClassicLinkVpc",
                            "ec2:DisableVpcClassicLink",
                            "ec2:EnableVpcClassicLink",
                            "ec2:GetConsoleScreenshot",
                            "ec2:RejectVpcPeeringConnection",
                            "ec2:RevokeSecurityGroupEgress",
                            "ec2:RevokeSecurityGroupIngress"
                        ],
                        "Resource": [
                            "*"
                        ]
                    },
                    {
                        "Sid": "AllowLocalGatewayPermissions",
                        "Effect": "Allow",
                        "Action": [
                            "ec2:CreateLocalGatewayRoute",
                            "ec2:CreateLocalGatewayRouteTableVpcAssociation",
                            "ec2:DeleteLocalGatewayRoute",
                            "ec2:DeleteLocalGatewayRouteTableVpcAssociation",
                            "ec2:DescribeLocalGatewayRouteTableVirtualInterfaceGroupAssociations",
                            "ec2:DescribeLocalGatewayRouteTableVpcAssociations",
                            "ec2:DescribeLocalGatewayRouteTables",
                            "ec2:DescribeLocalGatewayVirtualInterfaceGroups",
                            "ec2:DescribeLocalGatewayVirtualInterfaces",
                            "ec2:DescribeLocalGateways",
                            "ec2:SearchLocalGatewayRoutes"
                        ],
                        "Resource": "*"
                    },
                    {
                        "Sid": "DiscoverBuckets",
                        "Effect": "Allow",
                        "Action": [
                            "s3:GetBucketLocation",
                            "s3:GetBucketWebsite",
                            "s3:ListBucket"
                        ],
                        "Resource": [
                            "*"
                        ]
                    },
                    {
                        "Sid": "DiscoverFlowLogRoles",
                        "Effect": "Allow",
                        "Action": [
                            "iam:GetRole",
                            "iam:ListRoles",
                            "iam:PassRole"
                        ],
                        "Resource": "arn:aws:iam::*:role/flow-logs-*"
                    },
                    {
                        "Sid": "NetworkmanagerPermissions",
                        "Effect": "Allow",
                        "Action": [
                            "networkmanager:*"
                        ],
                        "Resource": "*"
                    },
                    {
                        "Sid": "TransitGatewayPermissions",
                        "Effect": "Allow",
                        "Action": [
                            "ec2:AcceptTransitGatewayVpcAttachment",
                            "ec2:AssociateTransitGatewayRouteTable",
                            "ec2:CreateTransitGateway",
                            "ec2:CreateTransitGatewayRoute",
                            "ec2:CreateTransitGatewayRouteTable",
                            "ec2:CreateTransitGatewayVpcAttachment",
                            "ec2:DeleteTransitGateway",
                            "ec2:DeleteTransitGatewayRoute",
                            "ec2:DeleteTransitGatewayRouteTable",
                            "ec2:DeleteTransitGatewayVpcAttachment",
                            "ec2:DescribeTransitGatewayAttachments",
                            "ec2:DescribeTransitGatewayRouteTables",
                            "ec2:DescribeTransitGatewayVpcAttachments",
                            "ec2:DescribeTransitGateways",
                            "ec2:DisableTransitGatewayRouteTablePropagation",
                            "ec2:DisassociateTransitGatewayRouteTable",
                            "ec2:EnableTransitGatewayRouteTablePropagation",
                            "ec2:ExportTransitGatewayRoutes",
                            "ec2:GetTransitGatewayAttachmentPropagations",
                            "ec2:GetTransitGatewayRouteTableAssociations",
                            "ec2:GetTransitGatewayRouteTablePropagations",
                            "ec2:ModifyTransitGateway",
                            "ec2:ModifyTransitGatewayVpcAttachment",
                            "ec2:RejectTransitGatewayVpcAttachment",
                            "ec2:ReplaceTransitGatewayRoute",
                            "ec2:SearchTransitGatewayRoutes"
                        ],
                        "Resource": "*"
                    },
                    {
                        "Sid": "AllowTransitGatewaySLRCreation",
                        "Effect": "Allow",
                        "Action": [
                            "iam:CreateServiceLinkedRole"
                        ],
                        "Resource": "*",
                        "Condition": {
                            "StringLike": {
                                "iam:AWSServiceName": [
                                    "transitgateway.amazonaws.com"
                                ]
                            }
                        }
                    }
                ]
            },
            "tags": []
        },
        {
            "name": "NeptuneFullAccess",
            "arn": "arn:aws:iam::aws:policy/NeptuneFullAccess",
            "entity": "ANPAIXSDEYRCNJRC6ITFK",
            "version_id": "v7",
            "type": "AWS",
            "attached": true,
            "document": {
                "Version": "2012-10-17",
                "Statement": [
                    {
                        "Sid": "AllowNeptuneCreate",
                        "Effect": "Allow",
                        "Action": [
                            "rds:CreateDBCluster",
                            "rds:CreateDBInstance"
                        ],
                        "Resource": [
                            "arn:aws:rds:*:*:*"
                        ],
                        "Condition": {
                            "StringEquals": {
                                "rds:DatabaseEngine": [
                                    "graphdb",
                                    "neptune"
                                ]
                            }
                        }
                    },
                    {
                        "Sid": "AllowManagementPermissionsForRDS",
                        "Effect": "Allow",
                        "Action": [
                            "rds:AddRoleToDBCluster",
                            "rds:AddSourceIdentifierToSubscription",
                            "rds:AddTagsToResource",
                            "rds:ApplyPendingMaintenanceAction",
                            "rds:CopyDBClusterParameterGroup",
                            "rds:CopyDBClusterSnapshot",
                            "rds:CopyDBParameterGroup",
                            "rds:CreateDBClusterEndpoint",
                            "rds:CreateDBClusterParameterGroup",
                            "rds:CreateDBClusterSnapshot",
                            "rds:CreateDBParameterGroup",
                            "rds:CreateDBSubnetGroup",
                            "rds:CreateEventSubscription",
                            "rds:CreateGlobalCluster",
                            "rds:DeleteDBCluster",
                            "rds:DeleteDBClusterEndpoint",
                            "rds:DeleteDBClusterParameterGroup",
                            "rds:DeleteDBClusterSnapshot",
                            "rds:DeleteDBInstance",
                            "rds:DeleteDBParameterGroup",
                            "rds:DeleteDBSubnetGroup",
                            "rds:DeleteEventSubscription",
                            "rds:DeleteGlobalCluster",
                            "rds:DescribeDBClusterEndpoints",
                            "rds:DescribeAccountAttributes",
                            "rds:DescribeCertificates",
                            "rds:DescribeDBClusterParameterGroups",
                            "rds:DescribeDBClusterParameters",
                            "rds:DescribeDBClusterSnapshotAttributes",
                            "rds:DescribeDBClusterSnapshots",
                            "rds:DescribeDBClusters",
                            "rds:DescribeDBEngineVersions",
                            "rds:DescribeDBInstances",
                            "rds:DescribeDBLogFiles",
                            "rds:DescribeDBParameterGroups",
                            "rds:DescribeDBParameters",
                            "rds:DescribeDBSecurityGroups",
                            "rds:DescribeDBSubnetGroups",
                            "rds:DescribeEngineDefaultClusterParameters",
                            "rds:DescribeEngineDefaultParameters",
                            "rds:DescribeEventCategories",
                            "rds:DescribeEventSubscriptions",
                            "rds:DescribeEvents",
                            "rds:DescribeGlobalClusters",
                            "rds:DescribeOptionGroups",
                            "rds:DescribeOrderableDBInstanceOptions",
                            "rds:DescribePendingMaintenanceActions",
                            "rds:DescribeValidDBInstanceModifications",
                            "rds:DownloadDBLogFilePortion",
                            "rds:FailoverDBCluster",
                            "rds:FailoverGlobalCluster",
                            "rds:ListTagsForResource",
                            "rds:ModifyDBCluster",
                            "rds:ModifyDBClusterEndpoint",
                            "rds:ModifyDBClusterParameterGroup",
                            "rds:ModifyDBClusterSnapshotAttribute",
                            "rds:ModifyDBInstance",
                            "rds:ModifyDBParameterGroup",
                            "rds:ModifyDBSubnetGroup",
                            "rds:ModifyEventSubscription",
                            "rds:ModifyGlobalCluster",
                            "rds:PromoteReadReplicaDBCluster",
                            "rds:RebootDBInstance",
                            "rds:RemoveFromGlobalCluster",
                            "rds:RemoveRoleFromDBCluster",
                            "rds:RemoveSourceIdentifierFromSubscription",
                            "rds:RemoveTagsFromResource",
                            "rds:ResetDBClusterParameterGroup",
                            "rds:ResetDBParameterGroup",
                            "rds:RestoreDBClusterFromSnapshot",
                            "rds:RestoreDBClusterToPointInTime",
                            "rds:StartDBCluster",
                            "rds:StopDBCluster"
                        ],
                        "Resource": [
                            "*"
                        ]
                    },
                    {
                        "Sid": "AllowOtherDepedentPermissions",
                        "Effect": "Allow",
                        "Action": [
                            "cloudwatch:GetMetricStatistics",
                            "cloudwatch:ListMetrics",
                            "ec2:DescribeAccountAttributes",
                            "ec2:DescribeAvailabilityZones",
                            "ec2:DescribeSecurityGroups",
                            "ec2:DescribeSubnets",
                            "ec2:DescribeVpcAttribute",
                            "ec2:DescribeVpcs",
                            "kms:ListAliases",
                            "kms:ListKeyPolicies",
                            "kms:ListKeys",
                            "kms:ListRetirableGrants",
                            "logs:DescribeLogStreams",
                            "logs:GetLogEvents",
                            "sns:ListSubscriptions",
                            "sns:ListTopics",
                            "sns:Publish"
                        ],
                        "Resource": [
                            "*"
                        ]
                    },
                    {
                        "Sid": "AllowPassRoleForNeptune",
                        "Effect": "Allow",
                        "Action": "iam:PassRole",
                        "Resource": "*",
                        "Condition": {
                            "StringEquals": {
                                "iam:passedToService": "rds.amazonaws.com"
                            }
                        }
                    },
                    {
                        "Sid": "AllowCreateSLRForNeptune",
                        "Effect": "Allow",
                        "Action": "iam:CreateServiceLinkedRole",
                        "Resource": "arn:aws:iam::*:role/aws-service-role/rds.amazonaws.com/AWSServiceRoleForRDS",
                        "Condition": {
                            "StringLike": {
                                "iam:AWSServiceName": "rds.amazonaws.com"
                            }
                        }
                    },
                    {
                        "Sid": "AllowDataAccessForNeptune",
                        "Effect": "Allow",
                        "Action": [
                            "neptune-db:*"
                        ],
                        "Resource": [
                            "*"
                        ]
                    }
                ]
            },
            "tags": []
        },
        {
            "name": "DAXServiceRolePolicy",
            "arn": "arn:aws:iam::aws:policy/aws-service-role/DAXServiceRolePolicy",
            "entity": "ANPAJQWMGC67G4DWMREGM",
            "version_id": "v1",
            "type": "AWS",
            "attached": true,
            "document": {
                "Version": "2012-10-17",
                "Statement": [
                    {
                        "Effect": "Allow",
                        "Action": [
                            "ec2:AuthorizeSecurityGroupIngress",
                            "ec2:CreateNetworkInterface",
                            "ec2:CreateSecurityGroup",
                            "ec2:DeleteNetworkInterface",
                            "ec2:DeleteSecurityGroup",
                            "ec2:DescribeAvailabilityZones",
                            "ec2:DescribeNetworkInterfaces",
                            "ec2:DescribeSecurityGroups",
                            "ec2:DescribeSubnets",
                            "ec2:DescribeVpcs",
                            "ec2:ModifyNetworkInterfaceAttribute",
                            "ec2:RevokeSecurityGroupIngress"
                        ],
                        "Resource": "*"
                    }
                ]
            },
            "tags": []
        },
        {
            "name": "AmazonSageMakerFullAccess",
            "arn": "arn:aws:iam::aws:policy/AmazonSageMakerFullAccess",
            "entity": "ANPAJZ5IWYMXO5QDB4QOG",
            "version_id": "v26",
            "type": "AWS",
            "attached": true,
            "document": {
                "Version": "2012-10-17",
                "Statement": [
                    {
                        "Sid": "AllowAllNonAdminSageMakerActions",
                        "Effect": "Allow",
                        "Action": [
                            "sagemaker:*",
                            "sagemaker-geospatial:*"
                        ],
                        "NotResource": [
                            "arn:aws:sagemaker:*:*:domain/*",
                            "arn:aws:sagemaker:*:*:user-profile/*",
                            "arn:aws:sagemaker:*:*:app/*",
                            "arn:aws:sagemaker:*:*:space/*",
                            "arn:aws:sagemaker:*:*:flow-definition/*"
                        ]
                    },
                    {
                        "Sid": "AllowAddTagsForSpace",
                        "Effect": "Allow",
                        "Action": [
                            "sagemaker:AddTags"
                        ],
                        "Resource": [
                            "arn:aws:sagemaker:*:*:space/*"
                        ],
                        "Condition": {
                            "StringEquals": {
                                "sagemaker:TaggingAction": "CreateSpace"
                            }
                        }
                    },
                    {
                        "Sid": "AllowAddTagsForApp",
                        "Effect": "Allow",
                        "Action": [
                            "sagemaker:AddTags"
                        ],
                        "Resource": [
                            "arn:aws:sagemaker:*:*:app/*"
                        ]
                    },
                    {
                        "Sid": "AllowStudioActions",
                        "Effect": "Allow",
                        "Action": [
                            "sagemaker:CreatePresignedDomainUrl",
                            "sagemaker:DescribeDomain",
                            "sagemaker:ListDomains",
                            "sagemaker:DescribeUserProfile",
                            "sagemaker:ListUserProfiles",
                            "sagemaker:DescribeSpace",
                            "sagemaker:ListSpaces",
                            "sagemaker:DescribeApp",
                            "sagemaker:ListApps"
                        ],
                        "Resource": "*"
                    },
                    {
                        "Sid": "AllowAppActionsForUserProfile",
                        "Effect": "Allow",
                        "Action": [
                            "sagemaker:CreateApp",
                            "sagemaker:DeleteApp"
                        ],
                        "Resource": "arn:aws:sagemaker:*:*:app/*/*/*/*",
                        "Condition": {
                            "Null": {
                                "sagemaker:OwnerUserProfileArn": "true"
                            }
                        }
                    },
                    {
                        "Sid": "AllowAppActionsForSharedSpaces",
                        "Effect": "Allow",
                        "Action": [
                            "sagemaker:CreateApp",
                            "sagemaker:DeleteApp"
                        ],
                        "Resource": "arn:aws:sagemaker:*:*:app/${sagemaker:DomainId}/*/*/*",
                        "Condition": {
                            "StringEquals": {
                                "sagemaker:SpaceSharingType": [
                                    "Shared"
                                ]
                            }
                        }
                    },
                    {
                        "Sid": "AllowMutatingActionsOnSharedSpacesWithoutOwner",
                        "Effect": "Allow",
                        "Action": [
                            "sagemaker:CreateSpace",
                            "sagemaker:UpdateSpace",
                            "sagemaker:DeleteSpace"
                        ],
                        "Resource": "arn:aws:sagemaker:*:*:space/${sagemaker:DomainId}/*",
                        "Condition": {
                            "Null": {
                                "sagemaker:OwnerUserProfileArn": "true"
                            }
                        }
                    },
                    {
                        "Sid": "RestrictMutatingActionsOnSpacesToOwnerUserProfile",
                        "Effect": "Allow",
                        "Action": [
                            "sagemaker:CreateSpace",
                            "sagemaker:UpdateSpace",
                            "sagemaker:DeleteSpace"
                        ],
                        "Resource": "arn:aws:sagemaker:*:*:space/${sagemaker:DomainId}/*",
                        "Condition": {
                            "ArnLike": {
                                "sagemaker:OwnerUserProfileArn": "arn:aws:sagemaker:*:*:user-profile/${sagemaker:DomainId}/${sagemaker:UserProfileName}"
                            },
                            "StringEquals": {
                                "sagemaker:SpaceSharingType": [
                                    "Private",
                                    "Shared"
                                ]
                            }
                        }
                    },
                    {
                        "Sid": "RestrictMutatingActionsOnPrivateSpaceAppsToOwnerUserProfile",
                        "Effect": "Allow",
                        "Action": [
                            "sagemaker:CreateApp",
                            "sagemaker:DeleteApp"
                        ],
                        "Resource": "arn:aws:sagemaker:*:*:app/${sagemaker:DomainId}/*/*/*",
                        "Condition": {
                            "ArnLike": {
                                "sagemaker:OwnerUserProfileArn": "arn:aws:sagemaker:*:*:user-profile/${sagemaker:DomainId}/${sagemaker:UserProfileName}"
                            },
                            "StringEquals": {
                                "sagemaker:SpaceSharingType": [
                                    "Private"
                                ]
                            }
                        }
                    },
                    {
                        "Sid": "AllowFlowDefinitionActions",
                        "Effect": "Allow",
                        "Action": "sagemaker:*",
                        "Resource": [
                            "arn:aws:sagemaker:*:*:flow-definition/*"
                        ],
                        "Condition": {
                            "StringEqualsIfExists": {
                                "sagemaker:WorkteamType": [
                                    "private-crowd",
                                    "vendor-crowd"
                                ]
                            }
                        }
                    },
                    {
                        "Sid": "AllowAWSServiceActions",
                        "Effect": "Allow",
                        "Action": [
                            "application-autoscaling:DeleteScalingPolicy",
                            "application-autoscaling:DeleteScheduledAction",
                            "application-autoscaling:DeregisterScalableTarget",
                            "application-autoscaling:DescribeScalableTargets",
                            "application-autoscaling:DescribeScalingActivities",
                            "application-autoscaling:DescribeScalingPolicies",
                            "application-autoscaling:DescribeScheduledActions",
                            "application-autoscaling:PutScalingPolicy",
                            "application-autoscaling:PutScheduledAction",
                            "application-autoscaling:RegisterScalableTarget",
                            "aws-marketplace:ViewSubscriptions",
                            "cloudformation:GetTemplateSummary",
                            "cloudwatch:DeleteAlarms",
                            "cloudwatch:DescribeAlarms",
                            "cloudwatch:GetMetricData",
                            "cloudwatch:GetMetricStatistics",
                            "cloudwatch:ListMetrics",
                            "cloudwatch:PutMetricAlarm",
                            "cloudwatch:PutMetricData",
                            "codecommit:BatchGetRepositories",
                            "codecommit:CreateRepository",
                            "codecommit:GetRepository",
                            "codecommit:List*",
                            "cognito-idp:AdminAddUserToGroup",
                            "cognito-idp:AdminCreateUser",
                            "cognito-idp:AdminDeleteUser",
                            "cognito-idp:AdminDisableUser",
                            "cognito-idp:AdminEnableUser",
                            "cognito-idp:AdminRemoveUserFromGroup",
                            "cognito-idp:CreateGroup",
                            "cognito-idp:CreateUserPool",
                            "cognito-idp:CreateUserPoolClient",
                            "cognito-idp:CreateUserPoolDomain",
                            "cognito-idp:DescribeUserPool",
                            "cognito-idp:DescribeUserPoolClient",
                            "cognito-idp:List*",
                            "cognito-idp:UpdateUserPool",
                            "cognito-idp:UpdateUserPoolClient",
                            "ec2:CreateNetworkInterface",
                            "ec2:CreateNetworkInterfacePermission",
                            "ec2:CreateVpcEndpoint",
                            "ec2:DeleteNetworkInterface",
                            "ec2:DeleteNetworkInterfacePermission",
                            "ec2:DescribeDhcpOptions",
                            "ec2:DescribeNetworkInterfaces",
                            "ec2:DescribeRouteTables",
                            "ec2:DescribeSecurityGroups",
                            "ec2:DescribeSubnets",
                            "ec2:DescribeVpcEndpoints",
                            "ec2:DescribeVpcs",
                            "ecr:BatchCheckLayerAvailability",
                            "ecr:BatchGetImage",
                            "ecr:CreateRepository",
                            "ecr:Describe*",
                            "ecr:GetAuthorizationToken",
                            "ecr:GetDownloadUrlForLayer",
                            "ecr:StartImageScan",
                            "elastic-inference:Connect",
                            "elasticfilesystem:DescribeFileSystems",
                            "elasticfilesystem:DescribeMountTargets",
                            "fsx:DescribeFileSystems",
                            "glue:CreateJob",
                            "glue:DeleteJob",
                            "glue:GetJob*",
                            "glue:GetTable*",
                            "glue:GetWorkflowRun",
                            "glue:ResetJobBookmark",
                            "glue:StartJobRun",
                            "glue:StartWorkflowRun",
                            "glue:UpdateJob",
                            "groundtruthlabeling:*",
                            "iam:ListRoles",
                            "kms:DescribeKey",
                            "kms:ListAliases",
                            "lambda:ListFunctions",
                            "logs:CreateLogDelivery",
                            "logs:CreateLogGroup",
                            "logs:CreateLogStream",
                            "logs:DeleteLogDelivery",
                            "logs:Describe*",
                            "logs:GetLogDelivery",
                            "logs:GetLogEvents",
                            "logs:ListLogDeliveries",
                            "logs:PutLogEvents",
                            "logs:PutResourcePolicy",
                            "logs:UpdateLogDelivery",
                            "robomaker:CreateSimulationApplication",
                            "robomaker:DescribeSimulationApplication",
                            "robomaker:DeleteSimulationApplication",
                            "robomaker:CreateSimulationJob",
                            "robomaker:DescribeSimulationJob",
                            "robomaker:CancelSimulationJob",
                            "secretsmanager:ListSecrets",
                            "servicecatalog:Describe*",
                            "servicecatalog:List*",
                            "servicecatalog:ScanProvisionedProducts",
                            "servicecatalog:SearchProducts",
                            "servicecatalog:SearchProvisionedProducts",
                            "sns:ListTopics",
                            "tag:GetResources"
                        ],
                        "Resource": "*"
                    },
                    {
                        "Sid": "AllowECRActions",
                        "Effect": "Allow",
                        "Action": [
                            "ecr:SetRepositoryPolicy",
                            "ecr:CompleteLayerUpload",
                            "ecr:BatchDeleteImage",
                            "ecr:UploadLayerPart",
                            "ecr:DeleteRepositoryPolicy",
                            "ecr:InitiateLayerUpload",
                            "ecr:DeleteRepository",
                            "ecr:PutImage"
                        ],
                        "Resource": [
                            "arn:aws:ecr:*:*:repository/*sagemaker*"
                        ]
                    },
                    {
                        "Sid": "AllowCodeCommitActions",
                        "Effect": "Allow",
                        "Action": [
                            "codecommit:GitPull",
                            "codecommit:GitPush"
                        ],
                        "Resource": [
                            "arn:aws:codecommit:*:*:*sagemaker*",
                            "arn:aws:codecommit:*:*:*SageMaker*",
                            "arn:aws:codecommit:*:*:*Sagemaker*"
                        ]
                    },
                    {
                        "Sid": "AllowCodeBuildActions",
                        "Action": [
                            "codebuild:BatchGetBuilds",
                            "codebuild:StartBuild"
                        ],
                        "Resource": [
                            "arn:aws:codebuild:*:*:project/sagemaker*",
                            "arn:aws:codebuild:*:*:build/*"
                        ],
                        "Effect": "Allow"
                    },
                    {
                        "Sid": "AllowStepFunctionsActions",
                        "Action": [
                            "states:DescribeExecution",
                            "states:GetExecutionHistory",
                            "states:StartExecution",
                            "states:StopExecution",
                            "states:UpdateStateMachine"
                        ],
                        "Resource": [
                            "arn:aws:states:*:*:statemachine:*sagemaker*",
                            "arn:aws:states:*:*:execution:*sagemaker*:*"
                        ],
                        "Effect": "Allow"
                    },
                    {
                        "Sid": "AllowSecretManagerActions",
                        "Effect": "Allow",
                        "Action": [
                            "secretsmanager:DescribeSecret",
                            "secretsmanager:GetSecretValue",
                            "secretsmanager:CreateSecret"
                        ],
                        "Resource": [
                            "arn:aws:secretsmanager:*:*:secret:AmazonSageMaker-*"
                        ]
                    },
                    {
                        "Sid": "AllowReadOnlySecretManagerActions",
                        "Effect": "Allow",
                        "Action": [
                            "secretsmanager:DescribeSecret",
                            "secretsmanager:GetSecretValue"
                        ],
                        "Resource": "*",
                        "Condition": {
                            "StringEquals": {
                                "secretsmanager:ResourceTag/SageMaker": "true"
                            }
                        }
                    },
                    {
                        "Sid": "AllowServiceCatalogProvisionProduct",
                        "Effect": "Allow",
                        "Action": [
                            "servicecatalog:ProvisionProduct"
                        ],
                        "Resource": "*"
                    },
                    {
                        "Sid": "AllowServiceCatalogTerminateUpdateProvisionProduct",
                        "Effect": "Allow",
                        "Action": [
                            "servicecatalog:TerminateProvisionedProduct",
                            "servicecatalog:UpdateProvisionedProduct"
                        ],
                        "Resource": "*",
                        "Condition": {
                            "StringEquals": {
                                "servicecatalog:userLevel": "self"
                            }
                        }
                    },
                    {
                        "Sid": "AllowS3ObjectActions",
                        "Effect": "Allow",
                        "Action": [
                            "s3:GetObject",
                            "s3:PutObject",
                            "s3:DeleteObject",
                            "s3:AbortMultipartUpload"
                        ],
                        "Resource": [
                            "arn:aws:s3:::*SageMaker*",
                            "arn:aws:s3:::*Sagemaker*",
                            "arn:aws:s3:::*sagemaker*",
                            "arn:aws:s3:::*aws-glue*"
                        ]
                    },
                    {
                        "Sid": "AllowS3GetObjectWithSageMakerExistingObjectTag",
                        "Effect": "Allow",
                        "Action": [
                            "s3:GetObject"
                        ],
                        "Resource": [
                            "arn:aws:s3:::*"
                        ],
                        "Condition": {
                            "StringEqualsIgnoreCase": {
                                "s3:ExistingObjectTag/SageMaker": "true"
                            }
                        }
                    },
                    {
                        "Sid": "AllowS3GetObjectWithServiceCatalogProvisioningExistingObjectTag",
                        "Effect": "Allow",
                        "Action": [
                            "s3:GetObject"
                        ],
                        "Resource": [
                            "arn:aws:s3:::*"
                        ],
                        "Condition": {
                            "StringEquals": {
                                "s3:ExistingObjectTag/servicecatalog:provisioning": "true"
                            }
                        }
                    },
                    {
                        "Sid": "AllowS3BucketActions",
                        "Effect": "Allow",
                        "Action": [
                            "s3:CreateBucket",
                            "s3:GetBucketLocation",
                            "s3:ListBucket",
                            "s3:ListAllMyBuckets",
                            "s3:GetBucketCors",
                            "s3:PutBucketCors"
                        ],
                        "Resource": "*"
                    },
                    {
                        "Sid": "AllowS3BucketACL",
                        "Effect": "Allow",
                        "Action": [
                            "s3:GetBucketAcl",
                            "s3:PutObjectAcl"
                        ],
                        "Resource": [
                            "arn:aws:s3:::*SageMaker*",
                            "arn:aws:s3:::*Sagemaker*",
                            "arn:aws:s3:::*sagemaker*"
                        ]
                    },
                    {
                        "Sid": "AllowLambdaInvokeFunction",
                        "Effect": "Allow",
                        "Action": [
                            "lambda:InvokeFunction"
                        ],
                        "Resource": [
                            "arn:aws:lambda:*:*:function:*SageMaker*",
                            "arn:aws:lambda:*:*:function:*sagemaker*",
                            "arn:aws:lambda:*:*:function:*Sagemaker*",
                            "arn:aws:lambda:*:*:function:*LabelingFunction*"
                        ]
                    },
                    {
                        "Sid": "AllowCreateServiceLinkedRoleForSageMakerApplicationAutoscaling",
                        "Action": "iam:CreateServiceLinkedRole",
                        "Effect": "Allow",
                        "Resource": "arn:aws:iam::*:role/aws-service-role/sagemaker.application-autoscaling.amazonaws.com/AWSServiceRoleForApplicationAutoScaling_SageMakerEndpoint",
                        "Condition": {
                            "StringLike": {
                                "iam:AWSServiceName": "sagemaker.application-autoscaling.amazonaws.com"
                            }
                        }
                    },
                    {
                        "Sid": "AllowCreateServiceLinkedRoleForRobomaker",
                        "Effect": "Allow",
                        "Action": "iam:CreateServiceLinkedRole",
                        "Resource": "*",
                        "Condition": {
                            "StringEquals": {
                                "iam:AWSServiceName": "robomaker.amazonaws.com"
                            }
                        }
                    },
                    {
                        "Sid": "AllowSNSActions",
                        "Effect": "Allow",
                        "Action": [
                            "sns:Subscribe",
                            "sns:CreateTopic",
                            "sns:Publish"
                        ],
                        "Resource": [
                            "arn:aws:sns:*:*:*SageMaker*",
                            "arn:aws:sns:*:*:*Sagemaker*",
                            "arn:aws:sns:*:*:*sagemaker*"
                        ]
                    },
                    {
                        "Sid": "AllowPassRoleForSageMakerRoles",
                        "Effect": "Allow",
                        "Action": [
                            "iam:PassRole"
                        ],
                        "Resource": "arn:aws:iam::*:role/*AmazonSageMaker*",
                        "Condition": {
                            "StringEquals": {
                                "iam:PassedToService": [
                                    "glue.amazonaws.com",
                                    "robomaker.amazonaws.com",
                                    "states.amazonaws.com"
                                ]
                            }
                        }
                    },
                    {
                        "Sid": "AllowPassRoleToSageMaker",
                        "Effect": "Allow",
                        "Action": [
                            "iam:PassRole"
                        ],
                        "Resource": "arn:aws:iam::*:role/*",
                        "Condition": {
                            "StringEquals": {
                                "iam:PassedToService": "sagemaker.amazonaws.com"
                            }
                        }
                    },
                    {
                        "Sid": "AllowAthenaActions",
                        "Effect": "Allow",
                        "Action": [
                            "athena:ListDataCatalogs",
                            "athena:ListDatabases",
                            "athena:ListTableMetadata",
                            "athena:GetQueryExecution",
                            "athena:GetQueryResults",
                            "athena:StartQueryExecution",
                            "athena:StopQueryExecution"
                        ],
                        "Resource": [
                            "*"
                        ]
                    },
                    {
                        "Sid": "AllowGlueCreateTable",
                        "Effect": "Allow",
                        "Action": [
                            "glue:CreateTable"
                        ],
                        "Resource": [
                            "arn:aws:glue:*:*:table/*/sagemaker_tmp_*",
                            "arn:aws:glue:*:*:table/sagemaker_featurestore/*",
                            "arn:aws:glue:*:*:catalog",
                            "arn:aws:glue:*:*:database/*"
                        ]
                    },
                    {
                        "Sid": "AllowGlueUpdateTable",
                        "Effect": "Allow",
                        "Action": [
                            "glue:UpdateTable"
                        ],
                        "Resource": [
                            "arn:aws:glue:*:*:table/sagemaker_featurestore/*",
                            "arn:aws:glue:*:*:catalog",
                            "arn:aws:glue:*:*:database/sagemaker_featurestore"
                        ]
                    },
                    {
                        "Sid": "AllowGlueDeleteTable",
                        "Effect": "Allow",
                        "Action": [
                            "glue:DeleteTable"
                        ],
                        "Resource": [
                            "arn:aws:glue:*:*:table/*/sagemaker_tmp_*",
                            "arn:aws:glue:*:*:catalog",
                            "arn:aws:glue:*:*:database/*"
                        ]
                    },
                    {
                        "Sid": "AllowGlueGetTablesAndDatabases",
                        "Effect": "Allow",
                        "Action": [
                            "glue:GetDatabases",
                            "glue:GetTable",
                            "glue:GetTables"
                        ],
                        "Resource": [
                            "arn:aws:glue:*:*:table/*",
                            "arn:aws:glue:*:*:catalog",
                            "arn:aws:glue:*:*:database/*"
                        ]
                    },
                    {
                        "Sid": "AllowGlueGetAndCreateDatabase",
                        "Effect": "Allow",
                        "Action": [
                            "glue:CreateDatabase",
                            "glue:GetDatabase"
                        ],
                        "Resource": [
                            "arn:aws:glue:*:*:catalog",
                            "arn:aws:glue:*:*:database/sagemaker_featurestore",
                            "arn:aws:glue:*:*:database/sagemaker_processing",
                            "arn:aws:glue:*:*:database/default",
                            "arn:aws:glue:*:*:database/sagemaker_data_wrangler"
                        ]
                    },
                    {
                        "Sid": "AllowRedshiftDataActions",
                        "Effect": "Allow",
                        "Action": [
                            "redshift-data:ExecuteStatement",
                            "redshift-data:DescribeStatement",
                            "redshift-data:CancelStatement",
                            "redshift-data:GetStatementResult",
                            "redshift-data:ListSchemas",
                            "redshift-data:ListTables"
                        ],
                        "Resource": [
                            "*"
                        ]
                    },
                    {
                        "Sid": "AllowRedshiftGetClusterCredentials",
                        "Effect": "Allow",
                        "Action": [
                            "redshift:GetClusterCredentials"
                        ],
                        "Resource": [
                            "arn:aws:redshift:*:*:dbuser:*/sagemaker_access*",
                            "arn:aws:redshift:*:*:dbname:*"
                        ]
                    },
                    {
                        "Sid": "AllowListTagsForUserProfile",
                        "Effect": "Allow",
                        "Action": [
                            "sagemaker:ListTags"
                        ],
                        "Resource": [
                            "arn:aws:sagemaker:*:*:user-profile/*"
                        ]
                    },
                    {
                        "Sid": "AllowCloudformationListStackResources",
                        "Effect": "Allow",
                        "Action": [
                            "cloudformation:ListStackResources"
                        ],
                        "Resource": "arn:aws:cloudformation:*:*:stack/SC-*"
                    },
                    {
                        "Sid": "AllowS3ExpressObjectActions",
                        "Effect": "Allow",
                        "Action": [
                            "s3express:CreateSession"
                        ],
                        "Resource": [
                            "arn:aws:s3express:*:*:bucket/*SageMaker*",
                            "arn:aws:s3express:*:*:bucket/*Sagemaker*",
                            "arn:aws:s3express:*:*:bucket/*sagemaker*",
                            "arn:aws:s3express:*:*:bucket/*aws-glue*"
                        ],
                        "Condition": {
                            "StringEquals": {
                                "aws:ResourceAccount": "${aws:PrincipalAccount}"
                            }
                        }
                    },
                    {
                        "Sid": "AllowS3ExpressCreateBucketActions",
                        "Effect": "Allow",
                        "Action": [
                            "s3express:CreateBucket"
                        ],
                        "Resource": [
                            "arn:aws:s3express:*:*:bucket/*SageMaker*",
                            "arn:aws:s3express:*:*:bucket/*Sagemaker*",
                            "arn:aws:s3express:*:*:bucket/*sagemaker*"
                        ],
                        "Condition": {
                            "StringEquals": {
                                "aws:ResourceAccount": "${aws:PrincipalAccount}"
                            }
                        }
                    },
                    {
                        "Sid": "AllowS3ExpressListBucketActions",
                        "Effect": "Allow",
                        "Action": [
                            "s3express:ListAllMyDirectoryBuckets"
                        ],
                        "Resource": "*"
                    }
                ]
            },
            "tags": []
        },
        {
            "name": "AmazonS3FullAccess",
            "arn": "arn:aws:iam::aws:policy/AmazonS3FullAccess",
            "entity": "ANPAIFIR6V6BVTRAHWINE",
            "version_id": "v2",
            "type": "AWS",
            "attached": true,
            "document": {
                "Version": "2012-10-17",
                "Statement": [
                    {
                        "Effect": "Allow",
                        "Action": [
                            "s3:*",
                            "s3-object-lambda:*"
                        ],
                        "Resource": "*"
                    }
                ]
            },
            "tags": []
        },
        {
            "name": "AWSBillingConductorFullAccess",
            "arn": "arn:aws:iam::aws:policy/AWSBillingConductorFullAccess",
            "entity": "ANPAZKAPJZG4D2AMFVFND",
            "version_id": "v1",
            "type": "AWS",
            "attached": true,
            "document": {
                "Version": "2012-10-17",
                "Statement": [
                    {
                        "Effect": "Allow",
                        "Action": [
                            "billingconductor:*",
                            "organizations:ListAccounts",
                            "pricing:DescribeServices"
                        ],
                        "Resource": "*"
                    }
                ]
            },
            "tags": []
        },
        {
            "name": "AmazonSageMakerCanvasEMRServerlessExecutionRolePolicy",
            "arn": "arn:aws:iam::aws:policy/AmazonSageMakerCanvasEMRServerlessExecutionRolePolicy",
            "entity": "ANPAZKAPJZG4ATKMS5NQP",
            "version_id": "v1",
            "type": "AWS",
            "attached": true,
            "document": {
                "Version": "2012-10-17",
                "Statement": [
                    {
                        "Sid": "S3Operations",
                        "Effect": "Allow",
                        "Action": [
                            "s3:GetObject",
                            "s3:PutObject",
                            "s3:DeleteObject",
                            "s3:GetBucketCors",
                            "s3:GetBucketLocation",
                            "s3:AbortMultipartUpload"
                        ],
                        "Resource": [
                            "arn:aws:s3:::*SageMaker*",
                            "arn:aws:s3:::*sagemaker*"
                        ],
                        "Condition": {
                            "StringEquals": {
                                "aws:ResourceAccount": "${aws:PrincipalAccount}"
                            }
                        }
                    },
                    {
                        "Sid": "S3GetObjectOperation",
                        "Effect": "Allow",
                        "Action": "s3:GetObject",
                        "Resource": "arn:aws:s3:::*",
                        "Condition": {
                            "StringEqualsIgnoreCase": {
                                "s3:ExistingObjectTag/SageMaker": "true"
                            },
                            "StringEquals": {
                                "aws:ResourceAccount": "${aws:PrincipalAccount}"
                            }
                        }
                    },
                    {
                        "Sid": "S3ListOperations",
                        "Effect": "Allow",
                        "Action": [
                            "s3:ListBucket",
                            "s3:ListAllMyBuckets"
                        ],
                        "Resource": "*",
                        "Condition": {
                            "StringEquals": {
                                "aws:ResourceAccount": "${aws:PrincipalAccount}"
                            }
                        }
                    }
                ]
            },
            "tags": []
        },
        {
            "name": "ServiceQuotasServiceRolePolicy",
            "arn": "arn:aws:iam::aws:policy/aws-service-role/ServiceQuotasServiceRolePolicy",
            "entity": "ANPAZKAPJZG4FCG7EVJIR",
            "version_id": "v2",
            "type": "AWS",
            "attached": true,
            "document": {
                "Version": "2012-10-17",
                "Statement": [
                    {
                        "Action": [
                            "support:*"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    }
                ]
            },
            "tags": []
        },
        {
            "name": "AmazonSageMakerServiceCatalogProductsCloudformationServiceRolePolicy",
            "arn": "arn:aws:iam::aws:policy/service-role/AmazonSageMakerServiceCatalogProductsCloudformationServiceRolePolicy",
            "entity": "ANPAZKAPJZG4BLGQUR4HI",
            "version_id": "v1",
            "type": "AWS",
            "attached": true,
            "document": {
                "Version": "2012-10-17",
                "Statement": [
                    {
                        "Effect": "Allow",
                        "Action": [
                            "sagemaker:AddAssociation",
                            "sagemaker:AddTags",
                            "sagemaker:AssociateTrialComponent",
                            "sagemaker:BatchDescribeModelPackage",
                            "sagemaker:BatchGetMetrics",
                            "sagemaker:BatchGetRecord",
                            "sagemaker:BatchPutMetrics",
                            "sagemaker:CreateAction",
                            "sagemaker:CreateAlgorithm",
                            "sagemaker:CreateApp",
                            "sagemaker:CreateAppImageConfig",
                            "sagemaker:CreateArtifact",
                            "sagemaker:CreateAutoMLJob",
                            "sagemaker:CreateCodeRepository",
                            "sagemaker:CreateCompilationJob",
                            "sagemaker:CreateContext",
                            "sagemaker:CreateDataQualityJobDefinition",
                            "sagemaker:CreateDeviceFleet",
                            "sagemaker:CreateDomain",
                            "sagemaker:CreateEdgePackagingJob",
                            "sagemaker:CreateEndpoint",
                            "sagemaker:CreateEndpointConfig",
                            "sagemaker:CreateExperiment",
                            "sagemaker:CreateFeatureGroup",
                            "sagemaker:CreateFlowDefinition",
                            "sagemaker:CreateHumanTaskUi",
                            "sagemaker:CreateHyperParameterTuningJob",
                            "sagemaker:CreateImage",
                            "sagemaker:CreateImageVersion",
                            "sagemaker:CreateInferenceRecommendationsJob",
                            "sagemaker:CreateLabelingJob",
                            "sagemaker:CreateLineageGroupPolicy",
                            "sagemaker:CreateModel",
                            "sagemaker:CreateModelBiasJobDefinition",
                            "sagemaker:CreateModelExplainabilityJobDefinition",
                            "sagemaker:CreateModelPackage",
                            "sagemaker:CreateModelPackageGroup",
                            "sagemaker:CreateModelQualityJobDefinition",
                            "sagemaker:CreateMonitoringSchedule",
                            "sagemaker:CreateNotebookInstance",
                            "sagemaker:CreateNotebookInstanceLifecycleConfig",
                            "sagemaker:CreatePipeline",
                            "sagemaker:CreatePresignedDomainUrl",
                            "sagemaker:CreatePresignedNotebookInstanceUrl",
                            "sagemaker:CreateProcessingJob",
                            "sagemaker:CreateProject",
                            "sagemaker:CreateTrainingJob",
                            "sagemaker:CreateTransformJob",
                            "sagemaker:CreateTrial",
                            "sagemaker:CreateTrialComponent",
                            "sagemaker:CreateUserProfile",
                            "sagemaker:CreateWorkforce",
                            "sagemaker:CreateWorkteam",
                            "sagemaker:DeleteAction",
                            "sagemaker:DeleteAlgorithm",
                            "sagemaker:DeleteApp",
                            "sagemaker:DeleteAppImageConfig",
                            "sagemaker:DeleteArtifact",
                            "sagemaker:DeleteAssociation",
                            "sagemaker:DeleteCodeRepository",
                            "sagemaker:DeleteContext",
                            "sagemaker:DeleteDataQualityJobDefinition",
                            "sagemaker:DeleteDeviceFleet",
                            "sagemaker:DeleteDomain",
                            "sagemaker:DeleteEndpoint",
                            "sagemaker:DeleteEndpointConfig",
                            "sagemaker:DeleteExperiment",
                            "sagemaker:DeleteFeatureGroup",
                            "sagemaker:DeleteFlowDefinition",
                            "sagemaker:DeleteHumanLoop",
                            "sagemaker:DeleteHumanTaskUi",
                            "sagemaker:DeleteImage",
                            "sagemaker:DeleteImageVersion",
                            "sagemaker:DeleteLineageGroupPolicy",
                            "sagemaker:DeleteModel",
                            "sagemaker:DeleteModelBiasJobDefinition",
                            "sagemaker:DeleteModelExplainabilityJobDefinition",
                            "sagemaker:DeleteModelPackage",
                            "sagemaker:DeleteModelPackageGroup",
                            "sagemaker:DeleteModelPackageGroupPolicy",
                            "sagemaker:DeleteModelQualityJobDefinition",
                            "sagemaker:DeleteMonitoringSchedule",
                            "sagemaker:DeleteNotebookInstance",
                            "sagemaker:DeleteNotebookInstanceLifecycleConfig",
                            "sagemaker:DeletePipeline",
                            "sagemaker:DeleteProject",
                            "sagemaker:DeleteRecord",
                            "sagemaker:DeleteTags",
                            "sagemaker:DeleteTrial",
                            "sagemaker:DeleteTrialComponent",
                            "sagemaker:DeleteUserProfile",
                            "sagemaker:DeleteWorkforce",
                            "sagemaker:DeleteWorkteam",
                            "sagemaker:DeregisterDevices",
                            "sagemaker:DescribeAction",
                            "sagemaker:DescribeAlgorithm",
                            "sagemaker:DescribeApp",
                            "sagemaker:DescribeAppImageConfig",
                            "sagemaker:DescribeArtifact",
                            "sagemaker:DescribeAutoMLJob",
                            "sagemaker:DescribeCodeRepository",
                            "sagemaker:DescribeCompilationJob",
                            "sagemaker:DescribeContext",
                            "sagemaker:DescribeDataQualityJobDefinition",
                            "sagemaker:DescribeDevice",
                            "sagemaker:DescribeDeviceFleet",
                            "sagemaker:DescribeDomain",
                            "sagemaker:DescribeEdgePackagingJob",
                            "sagemaker:DescribeEndpoint",
                            "sagemaker:DescribeEndpointConfig",
                            "sagemaker:DescribeExperiment",
                            "sagemaker:DescribeFeatureGroup",
                            "sagemaker:DescribeFlowDefinition",
                            "sagemaker:DescribeHumanLoop",
                            "sagemaker:DescribeHumanTaskUi",
                            "sagemaker:DescribeHyperParameterTuningJob",
                            "sagemaker:DescribeImage",
                            "sagemaker:DescribeImageVersion",
                            "sagemaker:DescribeInferenceRecommendationsJob",
                            "sagemaker:DescribeLabelingJob",
                            "sagemaker:DescribeLineageGroup",
                            "sagemaker:DescribeModel",
                            "sagemaker:DescribeModelBiasJobDefinition",
                            "sagemaker:DescribeModelExplainabilityJobDefinition",
                            "sagemaker:DescribeModelPackage",
                            "sagemaker:DescribeModelPackageGroup",
                            "sagemaker:DescribeModelQualityJobDefinition",
                            "sagemaker:DescribeMonitoringSchedule",
                            "sagemaker:DescribeNotebookInstance",
                            "sagemaker:DescribeNotebookInstanceLifecycleConfig",
                            "sagemaker:DescribePipeline",
                            "sagemaker:DescribePipelineDefinitionForExecution",
                            "sagemaker:DescribePipelineExecution",
                            "sagemaker:DescribeProcessingJob",
                            "sagemaker:DescribeProject",
                            "sagemaker:DescribeSubscribedWorkteam",
                            "sagemaker:DescribeTrainingJob",
                            "sagemaker:DescribeTransformJob",
                            "sagemaker:DescribeTrial",
                            "sagemaker:DescribeTrialComponent",
                            "sagemaker:DescribeUserProfile",
                            "sagemaker:DescribeWorkforce",
                            "sagemaker:DescribeWorkteam",
                            "sagemaker:DisableSagemakerServicecatalogPortfolio",
                            "sagemaker:DisassociateTrialComponent",
                            "sagemaker:EnableSagemakerServicecatalogPortfolio",
                            "sagemaker:GetDeviceFleetReport",
                            "sagemaker:GetDeviceRegistration",
                            "sagemaker:GetLineageGroupPolicy",
                            "sagemaker:GetModelPackageGroupPolicy",
                            "sagemaker:GetRecord",
                            "sagemaker:GetSagemakerServicecatalogPortfolioStatus",
                            "sagemaker:GetSearchSuggestions",
                            "sagemaker:InvokeEndpoint",
                            "sagemaker:InvokeEndpointAsync",
                            "sagemaker:ListActions",
                            "sagemaker:ListAlgorithms",
                            "sagemaker:ListAppImageConfigs",
                            "sagemaker:ListApps",
                            "sagemaker:ListArtifacts",
                            "sagemaker:ListAssociations",
                            "sagemaker:ListAutoMLJobs",
                            "sagemaker:ListCandidatesForAutoMLJob",
                            "sagemaker:ListCodeRepositories",
                            "sagemaker:ListCompilationJobs",
                            "sagemaker:ListContexts",
                            "sagemaker:ListDataQualityJobDefinitions",
                            "sagemaker:ListDeviceFleets",
                            "sagemaker:ListDevices",
                            "sagemaker:ListDomains",
                            "sagemaker:ListEdgePackagingJobs",
                            "sagemaker:ListEndpointConfigs",
                            "sagemaker:ListEndpoints",
                            "sagemaker:ListExperiments",
                            "sagemaker:ListFeatureGroups",
                            "sagemaker:ListFlowDefinitions",
                            "sagemaker:ListHumanLoops",
                            "sagemaker:ListHumanTaskUis",
                            "sagemaker:ListHyperParameterTuningJobs",
                            "sagemaker:ListImageVersions",
                            "sagemaker:ListImages",
                            "sagemaker:ListInferenceRecommendationsJobs",
                            "sagemaker:ListLabelingJobs",
                            "sagemaker:ListLabelingJobsForWorkteam",
                            "sagemaker:ListLineageGroups",
                            "sagemaker:ListModelBiasJobDefinitions",
                            "sagemaker:ListModelExplainabilityJobDefinitions",
                            "sagemaker:ListModelMetadata",
                            "sagemaker:ListModelPackageGroups",
                            "sagemaker:ListModelPackages",
                            "sagemaker:ListModelQualityJobDefinitions",
                            "sagemaker:ListModels",
                            "sagemaker:ListMonitoringExecutions",
                            "sagemaker:ListMonitoringSchedules",
                            "sagemaker:ListNotebookInstanceLifecycleConfigs",
                            "sagemaker:ListNotebookInstances",
                            "sagemaker:ListPipelineExecutionSteps",
                            "sagemaker:ListPipelineExecutions",
                            "sagemaker:ListPipelineParametersForExecution",
                            "sagemaker:ListPipelines",
                            "sagemaker:ListProcessingJobs",
                            "sagemaker:ListProjects",
                            "sagemaker:ListSubscribedWorkteams",
                            "sagemaker:ListTags",
                            "sagemaker:ListTrainingJobs",
                            "sagemaker:ListTrainingJobsForHyperParameterTuningJob",
                            "sagemaker:ListTransformJobs",
                            "sagemaker:ListTrialComponents",
                            "sagemaker:ListTrials",
                            "sagemaker:ListUserProfiles",
                            "sagemaker:ListWorkforces",
                            "sagemaker:ListWorkteams",
                            "sagemaker:PutLineageGroupPolicy",
                            "sagemaker:PutModelPackageGroupPolicy",
                            "sagemaker:PutRecord",
                            "sagemaker:QueryLineage",
                            "sagemaker:RegisterDevices",
                            "sagemaker:RenderUiTemplate",
                            "sagemaker:Search",
                            "sagemaker:SendHeartbeat",
                            "sagemaker:SendPipelineExecutionStepFailure",
                            "sagemaker:SendPipelineExecutionStepSuccess",
                            "sagemaker:StartHumanLoop",
                            "sagemaker:StartMonitoringSchedule",
                            "sagemaker:StartNotebookInstance",
                            "sagemaker:StartPipelineExecution",
                            "sagemaker:StopAutoMLJob",
                            "sagemaker:StopCompilationJob",
                            "sagemaker:StopEdgePackagingJob",
                            "sagemaker:StopHumanLoop",
                            "sagemaker:StopHyperParameterTuningJob",
                            "sagemaker:StopInferenceRecommendationsJob",
                            "sagemaker:StopLabelingJob",
                            "sagemaker:StopMonitoringSchedule",
                            "sagemaker:StopNotebookInstance",
                            "sagemaker:StopPipelineExecution",
                            "sagemaker:StopProcessingJob",
                            "sagemaker:StopTrainingJob",
                            "sagemaker:StopTransformJob",
                            "sagemaker:UpdateAction",
                            "sagemaker:UpdateAppImageConfig",
                            "sagemaker:UpdateArtifact",
                            "sagemaker:UpdateCodeRepository",
                            "sagemaker:UpdateContext",
                            "sagemaker:UpdateDeviceFleet",
                            "sagemaker:UpdateDevices",
                            "sagemaker:UpdateDomain",
                            "sagemaker:UpdateEndpoint",
                            "sagemaker:UpdateEndpointWeightsAndCapacities",
                            "sagemaker:UpdateExperiment",
                            "sagemaker:UpdateImage",
                            "sagemaker:UpdateModelPackage",
                            "sagemaker:UpdateMonitoringSchedule",
                            "sagemaker:UpdateNotebookInstance",
                            "sagemaker:UpdateNotebookInstanceLifecycleConfig",
                            "sagemaker:UpdatePipeline",
                            "sagemaker:UpdatePipelineExecution",
                            "sagemaker:UpdateProject",
                            "sagemaker:UpdateTrainingJob",
                            "sagemaker:UpdateTrial",
                            "sagemaker:UpdateTrialComponent",
                            "sagemaker:UpdateUserProfile",
                            "sagemaker:UpdateWorkforce",
                            "sagemaker:UpdateWorkteam"
                        ],
                        "NotResource": [
                            "arn:aws:sagemaker:*:*:domain/*",
                            "arn:aws:sagemaker:*:*:user-profile/*",
                            "arn:aws:sagemaker:*:*:app/*",
                            "arn:aws:sagemaker:*:*:flow-definition/*"
                        ]
                    },
                    {
                        "Effect": "Allow",
                        "Action": [
                            "iam:PassRole"
                        ],
                        "Resource": [
                            "arn:aws:iam::*:role/service-role/AmazonSageMakerServiceCatalogProductsCodeBuildRole",
                            "arn:aws:iam::*:role/service-role/AmazonSageMakerServiceCatalogProductsExecutionRole"
                        ]
                    }
                ]
            },
            "tags": []
        },
        {
            "name": "AmazonSageMakerServiceCatalogProductsEventsServiceRolePolicy",
            "arn": "arn:aws:iam::aws:policy/service-role/AmazonSageMakerServiceCatalogProductsEventsServiceRolePolicy",
            "entity": "ANPAZKAPJZG4ATIM24QYI",
            "version_id": "v1",
            "type": "AWS",
            "attached": true,
            "document": {
                "Version": "2012-10-17",
                "Statement": [
                    {
                        "Effect": "Allow",
                        "Action": "codepipeline:StartPipelineExecution",
                        "Resource": "arn:aws:codepipeline:*:*:sagemaker-*"
                    }
                ]
            },
            "tags": []
        },
        {
            "name": "AmazonSageMakerServiceCatalogProductsCodePipelineServiceRolePolicy",
            "arn": "arn:aws:iam::aws:policy/service-role/AmazonSageMakerServiceCatalogProductsCodePipelineServiceRolePolicy",
            "entity": "ANPAZKAPJZG4CL3UG2EHM",
            "version_id": "v2",
            "type": "AWS",
            "attached": true,
            "document": {
                "Version": "2012-10-17",
                "Statement": [
                    {
                        "Sid": "AmazonSageMakerCodePipelineCFnPermission",
                        "Effect": "Allow",
                        "Action": [
                            "cloudformation:CreateChangeSet",
                            "cloudformation:CreateStack",
                            "cloudformation:DescribeChangeSet",
                            "cloudformation:DeleteChangeSet",
                            "cloudformation:DeleteStack",
                            "cloudformation:DescribeStacks",
                            "cloudformation:ExecuteChangeSet",
                            "cloudformation:SetStackPolicy",
                            "cloudformation:UpdateStack"
                        ],
                        "Resource": "arn:aws:cloudformation:*:*:stack/sagemaker-*"
                    },
                    {
                        "Sid": "AmazonSageMakerCodePipelineCFnTagPermission",
                        "Effect": "Allow",
                        "Action": [
                            "cloudformation:TagResource",
                            "cloudformation:UntagResource"
                        ],
                        "Resource": "arn:aws:cloudformation:*:*:stack/sagemaker-*",
                        "Condition": {
                            "ForAnyValue:StringEquals": {
                                "aws:TagKeys": [
                                    "sagemaker:project-name"
                                ]
                            }
                        }
                    },
                    {
                        "Sid": "AmazonSageMakerCodePipelineS3Permission",
                        "Effect": "Allow",
                        "Action": [
                            "s3:AbortMultipartUpload",
                            "s3:DeleteObject",
                            "s3:GetObject",
                            "s3:GetObjectVersion",
                            "s3:PutObject"
                        ],
                        "Resource": [
                            "arn:aws:s3:::sagemaker-*"
                        ]
                    },
                    {
                        "Sid": "AmazonSageMakerCodePipelinePassRolePermission",
                        "Effect": "Allow",
                        "Action": [
                            "iam:PassRole"
                        ],
                        "Resource": [
                            "arn:aws:iam::*:role/service-role/AmazonSageMakerServiceCatalogProductsCloudformationRole"
                        ]
                    },
                    {
                        "Sid": "AmazonSageMakerCodePipelineCodeBuildPermission",
                        "Effect": "Allow",
                        "Action": [
                            "codebuild:BatchGetBuilds",
                            "codebuild:StartBuild"
                        ],
                        "Resource": [
                            "arn:aws:codebuild:*:*:project/sagemaker-*",
                            "arn:aws:codebuild:*:*:build/sagemaker-*"
                        ]
                    },
                    {
                        "Sid": "AmazonSageMakerCodePipelineCodeCommitPermission",
                        "Effect": "Allow",
                        "Action": [
                            "codecommit:CancelUploadArchive",
                            "codecommit:GetBranch",
                            "codecommit:GetCommit",
                            "codecommit:GetUploadArchiveStatus",
                            "codecommit:UploadArchive"
                        ],
                        "Resource": "arn:aws:codecommit:*:*:sagemaker-*"
                    },
                    {
                        "Sid": "AmazonSageMakerCodePipelineCodeStarConnectionPermission",
                        "Effect": "Allow",
                        "Action": [
                            "codestar-connections:UseConnection"
                        ],
                        "Resource": [
                            "arn:aws:codestar-connections:*:*:connection/*"
                        ],
                        "Condition": {
                            "StringEqualsIgnoreCase": {
                                "aws:ResourceTag/sagemaker": "true"
                            }
                        }
                    },
                    {
                        "Sid": "AmazonSageMakerCodePipelineCodeConnectionPermission",
                        "Effect": "Allow",
                        "Action": [
                            "codeconnections:UseConnection"
                        ],
                        "Resource": [
                            "arn:aws:codeconnections:*:*:connection/*"
                        ],
                        "Condition": {
                            "StringEqualsIgnoreCase": {
                                "aws:ResourceTag/sagemaker": "true"
                            }
                        }
                    }
                ]
            },
            "tags": []
        },
        {
            "name": "AmazonSageMakerCanvasForecastAccess",
            "arn": "arn:aws:iam::aws:policy/service-role/AmazonSageMakerCanvasForecastAccess",
            "entity": "ANPAZKAPJZG4NXKPWTG5T",
            "version_id": "v1",
            "type": "AWS",
            "attached": true,
            "document": {
                "Version": "2012-10-17",
                "Statement": [
                    {
                        "Effect": "Allow",
                        "Action": [
                            "s3:GetObject",
                            "s3:PutObject"
                        ],
                        "Resource": [
                            "arn:aws:s3:::sagemaker-*/Canvas*",
                            "arn:aws:s3:::sagemaker-*/canvas*"
                        ]
                    },
                    {
                        "Effect": "Allow",
                        "Action": [
                            "s3:ListBucket"
                        ],
                        "Resource": [
                            "arn:aws:s3:::sagemaker-*"
                        ]
                    }
                ]
            },
            "tags": []
        },
        {
            "name": "AWSGlobalAcceleratorSLRPolicy",
            "arn": "arn:aws:iam::aws:policy/aws-service-role/AWSGlobalAcceleratorSLRPolicy",
            "entity": "ANPAZKAPJZG4EJ5ZEQR2C",
            "version_id": "v8",
            "type": "AWS",
            "attached": true,
            "document": {
                "Version": "2012-10-17",
                "Statement": [
                    {
                        "Sid": "EC2Action1",
                        "Effect": "Allow",
                        "Action": [
                            "ec2:CreateNetworkInterface",
                            "ec2:DescribeNetworkInterfaces",
                            "ec2:DescribeInstances",
                            "ec2:DescribeInternetGateways",
                            "ec2:DescribeSubnets",
                            "ec2:DescribeRegions",
                            "ec2:ModifyNetworkInterfaceAttribute",
                            "ec2:DeleteNetworkInterface",
                            "ec2:DescribeAddresses"
                        ],
                        "Resource": "*"
                    },
                    {
                        "Sid": "EC2Action2",
                        "Effect": "Allow",
                        "Action": [
                            "ec2:DeleteSecurityGroup",
                            "ec2:AssignIpv6Addresses",
                            "ec2:UnassignIpv6Addresses"
                        ],
                        "Resource": "*",
                        "Condition": {
                            "StringEquals": {
                                "ec2:ResourceTag/AWSServiceName": "GlobalAccelerator"
                            }
                        }
                    },
                    {
                        "Sid": "EC2Action3",
                        "Effect": "Allow",
                        "Action": [
                            "ec2:CreateSecurityGroup",
                            "ec2:DescribeSecurityGroups"
                        ],
                        "Resource": "*"
                    },
                    {
                        "Sid": "ElbAction1",
                        "Effect": "Allow",
                        "Action": [
                            "elasticloadbalancing:DescribeLoadBalancers",
                            "elasticloadbalancing:DescribeListeners",
                            "elasticloadbalancing:DescribeTargetGroups"
                        ],
                        "Resource": "*"
                    },
                    {
                        "Sid": "EC2Action4",
                        "Effect": "Allow",
                        "Action": "ec2:CreateTags",
                        "Resource": [
                            "arn:aws:ec2:*:*:security-group/*",
                            "arn:aws:ec2:*:*:network-interface/*"
                        ]
                    }
                ]
            },
            "tags": []
        },
        {
            "name": "AmazonSageMakerCanvasAIServicesAccess",
            "arn": "arn:aws:iam::aws:policy/AmazonSageMakerCanvasAIServicesAccess",
            "entity": "ANPAZKAPJZG4IA6MZINCJ",
            "version_id": "v3",
            "type": "AWS",
            "attached": true,
            "document": {
                "Version": "2012-10-17",
                "Statement": [
                    {
                        "Sid": "Textract",
                        "Effect": "Allow",
                        "Action": [
                            "textract:AnalyzeDocument",
                            "textract:AnalyzeExpense",
                            "textract:AnalyzeID",
                            "textract:StartDocumentAnalysis",
                            "textract:StartExpenseAnalysis",
                            "textract:GetDocumentAnalysis",
                            "textract:GetExpenseAnalysis"
                        ],
                        "Resource": "*"
                    },
                    {
                        "Sid": "Rekognition",
                        "Effect": "Allow",
                        "Action": [
                            "rekognition:DetectLabels",
                            "rekognition:DetectText"
                        ],
                        "Resource": "*"
                    },
                    {
                        "Sid": "Comprehend",
                        "Effect": "Allow",
                        "Action": [
                            "comprehend:BatchDetectDominantLanguage",
                            "comprehend:BatchDetectEntities",
                            "comprehend:BatchDetectSentiment",
                            "comprehend:DetectPiiEntities",
                            "comprehend:DetectEntities",
                            "comprehend:DetectSentiment",
                            "comprehend:DetectDominantLanguage"
                        ],
                        "Resource": "*"
                    },
                    {
                        "Sid": "Bedrock",
                        "Effect": "Allow",
                        "Action": [
                            "bedrock:InvokeModel",
                            "bedrock:ListFoundationModels",
                            "bedrock:InvokeModelWithResponseStream"
                        ],
                        "Resource": "*"
                    },
                    {
                        "Sid": "CreateBedrockResourcesPermission",
                        "Effect": "Allow",
                        "Action": [
                            "bedrock:CreateModelCustomizationJob",
                            "bedrock:CreateProvisionedModelThroughput",
                            "bedrock:TagResource"
                        ],
                        "Resource": [
                            "arn:aws:bedrock:*:*:model-customization-job/*",
                            "arn:aws:bedrock:*:*:custom-model/*",
                            "arn:aws:bedrock:*:*:provisioned-model/*"
                        ],
                        "Condition": {
                            "ForAnyValue:StringEquals": {
                                "aws:TagKeys": [
                                    "SageMaker",
                                    "Canvas"
                                ]
                            },
                            "StringEquals": {
                                "aws:RequestTag/SageMaker": "true",
                                "aws:RequestTag/Canvas": "true",
                                "aws:ResourceTag/SageMaker": "true",
                                "aws:ResourceTag/Canvas": "true"
                            }
                        }
                    },
                    {
                        "Sid": "GetStopAndDeleteBedrockResourcesPermission",
                        "Effect": "Allow",
                        "Action": [
                            "bedrock:GetModelCustomizationJob",
                            "bedrock:GetCustomModel",
                            "bedrock:GetProvisionedModelThroughput",
                            "bedrock:StopModelCustomizationJob",
                            "bedrock:DeleteProvisionedModelThroughput"
                        ],
                        "Resource": [
                            "arn:aws:bedrock:*:*:model-customization-job/*",
                            "arn:aws:bedrock:*:*:custom-model/*",
                            "arn:aws:bedrock:*:*:provisioned-model/*"
                        ],
                        "Condition": {
                            "StringEquals": {
                                "aws:ResourceTag/SageMaker": "true",
                                "aws:ResourceTag/Canvas": "true"
                            }
                        }
                    },
                    {
                        "Sid": "FoundationModelPermission",
                        "Effect": "Allow",
                        "Action": [
                            "bedrock:CreateModelCustomizationJob"
                        ],
                        "Resource": [
                            "arn:aws:bedrock:*::foundation-model/*"
                        ]
                    },
                    {
                        "Sid": "BedrockFineTuningPassRole",
                        "Effect": "Allow",
                        "Action": [
                            "iam:PassRole"
                        ],
                        "Resource": [
                            "arn:aws:iam::*:role/*"
                        ],
                        "Condition": {
                            "StringEquals": {
                                "iam:PassedToService": "bedrock.amazonaws.com"
                            }
                        }
                    }
                ]
            },
            "tags": []
        },
        {
            "name": "AmazonSageMakerServiceCatalogProductsApiGatewayServiceRolePolicy",
            "arn": "arn:aws:iam::aws:policy/service-role/AmazonSageMakerServiceCatalogProductsApiGatewayServiceRolePolicy",
            "entity": "ANPAZKAPJZG4PMOKIK2TP",
            "version_id": "v1",
            "type": "AWS",
            "attached": true,
            "document": {
                "Version": "2012-10-17",
                "Statement": [
                    {
                        "Effect": "Allow",
                        "Action": [
                            "logs:CreateLogDelivery",
                            "logs:CreateLogGroup",
                            "logs:CreateLogStream",
                            "logs:DeleteLogDelivery",
                            "logs:DescribeLogGroups",
                            "logs:DescribeLogStreams",
                            "logs:DescribeResourcePolicies",
                            "logs:DescribeDestinations",
                            "logs:DescribeExportTasks",
                            "logs:DescribeMetricFilters",
                            "logs:DescribeQueries",
                            "logs:DescribeQueryDefinitions",
                            "logs:DescribeSubscriptionFilters",
                            "logs:GetLogDelivery",
                            "logs:GetLogEvents",
                            "logs:PutLogEvents",
                            "logs:PutResourcePolicy",
                            "logs:UpdateLogDelivery"
                        ],
                        "Resource": "arn:aws:logs:*:*:log-group:/aws/apigateway/*"
                    }
                ]
            },
            "tags": []
        },
        {
            "name": "AmazonEMRServerlessServiceRolePolicy",
            "arn": "arn:aws:iam::aws:policy/aws-service-role/AmazonEMRServerlessServiceRolePolicy",
            "entity": "ANPAZKAPJZG4GWPDPIMVL",
            "version_id": "v3",
            "type": "AWS",
            "attached": true,
            "document": {
                "Version": "2012-10-17",
                "Statement": [
                    {
                        "Sid": "EC2PolicyStatement",
                        "Effect": "Allow",
                        "Action": [
                            "ec2:CreateNetworkInterface",
                            "ec2:DeleteNetworkInterface",
                            "ec2:DescribeNetworkInterfaces",
                            "ec2:DescribeSecurityGroups",
                            "ec2:DescribeSubnets",
                            "ec2:DescribeVpcs",
                            "ec2:DescribeDhcpOptions",
                            "ec2:DescribeRouteTables"
                        ],
                        "Resource": "*"
                    },
                    {
                        "Sid": "CloudWatchPolicyStatement",
                        "Effect": "Allow",
                        "Action": [
                            "cloudwatch:PutMetricData"
                        ],
                        "Resource": [
                            "*"
                        ],
                        "Condition": {
                            "StringEquals": {
                                "cloudwatch:namespace": [
                                    "AWS/EMRServerless",
                                    "AWS/Usage"
                                ]
                            }
                        }
                    }
                ]
            },
            "tags": []
        },
        {
            "name": "AmazonSageMakerCanvasFullAccess",
            "arn": "arn:aws:iam::aws:policy/AmazonSageMakerCanvasFullAccess",
            "entity": "ANPAZKAPJZG4LG6L7ZJCN",
            "version_id": "v11",
            "type": "AWS",
            "attached": true,
            "document": {
                "Version": "2012-10-17",
                "Statement": [
                    {
                        "Sid": "SageMakerUserDetailsAndPackageOperations",
                        "Effect": "Allow",
                        "Action": [
                            "sagemaker:DescribeDomain",
                            "sagemaker:DescribeUserProfile",
                            "sagemaker:ListTags",
                            "sagemaker:ListModelPackages",
                            "sagemaker:ListModelPackageGroups",
                            "sagemaker:ListEndpoints"
                        ],
                        "Resource": "*"
                    },
                    {
                        "Sid": "SageMakerPackageGroupOperations",
                        "Effect": "Allow",
                        "Action": [
                            "sagemaker:CreateModelPackageGroup",
                            "sagemaker:CreateModelPackage",
                            "sagemaker:DescribeModelPackageGroup",
                            "sagemaker:DescribeModelPackage"
                        ],
                        "Resource": [
                            "arn:aws:sagemaker:*:*:model-package/*",
                            "arn:aws:sagemaker:*:*:model-package-group/*"
                        ]
                    },
                    {
                        "Sid": "SageMakerTrainingOperations",
                        "Effect": "Allow",
                        "Action": [
                            "sagemaker:CreateCompilationJob",
                            "sagemaker:CreateEndpoint",
                            "sagemaker:CreateEndpointConfig",
                            "sagemaker:CreateModel",
                            "sagemaker:CreateProcessingJob",
                            "sagemaker:CreateAutoMLJob",
                            "sagemaker:CreateAutoMLJobV2",
                            "sagemaker:CreateTrainingJob",
                            "sagemaker:CreateTransformJob",
                            "sagemaker:DeleteEndpoint",
                            "sagemaker:DescribeCompilationJob",
                            "sagemaker:DescribeEndpoint",
                            "sagemaker:DescribeEndpointConfig",
                            "sagemaker:DescribeModel",
                            "sagemaker:DescribeProcessingJob",
                            "sagemaker:DescribeAutoMLJob",
                            "sagemaker:DescribeAutoMLJobV2",
                            "sagemaker:DescribeTrainingJob",
                            "sagemaker:DescribeTransformJob",
                            "sagemaker:ListCandidatesForAutoMLJob",
                            "sagemaker:StopAutoMLJob",
                            "sagemaker:StopTrainingJob",
                            "sagemaker:StopTransformJob",
                            "sagemaker:AddTags",
                            "sagemaker:DeleteApp"
                        ],
                        "Resource": [
                            "arn:aws:sagemaker:*:*:*Canvas*",
                            "arn:aws:sagemaker:*:*:*canvas*",
                            "arn:aws:sagemaker:*:*:*model-compilation-*"
                        ]
                    },
                    {
                        "Sid": "SageMakerHostingOperations",
                        "Effect": "Allow",
                        "Action": [
                            "sagemaker:DeleteEndpointConfig",
                            "sagemaker:DeleteModel",
                            "sagemaker:InvokeEndpoint",
                            "sagemaker:UpdateEndpointWeightsAndCapacities",
                            "sagemaker:InvokeEndpointAsync"
                        ],
                        "Resource": [
                            "arn:aws:sagemaker:*:*:*Canvas*",
                            "arn:aws:sagemaker:*:*:*canvas*"
                        ]
                    },
                    {
                        "Sid": "EC2VPCOperation",
                        "Effect": "Allow",
                        "Action": [
                            "ec2:CreateVpcEndpoint",
                            "ec2:DescribeSecurityGroups",
                            "ec2:DescribeSubnets",
                            "ec2:DescribeVpcs",
                            "ec2:DescribeVpcEndpoints",
                            "ec2:DescribeVpcEndpointServices"
                        ],
                        "Resource": "*"
                    },
                    {
                        "Sid": "ECROperations",
                        "Effect": "Allow",
                        "Action": [
                            "ecr:BatchGetImage",
                            "ecr:GetDownloadUrlForLayer",
                            "ecr:GetAuthorizationToken"
                        ],
                        "Resource": "*"
                    },
                    {
                        "Sid": "IAMGetOperations",
                        "Effect": "Allow",
                        "Action": [
                            "iam:GetRole"
                        ],
                        "Resource": "arn:aws:iam::*:role/*"
                    },
                    {
                        "Sid": "IAMPassOperation",
                        "Effect": "Allow",
                        "Action": [
                            "iam:PassRole"
                        ],
                        "Resource": "arn:aws:iam::*:role/*",
                        "Condition": {
                            "StringEquals": {
                                "iam:PassedToService": "sagemaker.amazonaws.com"
                            }
                        }
                    },
                    {
                        "Sid": "LoggingOperation",
                        "Effect": "Allow",
                        "Action": [
                            "logs:CreateLogGroup",
                            "logs:CreateLogStream",
                            "logs:PutLogEvents"
                        ],
                        "Resource": "arn:aws:logs:*:*:log-group:/aws/sagemaker/*"
                    },
                    {
                        "Sid": "S3Operations",
                        "Effect": "Allow",
                        "Action": [
                            "s3:GetObject",
                            "s3:PutObject",
                            "s3:DeleteObject",
                            "s3:CreateBucket",
                            "s3:GetBucketCors",
                            "s3:GetBucketLocation"
                        ],
                        "Resource": [
                            "arn:aws:s3:::*SageMaker*",
                            "arn:aws:s3:::*Sagemaker*",
                            "arn:aws:s3:::*sagemaker*"
                        ]
                    },
                    {
                        "Sid": "ReadSageMakerJumpstartArtifacts",
                        "Effect": "Allow",
                        "Action": "s3:GetObject",
                        "Resource": [
                            "arn:aws:s3:::jumpstart-cache-prod-us-west-2/*",
                            "arn:aws:s3:::jumpstart-cache-prod-us-east-1/*",
                            "arn:aws:s3:::jumpstart-cache-prod-us-east-2/*",
                            "arn:aws:s3:::jumpstart-cache-prod-eu-west-1/*",
                            "arn:aws:s3:::jumpstart-cache-prod-eu-central-1/*",
                            "arn:aws:s3:::jumpstart-cache-prod-ap-south-1/*",
                            "arn:aws:s3:::jumpstart-cache-prod-ap-northeast-2/*",
                            "arn:aws:s3:::jumpstart-cache-prod-ap-northeast-1/*",
                            "arn:aws:s3:::jumpstart-cache-prod-ap-southeast-1/*",
                            "arn:aws:s3:::jumpstart-cache-prod-ap-southeast-2/*"
                        ]
                    },
                    {
                        "Sid": "S3ListOperations",
                        "Effect": "Allow",
                        "Action": [
                            "s3:ListBucket",
                            "s3:ListAllMyBuckets"
                        ],
                        "Resource": "*"
                    },
                    {
                        "Sid": "GlueOperations",
                        "Effect": "Allow",
                        "Action": "glue:SearchTables",
                        "Resource": [
                            "arn:aws:glue:*:*:table/*/*",
                            "arn:aws:glue:*:*:database/*",
                            "arn:aws:glue:*:*:catalog"
                        ]
                    },
                    {
                        "Sid": "SecretsManagerARNBasedOperation",
                        "Effect": "Allow",
                        "Action": [
                            "secretsmanager:DescribeSecret",
                            "secretsmanager:GetSecretValue",
                            "secretsmanager:CreateSecret",
                            "secretsmanager:PutResourcePolicy"
                        ],
                        "Resource": [
                            "arn:aws:secretsmanager:*:*:secret:AmazonSageMaker-*"
                        ]
                    },
                    {
                        "Sid": "SecretManagerTagBasedOperation",
                        "Effect": "Allow",
                        "Action": [
                            "secretsmanager:DescribeSecret",
                            "secretsmanager:GetSecretValue"
                        ],
                        "Resource": "*",
                        "Condition": {
                            "StringEquals": {
                                "secretsmanager:ResourceTag/SageMaker": "true"
                            }
                        }
                    },
                    {
                        "Sid": "RedshiftOperations",
                        "Effect": "Allow",
                        "Action": [
                            "redshift-data:ExecuteStatement",
                            "redshift-data:DescribeStatement",
                            "redshift-data:CancelStatement",
                            "redshift-data:GetStatementResult",
                            "redshift-data:ListSchemas",
                            "redshift-data:ListTables",
                            "redshift-data:DescribeTable"
                        ],
                        "Resource": "*"
                    },
                    {
                        "Sid": "RedshiftGetCredentialsOperation",
                        "Effect": "Allow",
                        "Action": [
                            "redshift:GetClusterCredentials"
                        ],
                        "Resource": [
                            "arn:aws:redshift:*:*:dbuser:*/sagemaker_access*",
                            "arn:aws:redshift:*:*:dbname:*"
                        ]
                    },
                    {
                        "Sid": "ForecastOperations",
                        "Effect": "Allow",
                        "Action": [
                            "forecast:CreateExplainabilityExport",
                            "forecast:CreateExplainability",
                            "forecast:CreateForecastEndpoint",
                            "forecast:CreateAutoPredictor",
                            "forecast:CreateDatasetImportJob",
                            "forecast:CreateDatasetGroup",
                            "forecast:CreateDataset",
                            "forecast:CreateForecast",
                            "forecast:CreateForecastExportJob",
                            "forecast:CreatePredictorBacktestExportJob",
                            "forecast:CreatePredictor",
                            "forecast:DescribeExplainabilityExport",
                            "forecast:DescribeExplainability",
                            "forecast:DescribeAutoPredictor",
                            "forecast:DescribeForecastEndpoint",
                            "forecast:DescribeDatasetImportJob",
                            "forecast:DescribeDataset",
                            "forecast:DescribeForecast",
                            "forecast:DescribeForecastExportJob",
                            "forecast:DescribePredictorBacktestExportJob",
                            "forecast:GetAccuracyMetrics",
                            "forecast:InvokeForecastEndpoint",
                            "forecast:GetRecentForecastContext",
                            "forecast:DescribePredictor",
                            "forecast:TagResource",
                            "forecast:DeleteResourceTree"
                        ],
                        "Resource": [
                            "arn:aws:forecast:*:*:*Canvas*"
                        ]
                    },
                    {
                        "Sid": "RDSOperation",
                        "Effect": "Allow",
                        "Action": "rds:DescribeDBInstances",
                        "Resource": "*"
                    },
                    {
                        "Sid": "IAMPassOperationForForecast",
                        "Effect": "Allow",
                        "Action": [
                            "iam:PassRole"
                        ],
                        "Resource": "arn:aws:iam::*:role/*",
                        "Condition": {
                            "StringEquals": {
                                "iam:PassedToService": "forecast.amazonaws.com"
                            }
                        }
                    },
                    {
                        "Sid": "AutoscalingOperations",
                        "Effect": "Allow",
                        "Action": [
                            "application-autoscaling:PutScalingPolicy",
                            "application-autoscaling:RegisterScalableTarget"
                        ],
                        "Resource": "arn:aws:application-autoscaling:*:*:scalable-target/*",
                        "Condition": {
                            "StringEquals": {
                                "application-autoscaling:service-namespace": "sagemaker",
                                "application-autoscaling:scalable-dimension": "sagemaker:variant:DesiredInstanceCount"
                            }
                        }
                    },
                    {
                        "Sid": "AsyncEndpointOperations",
                        "Effect": "Allow",
                        "Action": [
                            "cloudwatch:DescribeAlarms",
                            "sagemaker:DescribeEndpointConfig"
                        ],
                        "Resource": "*"
                    },
                    {
                        "Sid": "DescribeScalingOperations",
                        "Effect": "Allow",
                        "Action": [
                            "application-autoscaling:DescribeScalingActivities"
                        ],
                        "Resource": "*",
                        "Condition": {
                            "StringEquals": {
                                "aws:ResourceAccount": "${aws:PrincipalAccount}"
                            }
                        }
                    },
                    {
                        "Sid": "SageMakerCloudWatchUpdate",
                        "Effect": "Allow",
                        "Action": [
                            "cloudwatch:PutMetricAlarm",
                            "cloudwatch:DeleteAlarms"
                        ],
                        "Resource": [
                            "arn:aws:cloudwatch:*:*:alarm:TargetTracking*"
                        ],
                        "Condition": {
                            "StringEquals": {
                                "aws:CalledViaLast": "application-autoscaling.amazonaws.com"
                            }
                        }
                    },
                    {
                        "Sid": "AutoscalingSageMakerEndpointOperation",
                        "Action": "iam:CreateServiceLinkedRole",
                        "Effect": "Allow",
                        "Resource": "arn:aws:iam::*:role/aws-service-role/sagemaker.application-autoscaling.amazonaws.com/AWSServiceRoleForApplicationAutoScaling_SageMakerEndpoint",
                        "Condition": {
                            "StringLike": {
                                "iam:AWSServiceName": "sagemaker.application-autoscaling.amazonaws.com"
                            }
                        }
                    },
                    {
                        "Sid": "AthenaOperation",
                        "Action": [
                            "athena:ListTableMetadata",
                            "athena:ListDataCatalogs",
                            "athena:ListDatabases"
                        ],
                        "Effect": "Allow",
                        "Resource": "*",
                        "Condition": {
                            "StringEquals": {
                                "aws:ResourceAccount": "${aws:PrincipalAccount}"
                            }
                        }
                    },
                    {
                        "Sid": "GlueOperation",
                        "Action": [
                            "glue:GetDatabases",
                            "glue:GetPartitions",
                            "glue:GetTables"
                        ],
                        "Effect": "Allow",
                        "Resource": [
                            "arn:aws:glue:*:*:table/*",
                            "arn:aws:glue:*:*:catalog",
                            "arn:aws:glue:*:*:database/*"
                        ],
                        "Condition": {
                            "StringEquals": {
                                "aws:ResourceAccount": "${aws:PrincipalAccount}"
                            }
                        }
                    },
                    {
                        "Sid": "QuicksightOperation",
                        "Action": [
                            "quicksight:ListNamespaces"
                        ],
                        "Effect": "Allow",
                        "Resource": "*",
                        "Condition": {
                            "StringEquals": {
                                "aws:ResourceAccount": "${aws:PrincipalAccount}"
                            }
                        }
                    },
                    {
                        "Sid": "AllowUseOfKeyInAccount",
                        "Effect": "Allow",
                        "Action": [
                            "kms:DescribeKey"
                        ],
                        "Resource": "*",
                        "Condition": {
                            "StringEquals": {
                                "aws:ResourceTag/Source": "SageMakerCanvas",
                                "aws:ResourceAccount": "${aws:PrincipalAccount}"
                            }
                        }
                    },
                    {
                        "Sid": "EMRServerlessCreateApplicationOperation",
                        "Effect": "Allow",
                        "Action": "emr-serverless:CreateApplication",
                        "Resource": "arn:aws:emr-serverless:*:*:/*",
                        "Condition": {
                            "StringEquals": {
                                "aws:RequestTag/sagemaker:is-canvas-resource": "True",
                                "aws:ResourceAccount": "${aws:PrincipalAccount}"
                            }
                        }
                    },
                    {
                        "Sid": "EMRServerlessListApplicationOperation",
                        "Effect": "Allow",
                        "Action": "emr-serverless:ListApplications",
                        "Resource": "arn:aws:emr-serverless:*:*:/*",
                        "Condition": {
                            "StringEquals": {
                                "aws:ResourceAccount": "${aws:PrincipalAccount}"
                            }
                        }
                    },
                    {
                        "Sid": "EMRServerlessApplicationOperations",
                        "Effect": "Allow",
                        "Action": [
                            "emr-serverless:UpdateApplication",
                            "emr-serverless:StopApplication",
                            "emr-serverless:GetApplication",
                            "emr-serverless:StartApplication"
                        ],
                        "Resource": "arn:aws:emr-serverless:*:*:/applications/*",
                        "Condition": {
                            "StringEquals": {
                                "aws:ResourceTag/sagemaker:is-canvas-resource": "True",
                                "aws:ResourceAccount": "${aws:PrincipalAccount}"
                            }
                        }
                    },
                    {
                        "Sid": "EMRServerlessStartJobRunOperation",
                        "Effect": "Allow",
                        "Action": "emr-serverless:StartJobRun",
                        "Resource": "arn:aws:emr-serverless:*:*:/applications/*",
                        "Condition": {
                            "StringEquals": {
                                "aws:RequestTag/sagemaker:is-canvas-resource": "True",
                                "aws:ResourceAccount": "${aws:PrincipalAccount}"
                            }
                        }
                    },
                    {
                        "Sid": "EMRServerlessListJobRunOperation",
                        "Effect": "Allow",
                        "Action": "emr-serverless:ListJobRuns",
                        "Resource": "arn:aws:emr-serverless:*:*:/applications/*",
                        "Condition": {
                            "StringEquals": {
                                "aws:ResourceTag/sagemaker:is-canvas-resource": "True",
                                "aws:ResourceAccount": "${aws:PrincipalAccount}"
                            }
                        }
                    },
                    {
                        "Sid": "EMRServerlessJobRunOperations",
                        "Effect": "Allow",
                        "Action": [
                            "emr-serverless:GetJobRun",
                            "emr-serverless:CancelJobRun"
                        ],
                        "Resource": "arn:aws:emr-serverless:*:*:/applications/*/jobruns/*",
                        "Condition": {
                            "StringEquals": {
                                "aws:ResourceTag/sagemaker:is-canvas-resource": "True",
                                "aws:ResourceAccount": "${aws:PrincipalAccount}"
                            }
                        }
                    },
                    {
                        "Sid": "EMRServerlessTagResourceOperation",
                        "Effect": "Allow",
                        "Action": "emr-serverless:TagResource",
                        "Resource": "arn:aws:emr-serverless:*:*:/*",
                        "Condition": {
                            "StringEquals": {
                                "aws:RequestTag/sagemaker:is-canvas-resource": "True",
                                "aws:ResourceAccount": "${aws:PrincipalAccount}"
                            }
                        }
                    },
                    {
                        "Sid": "IAMPassOperationForEMRServerless",
                        "Effect": "Allow",
                        "Action": "iam:PassRole",
                        "Resource": [
                            "arn:aws:iam::*:role/service-role/AmazonSageMakerCanvasEMRSExecutionAccess-*",
                            "arn:aws:iam::*:role/AmazonSageMakerCanvasEMRSExecutionAccess-*"
                        ],
                        "Condition": {
                            "StringEquals": {
                                "iam:PassedToService": "emr-serverless.amazonaws.com",
                                "aws:ResourceAccount": "${aws:PrincipalAccount}"
                            }
                        }
                    }
                ]
            },
            "tags": []
        },
        {
            "name": "AmazonSageMakerServiceCatalogProductsFirehoseServiceRolePolicy",
            "arn": "arn:aws:iam::aws:policy/service-role/AmazonSageMakerServiceCatalogProductsFirehoseServiceRolePolicy",
            "entity": "ANPAZKAPJZG4ESFA6JNN2",
            "version_id": "v1",
            "type": "AWS",
            "attached": true,
            "document": {
                "Version": "2012-10-17",
                "Statement": [
                    {
                        "Effect": "Allow",
                        "Action": [
                            "firehose:PutRecord",
                            "firehose:PutRecordBatch"
                        ],
                        "Resource": "arn:aws:firehose:*:*:deliverystream/sagemaker-*"
                    }
                ]
            },
            "tags": []
        },
        {
            "name": "CostOptimizationHubAdminAccess",
            "arn": "arn:aws:iam::aws:policy/CostOptimizationHubAdminAccess",
            "entity": "ANPAZKAPJZG4CARV65TYL",
            "version_id": "v1",
            "type": "AWS",
            "attached": true,
            "document": {
                "Version": "2012-10-17",
                "Statement": [
                    {
                        "Sid": "CostOptimizationHubAdminAccess",
                        "Effect": "Allow",
                        "Action": [
                            "cost-optimization-hub:ListEnrollmentStatuses",
                            "cost-optimization-hub:UpdateEnrollmentStatus",
                            "cost-optimization-hub:GetPreferences",
                            "cost-optimization-hub:UpdatePreferences",
                            "cost-optimization-hub:GetRecommendation",
                            "cost-optimization-hub:ListRecommendations",
                            "cost-optimization-hub:ListRecommendationSummaries"
                        ],
                        "Resource": "*"
                    },
                    {
                        "Sid": "AllowCreationOfServiceLinkedRoleForCostOptimizationHub",
                        "Effect": "Allow",
                        "Action": [
                            "iam:CreateServiceLinkedRole"
                        ],
                        "Resource": [
                            "arn:aws:iam::*:role/aws-service-role/cost-optimization-hub.bcm.amazonaws.com/AWSServiceRoleForCostOptimizationHub"
                        ],
                        "Condition": {
                            "StringLike": {
                                "iam:AWSServiceName": "cost-optimization-hub.bcm.amazonaws.com"
                            }
                        }
                    },
                    {
                        "Sid": "AllowAWSServiceAccessForCostOptimizationHub",
                        "Effect": "Allow",
                        "Action": [
                            "organizations:EnableAWSServiceAccess"
                        ],
                        "Resource": "*",
                        "Condition": {
                            "StringLike": {
                                "organizations:ServicePrincipal": [
                                    "cost-optimization-hub.bcm.amazonaws.com"
                                ]
                            }
                        }
                    }
                ]
            },
            "tags": []
        },
        {
            "name": "AmazonSageMakerServiceCatalogProductsLambdaServiceRolePolicy",
            "arn": "arn:aws:iam::aws:policy/service-role/AmazonSageMakerServiceCatalogProductsLambdaServiceRolePolicy",
            "entity": "ANPAZKAPJZG4CMUQVI4HY",
            "version_id": "v2",
            "type": "AWS",
            "attached": true,
            "document": {
                "Version": "2012-10-17",
                "Statement": [
                    {
                        "Sid": "AmazonSageMakerLambdaECRPermission",
                        "Effect": "Allow",
                        "Action": [
                            "ecr:DescribeImages",
                            "ecr:BatchDeleteImage",
                            "ecr:CompleteLayerUpload",
                            "ecr:CreateRepository",
                            "ecr:DeleteRepository",
                            "ecr:InitiateLayerUpload",
                            "ecr:PutImage",
                            "ecr:UploadLayerPart"
                        ],
                        "Resource": [
                            "arn:aws:ecr:*:*:repository/sagemaker-*"
                        ]
                    },
                    {
                        "Sid": "AmazonSageMakerLambdaEventBridgePermission",
                        "Effect": "Allow",
                        "Action": [
                            "events:DeleteRule",
                            "events:DescribeRule",
                            "events:PutRule",
                            "events:PutTargets",
                            "events:RemoveTargets"
                        ],
                        "Resource": [
                            "arn:aws:events:*:*:rule/sagemaker-*"
                        ]
                    },
                    {
                        "Sid": "AmazonSageMakerLambdaS3BucketPermission",
                        "Effect": "Allow",
                        "Action": [
                            "s3:CreateBucket",
                            "s3:DeleteBucket",
                            "s3:GetBucketAcl",
                            "s3:GetBucketCors",
                            "s3:GetBucketLocation",
                            "s3:ListAllMyBuckets",
                            "s3:ListBucket",
                            "s3:ListBucketMultipartUploads",
                            "s3:PutBucketCors"
                        ],
                        "Resource": [
                            "arn:aws:s3:::aws-glue-*",
                            "arn:aws:s3:::sagemaker-*"
                        ]
                    },
                    {
                        "Sid": "AmazonSageMakerLambdaS3ObjectPermission",
                        "Effect": "Allow",
                        "Action": [
                            "s3:AbortMultipartUpload",
                            "s3:DeleteObject",
                            "s3:GetObject",
                            "s3:GetObjectVersion",
                            "s3:PutObject"
                        ],
                        "Resource": [
                            "arn:aws:s3:::aws-glue-*",
                            "arn:aws:s3:::sagemaker-*"
                        ]
                    },
                    {
                        "Sid": "AmazonSageMakerLambdaSageMakerPermission",
                        "Effect": "Allow",
                        "Action": [
                            "sagemaker:AddAssociation",
                            "sagemaker:AddTags",
                            "sagemaker:AssociateTrialComponent",
                            "sagemaker:BatchDescribeModelPackage",
                            "sagemaker:BatchGetMetrics",
                            "sagemaker:BatchGetRecord",
                            "sagemaker:BatchPutMetrics",
                            "sagemaker:CreateAction",
                            "sagemaker:CreateAlgorithm",
                            "sagemaker:CreateApp",
                            "sagemaker:CreateAppImageConfig",
                            "sagemaker:CreateArtifact",
                            "sagemaker:CreateAutoMLJob",
                            "sagemaker:CreateCodeRepository",
                            "sagemaker:CreateCompilationJob",
                            "sagemaker:CreateContext",
                            "sagemaker:CreateDataQualityJobDefinition",
                            "sagemaker:CreateDeviceFleet",
                            "sagemaker:CreateDomain",
                            "sagemaker:CreateEdgePackagingJob",
                            "sagemaker:CreateEndpoint",
                            "sagemaker:CreateEndpointConfig",
                            "sagemaker:CreateExperiment",
                            "sagemaker:CreateFeatureGroup",
                            "sagemaker:CreateFlowDefinition",
                            "sagemaker:CreateHumanTaskUi",
                            "sagemaker:CreateHyperParameterTuningJob",
                            "sagemaker:CreateImage",
                            "sagemaker:CreateImageVersion",
                            "sagemaker:CreateInferenceRecommendationsJob",
                            "sagemaker:CreateLabelingJob",
                            "sagemaker:CreateLineageGroupPolicy",
                            "sagemaker:CreateModel",
                            "sagemaker:CreateModelBiasJobDefinition",
                            "sagemaker:CreateModelExplainabilityJobDefinition",
                            "sagemaker:CreateModelPackage",
                            "sagemaker:CreateModelPackageGroup",
                            "sagemaker:CreateModelQualityJobDefinition",
                            "sagemaker:CreateMonitoringSchedule",
                            "sagemaker:CreateNotebookInstance",
                            "sagemaker:CreateNotebookInstanceLifecycleConfig",
                            "sagemaker:CreatePipeline",
                            "sagemaker:CreatePresignedDomainUrl",
                            "sagemaker:CreatePresignedNotebookInstanceUrl",
                            "sagemaker:CreateProcessingJob",
                            "sagemaker:CreateProject",
                            "sagemaker:CreateTrainingJob",
                            "sagemaker:CreateTransformJob",
                            "sagemaker:CreateTrial",
                            "sagemaker:CreateTrialComponent",
                            "sagemaker:CreateUserProfile",
                            "sagemaker:CreateWorkforce",
                            "sagemaker:CreateWorkteam",
                            "sagemaker:DeleteAction",
                            "sagemaker:DeleteAlgorithm",
                            "sagemaker:DeleteApp",
                            "sagemaker:DeleteAppImageConfig",
                            "sagemaker:DeleteArtifact",
                            "sagemaker:DeleteAssociation",
                            "sagemaker:DeleteCodeRepository",
                            "sagemaker:DeleteContext",
                            "sagemaker:DeleteDataQualityJobDefinition",
                            "sagemaker:DeleteDeviceFleet",
                            "sagemaker:DeleteDomain",
                            "sagemaker:DeleteEndpoint",
                            "sagemaker:DeleteEndpointConfig",
                            "sagemaker:DeleteExperiment",
                            "sagemaker:DeleteFeatureGroup",
                            "sagemaker:DeleteFlowDefinition",
                            "sagemaker:DeleteHumanLoop",
                            "sagemaker:DeleteHumanTaskUi",
                            "sagemaker:DeleteImage",
                            "sagemaker:DeleteImageVersion",
                            "sagemaker:DeleteLineageGroupPolicy",
                            "sagemaker:DeleteModel",
                            "sagemaker:DeleteModelBiasJobDefinition",
                            "sagemaker:DeleteModelExplainabilityJobDefinition",
                            "sagemaker:DeleteModelPackage",
                            "sagemaker:DeleteModelPackageGroup",
                            "sagemaker:DeleteModelPackageGroupPolicy",
                            "sagemaker:DeleteModelQualityJobDefinition",
                            "sagemaker:DeleteMonitoringSchedule",
                            "sagemaker:DeleteNotebookInstance",
                            "sagemaker:DeleteNotebookInstanceLifecycleConfig",
                            "sagemaker:DeletePipeline",
                            "sagemaker:DeleteProject",
                            "sagemaker:DeleteRecord",
                            "sagemaker:DeleteTags",
                            "sagemaker:DeleteTrial",
                            "sagemaker:DeleteTrialComponent",
                            "sagemaker:DeleteUserProfile",
                            "sagemaker:DeleteWorkforce",
                            "sagemaker:DeleteWorkteam",
                            "sagemaker:DeregisterDevices",
                            "sagemaker:DescribeAction",
                            "sagemaker:DescribeAlgorithm",
                            "sagemaker:DescribeApp",
                            "sagemaker:DescribeAppImageConfig",
                            "sagemaker:DescribeArtifact",
                            "sagemaker:DescribeAutoMLJob",
                            "sagemaker:DescribeCodeRepository",
                            "sagemaker:DescribeCompilationJob",
                            "sagemaker:DescribeContext",
                            "sagemaker:DescribeDataQualityJobDefinition",
                            "sagemaker:DescribeDevice",
                            "sagemaker:DescribeDeviceFleet",
                            "sagemaker:DescribeDomain",
                            "sagemaker:DescribeEdgePackagingJob",
                            "sagemaker:DescribeEndpoint",
                            "sagemaker:DescribeEndpointConfig",
                            "sagemaker:DescribeExperiment",
                            "sagemaker:DescribeFeatureGroup",
                            "sagemaker:DescribeFlowDefinition",
                            "sagemaker:DescribeHumanLoop",
                            "sagemaker:DescribeHumanTaskUi",
                            "sagemaker:DescribeHyperParameterTuningJob",
                            "sagemaker:DescribeImage",
                            "sagemaker:DescribeImageVersion",
                            "sagemaker:DescribeInferenceRecommendationsJob",
                            "sagemaker:DescribeLabelingJob",
                            "sagemaker:DescribeLineageGroup",
                            "sagemaker:DescribeModel",
                            "sagemaker:DescribeModelBiasJobDefinition",
                            "sagemaker:DescribeModelExplainabilityJobDefinition",
                            "sagemaker:DescribeModelPackage",
                            "sagemaker:DescribeModelPackageGroup",
                            "sagemaker:DescribeModelQualityJobDefinition",
                            "sagemaker:DescribeMonitoringSchedule",
                            "sagemaker:DescribeNotebookInstance",
                            "sagemaker:DescribeNotebookInstanceLifecycleConfig",
                            "sagemaker:DescribePipeline",
                            "sagemaker:DescribePipelineDefinitionForExecution",
                            "sagemaker:DescribePipelineExecution",
                            "sagemaker:DescribeProcessingJob",
                            "sagemaker:DescribeProject",
                            "sagemaker:DescribeSubscribedWorkteam",
                            "sagemaker:DescribeTrainingJob",
                            "sagemaker:DescribeTransformJob",
                            "sagemaker:DescribeTrial",
                            "sagemaker:DescribeTrialComponent",
                            "sagemaker:DescribeUserProfile",
                            "sagemaker:DescribeWorkforce",
                            "sagemaker:DescribeWorkteam",
                            "sagemaker:DisableSagemakerServicecatalogPortfolio",
                            "sagemaker:DisassociateTrialComponent",
                            "sagemaker:EnableSagemakerServicecatalogPortfolio",
                            "sagemaker:GetDeviceFleetReport",
                            "sagemaker:GetDeviceRegistration",
                            "sagemaker:GetLineageGroupPolicy",
                            "sagemaker:GetModelPackageGroupPolicy",
                            "sagemaker:GetRecord",
                            "sagemaker:GetSagemakerServicecatalogPortfolioStatus",
                            "sagemaker:GetSearchSuggestions",
                            "sagemaker:InvokeEndpoint",
                            "sagemaker:InvokeEndpointAsync",
                            "sagemaker:ListActions",
                            "sagemaker:ListAlgorithms",
                            "sagemaker:ListAppImageConfigs",
                            "sagemaker:ListApps",
                            "sagemaker:ListArtifacts",
                            "sagemaker:ListAssociations",
                            "sagemaker:ListAutoMLJobs",
                            "sagemaker:ListCandidatesForAutoMLJob",
                            "sagemaker:ListCodeRepositories",
                            "sagemaker:ListCompilationJobs",
                            "sagemaker:ListContexts",
                            "sagemaker:ListDataQualityJobDefinitions",
                            "sagemaker:ListDeviceFleets",
                            "sagemaker:ListDevices",
                            "sagemaker:ListDomains",
                            "sagemaker:ListEdgePackagingJobs",
                            "sagemaker:ListEndpointConfigs",
                            "sagemaker:ListEndpoints",
                            "sagemaker:ListExperiments",
                            "sagemaker:ListFeatureGroups",
                            "sagemaker:ListFlowDefinitions",
                            "sagemaker:ListHumanLoops",
                            "sagemaker:ListHumanTaskUis",
                            "sagemaker:ListHyperParameterTuningJobs",
                            "sagemaker:ListImageVersions",
                            "sagemaker:ListImages",
                            "sagemaker:ListInferenceRecommendationsJobs",
                            "sagemaker:ListLabelingJobs",
                            "sagemaker:ListLabelingJobsForWorkteam",
                            "sagemaker:ListLineageGroups",
                            "sagemaker:ListModelBiasJobDefinitions",
                            "sagemaker:ListModelExplainabilityJobDefinitions",
                            "sagemaker:ListModelMetadata",
                            "sagemaker:ListModelPackageGroups",
                            "sagemaker:ListModelPackages",
                            "sagemaker:ListModelQualityJobDefinitions",
                            "sagemaker:ListModels",
                            "sagemaker:ListMonitoringExecutions",
                            "sagemaker:ListMonitoringSchedules",
                            "sagemaker:ListNotebookInstanceLifecycleConfigs",
                            "sagemaker:ListNotebookInstances",
                            "sagemaker:ListPipelineExecutionSteps",
                            "sagemaker:ListPipelineExecutions",
                            "sagemaker:ListPipelineParametersForExecution",
                            "sagemaker:ListPipelines",
                            "sagemaker:ListProcessingJobs",
                            "sagemaker:ListProjects",
                            "sagemaker:ListSubscribedWorkteams",
                            "sagemaker:ListTags",
                            "sagemaker:ListTrainingJobs",
                            "sagemaker:ListTrainingJobsForHyperParameterTuningJob",
                            "sagemaker:ListTransformJobs",
                            "sagemaker:ListTrialComponents",
                            "sagemaker:ListTrials",
                            "sagemaker:ListUserProfiles",
                            "sagemaker:ListWorkforces",
                            "sagemaker:ListWorkteams",
                            "sagemaker:PutLineageGroupPolicy",
                            "sagemaker:PutModelPackageGroupPolicy",
                            "sagemaker:PutRecord",
                            "sagemaker:QueryLineage",
                            "sagemaker:RegisterDevices",
                            "sagemaker:RenderUiTemplate",
                            "sagemaker:Search",
                            "sagemaker:SendHeartbeat",
                            "sagemaker:SendPipelineExecutionStepFailure",
                            "sagemaker:SendPipelineExecutionStepSuccess",
                            "sagemaker:StartHumanLoop",
                            "sagemaker:StartMonitoringSchedule",
                            "sagemaker:StartNotebookInstance",
                            "sagemaker:StartPipelineExecution",
                            "sagemaker:StopAutoMLJob",
                            "sagemaker:StopCompilationJob",
                            "sagemaker:StopEdgePackagingJob",
                            "sagemaker:StopHumanLoop",
                            "sagemaker:StopHyperParameterTuningJob",
                            "sagemaker:StopInferenceRecommendationsJob",
                            "sagemaker:StopLabelingJob",
                            "sagemaker:StopMonitoringSchedule",
                            "sagemaker:StopNotebookInstance",
                            "sagemaker:StopPipelineExecution",
                            "sagemaker:StopProcessingJob",
                            "sagemaker:StopTrainingJob",
                            "sagemaker:StopTransformJob",
                            "sagemaker:UpdateAction",
                            "sagemaker:UpdateAppImageConfig",
                            "sagemaker:UpdateArtifact",
                            "sagemaker:UpdateCodeRepository",
                            "sagemaker:UpdateContext",
                            "sagemaker:UpdateDeviceFleet",
                            "sagemaker:UpdateDevices",
                            "sagemaker:UpdateDomain",
                            "sagemaker:UpdateEndpoint",
                            "sagemaker:UpdateEndpointWeightsAndCapacities",
                            "sagemaker:UpdateExperiment",
                            "sagemaker:UpdateImage",
                            "sagemaker:UpdateModelPackage",
                            "sagemaker:UpdateMonitoringSchedule",
                            "sagemaker:UpdateNotebookInstance",
                            "sagemaker:UpdateNotebookInstanceLifecycleConfig",
                            "sagemaker:UpdatePipeline",
                            "sagemaker:UpdatePipelineExecution",
                            "sagemaker:UpdateProject",
                            "sagemaker:UpdateTrainingJob",
                            "sagemaker:UpdateTrial",
                            "sagemaker:UpdateTrialComponent",
                            "sagemaker:UpdateUserProfile",
                            "sagemaker:UpdateWorkforce",
                            "sagemaker:UpdateWorkteam"
                        ],
                        "Resource": [
                            "arn:aws:sagemaker:*:*:action/*",
                            "arn:aws:sagemaker:*:*:algorithm/*",
                            "arn:aws:sagemaker:*:*:app-image-config/*",
                            "arn:aws:sagemaker:*:*:artifact/*",
                            "arn:aws:sagemaker:*:*:automl-job/*",
                            "arn:aws:sagemaker:*:*:code-repository/*",
                            "arn:aws:sagemaker:*:*:compilation-job/*",
                            "arn:aws:sagemaker:*:*:context/*",
                            "arn:aws:sagemaker:*:*:data-quality-job-definition/*",
                            "arn:aws:sagemaker:*:*:device-fleet/*/device/*",
                            "arn:aws:sagemaker:*:*:device-fleet/*",
                            "arn:aws:sagemaker:*:*:edge-packaging-job/*",
                            "arn:aws:sagemaker:*:*:endpoint/*",
                            "arn:aws:sagemaker:*:*:endpoint-config/*",
                            "arn:aws:sagemaker:*:*:experiment/*",
                            "arn:aws:sagemaker:*:*:experiment-trial/*",
                            "arn:aws:sagemaker:*:*:experiment-trial-component/*",
                            "arn:aws:sagemaker:*:*:feature-group/*",
                            "arn:aws:sagemaker:*:*:human-loop/*",
                            "arn:aws:sagemaker:*:*:human-task-ui/*",
                            "arn:aws:sagemaker:*:*:hyper-parameter-tuning-job/*",
                            "arn:aws:sagemaker:*:*:image/*",
                            "arn:aws:sagemaker:*:*:image-version/*/*",
                            "arn:aws:sagemaker:*:*:inference-recommendations-job/*",
                            "arn:aws:sagemaker:*:*:labeling-job/*",
                            "arn:aws:sagemaker:*:*:model/*",
                            "arn:aws:sagemaker:*:*:model-bias-job-definition/*",
                            "arn:aws:sagemaker:*:*:model-explainability-job-definition/*",
                            "arn:aws:sagemaker:*:*:model-package/*",
                            "arn:aws:sagemaker:*:*:model-package-group/*",
                            "arn:aws:sagemaker:*:*:model-quality-job-definition/*",
                            "arn:aws:sagemaker:*:*:monitoring-schedule/*",
                            "arn:aws:sagemaker:*:*:notebook-instance/*",
                            "arn:aws:sagemaker:*:*:notebook-instance-lifecycle-config/*",
                            "arn:aws:sagemaker:*:*:pipeline/*",
                            "arn:aws:sagemaker:*:*:pipeline/*/execution/*",
                            "arn:aws:sagemaker:*:*:processing-job/*",
                            "arn:aws:sagemaker:*:*:project/*",
                            "arn:aws:sagemaker:*:*:training-job/*",
                            "arn:aws:sagemaker:*:*:transform-job/*",
                            "arn:aws:sagemaker:*:*:workforce/*",
                            "arn:aws:sagemaker:*:*:workteam/*"
                        ]
                    },
                    {
                        "Sid": "AmazonSageMakerLambdaPassRolePermission",
                        "Effect": "Allow",
                        "Action": [
                            "iam:PassRole"
                        ],
                        "Resource": [
                            "arn:aws:iam::*:role/service-role/AmazonSageMakerServiceCatalogProductsExecutionRole"
                        ]
                    },
                    {
                        "Sid": "AmazonSageMakerLambdaLogPermission",
                        "Effect": "Allow",
                        "Action": [
                            "logs:CreateLogDelivery",
                            "logs:CreateLogGroup",
                            "logs:CreateLogStream",
                            "logs:DeleteLogDelivery",
                            "logs:DescribeLogGroups",
                            "logs:DescribeLogStreams",
                            "logs:DescribeResourcePolicies",
                            "logs:DescribeDestinations",
                            "logs:DescribeExportTasks",
                            "logs:DescribeMetricFilters",
                            "logs:DescribeQueries",
                            "logs:DescribeQueryDefinitions",
                            "logs:DescribeSubscriptionFilters",
                            "logs:GetLogDelivery",
                            "logs:GetLogEvents",
                            "logs:ListLogDeliveries",
                            "logs:PutLogEvents",
                            "logs:PutResourcePolicy",
                            "logs:UpdateLogDelivery"
                        ],
                        "Resource": "arn:aws:logs:*:*:log-group:/aws/lambda/*"
                    },
                    {
                        "Sid": "AmazonSageMakerLambdaCodeBuildPermission",
                        "Effect": "Allow",
                        "Action": [
                            "codebuild:StartBuild",
                            "codebuild:BatchGetBuilds"
                        ],
                        "Resource": "arn:aws:codebuild:*:*:project/sagemaker-*",
                        "Condition": {
                            "StringLike": {
                                "aws:ResourceTag/sagemaker:project-name": "*"
                            }
                        }
                    }
                ]
            },
            "tags": []
        },
        {
            "name": "AmazonSageMakerAdmin-ServiceCatalogProductsServiceRolePolicy",
            "arn": "arn:aws:iam::aws:policy/AmazonSageMakerAdmin-ServiceCatalogProductsServiceRolePolicy",
            "entity": "ANPAZKAPJZG4NAOSKQH4V",
            "version_id": "v9",
            "type": "AWS",
            "attached": true,
            "document": {
                "Version": "2012-10-17",
                "Statement": [
                    {
                        "Sid": "AmazonSageMakerServiceCatalogAPIGatewayPermission",
                        "Effect": "Allow",
                        "Action": [
                            "apigateway:GET",
                            "apigateway:POST",
                            "apigateway:PUT",
                            "apigateway:PATCH",
                            "apigateway:DELETE"
                        ],
                        "Resource": "*",
                        "Condition": {
                            "StringLike": {
                                "aws:ResourceTag/sagemaker:launch-source": "*"
                            }
                        }
                    },
                    {
                        "Sid": "AmazonSageMakerServiceCatalogAPIGatewayPostPermission",
                        "Effect": "Allow",
                        "Action": [
                            "apigateway:POST"
                        ],
                        "Resource": "*",
                        "Condition": {
                            "ForAnyValue:StringLike": {
                                "aws:TagKeys": [
                                    "sagemaker:launch-source"
                                ]
                            }
                        }
                    },
                    {
                        "Sid": "AmazonSageMakerServiceCatalogAPIGatewayPatchPermission",
                        "Effect": "Allow",
                        "Action": [
                            "apigateway:PATCH"
                        ],
                        "Resource": [
                            "arn:aws:apigateway:*::/account"
                        ]
                    },
                    {
                        "Sid": "AmazonSageMakerServiceCatalogCFnMutatePermission",
                        "Effect": "Allow",
                        "Action": [
                            "cloudformation:CreateStack",
                            "cloudformation:UpdateStack",
                            "cloudformation:DeleteStack"
                        ],
                        "Resource": "arn:aws:cloudformation:*:*:stack/SC-*",
                        "Condition": {
                            "ArnLikeIfExists": {
                                "cloudformation:RoleArn": [
                                    "arn:aws:sts::*:assumed-role/AmazonSageMakerServiceCatalog*"
                                ]
                            }
                        }
                    },
                    {
                        "Sid": "AmazonSageMakerServiceCatalogCFnTagPermission",
                        "Effect": "Allow",
                        "Action": [
                            "cloudformation:TagResource",
                            "cloudformation:UntagResource"
                        ],
                        "Resource": "arn:aws:cloudformation:*:*:stack/SC-*",
                        "Condition": {
                            "Null": {
                                "aws:ResourceTag/sagemaker:project-name": "false"
                            }
                        }
                    },
                    {
                        "Sid": "AmazonSageMakerServiceCatalogCFnReadPermission",
                        "Effect": "Allow",
                        "Action": [
                            "cloudformation:DescribeStackEvents",
                            "cloudformation:DescribeStacks"
                        ],
                        "Resource": "arn:aws:cloudformation:*:*:stack/SC-*"
                    },
                    {
                        "Sid": "AmazonSageMakerServiceCatalogCFnTemplatePermission",
                        "Effect": "Allow",
                        "Action": [
                            "cloudformation:GetTemplateSummary",
                            "cloudformation:ValidateTemplate"
                        ],
                        "Resource": "*"
                    },
                    {
                        "Sid": "AmazonSageMakerServiceCatalogCodeBuildPermission",
                        "Effect": "Allow",
                        "Action": [
                            "codebuild:CreateProject",
                            "codebuild:DeleteProject",
                            "codebuild:UpdateProject"
                        ],
                        "Resource": [
                            "arn:aws:codebuild:*:*:project/sagemaker-*"
                        ]
                    },
                    {
                        "Sid": "AmazonSageMakerServiceCatalogCodeCommitPermission",
                        "Effect": "Allow",
                        "Action": [
                            "codecommit:CreateCommit",
                            "codecommit:CreateRepository",
                            "codecommit:DeleteRepository",
                            "codecommit:GetRepository",
                            "codecommit:TagResource"
                        ],
                        "Resource": [
                            "arn:aws:codecommit:*:*:sagemaker-*"
                        ]
                    },
                    {
                        "Sid": "AmazonSageMakerServiceCatalogCodeCommitListPermission",
                        "Effect": "Allow",
                        "Action": [
                            "codecommit:ListRepositories"
                        ],
                        "Resource": "*"
                    },
                    {
                        "Sid": "AmazonSageMakerServiceCatalogCodePipelinePermission",
                        "Effect": "Allow",
                        "Action": [
                            "codepipeline:CreatePipeline",
                            "codepipeline:DeletePipeline",
                            "codepipeline:GetPipeline",
                            "codepipeline:GetPipelineState",
                            "codepipeline:StartPipelineExecution",
                            "codepipeline:TagResource",
                            "codepipeline:UpdatePipeline"
                        ],
                        "Resource": [
                            "arn:aws:codepipeline:*:*:sagemaker-*"
                        ]
                    },
                    {
                        "Sid": "AmazonSageMakerServiceCatalogCIAMUserPermission",
                        "Effect": "Allow",
                        "Action": [
                            "cognito-idp:CreateUserPool",
                            "cognito-idp:TagResource"
                        ],
                        "Resource": "*",
                        "Condition": {
                            "ForAnyValue:StringLike": {
                                "aws:TagKeys": [
                                    "sagemaker:launch-source"
                                ]
                            }
                        }
                    },
                    {
                        "Sid": "AmazonSageMakerServiceCatalogCIAMPermission",
                        "Effect": "Allow",
                        "Action": [
                            "cognito-idp:CreateGroup",
                            "cognito-idp:CreateUserPoolDomain",
                            "cognito-idp:CreateUserPoolClient",
                            "cognito-idp:DeleteGroup",
                            "cognito-idp:DeleteUserPool",
                            "cognito-idp:DeleteUserPoolClient",
                            "cognito-idp:DeleteUserPoolDomain",
                            "cognito-idp:DescribeUserPool",
                            "cognito-idp:DescribeUserPoolClient",
                            "cognito-idp:UpdateUserPool",
                            "cognito-idp:UpdateUserPoolClient"
                        ],
                        "Resource": "*",
                        "Condition": {
                            "StringLike": {
                                "aws:ResourceTag/sagemaker:launch-source": "*"
                            }
                        }
                    },
                    {
                        "Sid": "AmazonSageMakerServiceCatalogECRPermission",
                        "Effect": "Allow",
                        "Action": [
                            "ecr:CreateRepository",
                            "ecr:DeleteRepository",
                            "ecr:TagResource"
                        ],
                        "Resource": [
                            "arn:aws:ecr:*:*:repository/sagemaker-*"
                        ]
                    },
                    {
                        "Sid": "AmazonSageMakerServiceCatalogEventBridgePermission",
                        "Effect": "Allow",
                        "Action": [
                            "events:DescribeRule",
                            "events:DeleteRule",
                            "events:DisableRule",
                            "events:EnableRule",
                            "events:PutRule",
                            "events:PutTargets",
                            "events:RemoveTargets"
                        ],
                        "Resource": [
                            "arn:aws:events:*:*:rule/sagemaker-*"
                        ]
                    },
                    {
                        "Sid": "AmazonSageMakerServiceCatalogFirehosePermission",
                        "Effect": "Allow",
                        "Action": [
                            "firehose:CreateDeliveryStream",
                            "firehose:DeleteDeliveryStream",
                            "firehose:DescribeDeliveryStream",
                            "firehose:StartDeliveryStreamEncryption",
                            "firehose:StopDeliveryStreamEncryption",
                            "firehose:UpdateDestination"
                        ],
                        "Resource": "arn:aws:firehose:*:*:deliverystream/sagemaker-*"
                    },
                    {
                        "Sid": "AmazonSageMakerServiceCatalogGluePermission",
                        "Effect": "Allow",
                        "Action": [
                            "glue:CreateDatabase",
                            "glue:DeleteDatabase"
                        ],
                        "Resource": [
                            "arn:aws:glue:*:*:catalog",
                            "arn:aws:glue:*:*:database/sagemaker-*",
                            "arn:aws:glue:*:*:table/sagemaker-*",
                            "arn:aws:glue:*:*:userDefinedFunction/sagemaker-*"
                        ]
                    },
                    {
                        "Sid": "AmazonSageMakerServiceCatalogGlueClassiferPermission",
                        "Effect": "Allow",
                        "Action": [
                            "glue:CreateClassifier",
                            "glue:DeleteClassifier",
                            "glue:DeleteCrawler",
                            "glue:DeleteJob",
                            "glue:DeleteTrigger",
                            "glue:DeleteWorkflow",
                            "glue:StopCrawler"
                        ],
                        "Resource": [
                            "*"
                        ]
                    },
                    {
                        "Sid": "AmazonSageMakerServiceCatalogGlueWorkflowPermission",
                        "Effect": "Allow",
                        "Action": [
                            "glue:CreateWorkflow"
                        ],
                        "Resource": [
                            "arn:aws:glue:*:*:workflow/sagemaker-*"
                        ]
                    },
                    {
                        "Sid": "AmazonSageMakerServiceCatalogGlueJobPermission",
                        "Effect": "Allow",
                        "Action": [
                            "glue:CreateJob"
                        ],
                        "Resource": [
                            "arn:aws:glue:*:*:job/sagemaker-*"
                        ]
                    },
                    {
                        "Sid": "AmazonSageMakerServiceCatalogGlueCrawlerPermission",
                        "Effect": "Allow",
                        "Action": [
                            "glue:CreateCrawler",
                            "glue:GetCrawler"
                        ],
                        "Resource": [
                            "arn:aws:glue:*:*:crawler/sagemaker-*"
                        ]
                    },
                    {
                        "Sid": "AmazonSageMakerServiceCatalogGlueTriggerPermission",
                        "Effect": "Allow",
                        "Action": [
                            "glue:CreateTrigger",
                            "glue:GetTrigger"
                        ],
                        "Resource": [
                            "arn:aws:glue:*:*:trigger/sagemaker-*"
                        ]
                    },
                    {
                        "Sid": "AmazonSageMakerServiceCatalogPassRolePermission",
                        "Effect": "Allow",
                        "Action": [
                            "iam:PassRole"
                        ],
                        "Resource": [
                            "arn:aws:iam::*:role/service-role/AmazonSageMakerServiceCatalog*"
                        ]
                    },
                    {
                        "Sid": "AmazonSageMakerServiceCatalogLambdaPermission",
                        "Effect": "Allow",
                        "Action": [
                            "lambda:AddPermission",
                            "lambda:CreateFunction",
                            "lambda:DeleteFunction",
                            "lambda:GetFunction",
                            "lambda:GetFunctionConfiguration",
                            "lambda:InvokeFunction",
                            "lambda:RemovePermission"
                        ],
                        "Resource": [
                            "arn:aws:lambda:*:*:function:sagemaker-*"
                        ]
                    },
                    {
                        "Sid": "AmazonSageMakerServiceCatalogLambdaTagPermission",
                        "Effect": "Allow",
                        "Action": "lambda:TagResource",
                        "Resource": [
                            "arn:aws:lambda:*:*:function:sagemaker-*"
                        ],
                        "Condition": {
                            "ForAllValues:StringLike": {
                                "aws:TagKeys": [
                                    "sagemaker:*"
                                ]
                            }
                        }
                    },
                    {
                        "Sid": "AmazonSageMakerServiceCatalogLogGroupPermission",
                        "Effect": "Allow",
                        "Action": [
                            "logs:CreateLogGroup",
                            "logs:CreateLogStream",
                            "logs:DeleteLogGroup",
                            "logs:DeleteLogStream",
                            "logs:DescribeLogGroups",
                            "logs:DescribeLogStreams",
                            "logs:PutRetentionPolicy"
                        ],
                        "Resource": [
                            "arn:aws:logs:*:*:log-group:/aws/apigateway/AccessLogs/*",
                            "arn:aws:logs:*:*:log-group::log-stream:*"
                        ]
                    },
                    {
                        "Sid": "AmazonSageMakerServiceCatalogS3ReadPermission",
                        "Effect": "Allow",
                        "Action": "s3:GetObject",
                        "Resource": "*",
                        "Condition": {
                            "StringEquals": {
                                "s3:ExistingObjectTag/servicecatalog:provisioning": "true"
                            }
                        }
                    },
                    {
                        "Sid": "AmazonSageMakerServiceCatalogS3ReadSagemakerResourcePermission",
                        "Effect": "Allow",
                        "Action": "s3:GetObject",
                        "Resource": [
                            "arn:aws:s3:::sagemaker-*"
                        ]
                    },
                    {
                        "Sid": "AmazonSageMakerServiceCatalogS3MutatePermission",
                        "Effect": "Allow",
                        "Action": [
                            "s3:CreateBucket",
                            "s3:DeleteBucket",
                            "s3:DeleteBucketPolicy",
                            "s3:GetBucketPolicy",
                            "s3:PutBucketAcl",
                            "s3:PutBucketNotification",
                            "s3:PutBucketPolicy",
                            "s3:PutBucketPublicAccessBlock",
                            "s3:PutBucketLogging",
                            "s3:PutEncryptionConfiguration",
                            "s3:PutBucketCORS",
                            "s3:PutBucketTagging",
                            "s3:PutObjectTagging"
                        ],
                        "Resource": "arn:aws:s3:::sagemaker-*"
                    },
                    {
                        "Sid": "AmazonSageMakerServiceCatalogSageMakerPermission",
                        "Effect": "Allow",
                        "Action": [
                            "sagemaker:CreateEndpoint",
                            "sagemaker:CreateEndpointConfig",
                            "sagemaker:CreateModel",
                            "sagemaker:CreateWorkteam",
                            "sagemaker:DeleteEndpoint",
                            "sagemaker:DeleteEndpointConfig",
                            "sagemaker:DeleteModel",
                            "sagemaker:DeleteWorkteam",
                            "sagemaker:DescribeModel",
                            "sagemaker:DescribeEndpointConfig",
                            "sagemaker:DescribeEndpoint",
                            "sagemaker:DescribeWorkteam",
                            "sagemaker:CreateCodeRepository",
                            "sagemaker:DescribeCodeRepository",
                            "sagemaker:UpdateCodeRepository",
                            "sagemaker:DeleteCodeRepository"
                        ],
                        "Resource": [
                            "arn:aws:sagemaker:*:*:*"
                        ]
                    },
                    {
                        "Sid": "AmazonSageMakerServiceCatalogSageMakerTagPermission",
                        "Effect": "Allow",
                        "Action": [
                            "sagemaker:AddTags"
                        ],
                        "Resource": [
                            "arn:aws:sagemaker:*:*:endpoint/*",
                            "arn:aws:sagemaker:*:*:endpoint-config/*",
                            "arn:aws:sagemaker:*:*:model/*",
                            "arn:aws:sagemaker:*:*:pipeline/*",
                            "arn:aws:sagemaker:*:*:project/*",
                            "arn:aws:sagemaker:*:*:model-package/*"
                        ],
                        "Condition": {
                            "ForAllValues:StringLike": {
                                "aws:TagKeys": [
                                    "sagemaker:*"
                                ]
                            }
                        }
                    },
                    {
                        "Sid": "AmazonSageMakerServiceCatalogSageMakerImagePermission",
                        "Effect": "Allow",
                        "Action": [
                            "sagemaker:CreateImage",
                            "sagemaker:DeleteImage",
                            "sagemaker:DescribeImage",
                            "sagemaker:UpdateImage",
                            "sagemaker:ListTags"
                        ],
                        "Resource": [
                            "arn:aws:sagemaker:*:*:image/*"
                        ]
                    },
                    {
                        "Sid": "AmazonSageMakerServiceCatalogStepFunctionPermission",
                        "Effect": "Allow",
                        "Action": [
                            "states:CreateStateMachine",
                            "states:DeleteStateMachine",
                            "states:UpdateStateMachine"
                        ],
                        "Resource": [
                            "arn:aws:states:*:*:stateMachine:sagemaker-*"
                        ]
                    },
                    {
                        "Sid": "AmazonSageMakerServiceCatalogCodeStarPermission",
                        "Effect": "Allow",
                        "Action": "codestar-connections:PassConnection",
                        "Resource": "arn:aws:codestar-connections:*:*:connection/*",
                        "Condition": {
                            "StringEquals": {
                                "codestar-connections:PassedToService": "codepipeline.amazonaws.com"
                            }
                        }
                    },
                    {
                        "Sid": "AmazonSageMakerServiceCatalogCodeConnectionPermission",
                        "Effect": "Allow",
                        "Action": "codeconnections:PassConnection",
                        "Resource": "arn:aws:codeconnections:*:*:connection/*",
                        "Condition": {
                            "StringEquals": {
                                "codeconnections:PassedToService": "codepipeline.amazonaws.com"
                            }
                        }
                    }
                ]
            },
            "tags": []
        },
        {
            "name": "AWSBillingReadOnlyAccess",
            "arn": "arn:aws:iam::aws:policy/AWSBillingReadOnlyAccess",
            "entity": "ANPAZKAPJZG4LJ3OSZ5SX",
            "version_id": "v7",
            "type": "AWS",
            "attached": true,
            "document": {
                "Version": "2012-10-17",
                "Statement": [
                    {
                        "Sid": "VisualEditor0",
                        "Effect": "Allow",
                        "Action": [
                            "account:GetAccountInformation",
                            "aws-portal:ViewBilling",
                            "billing:GetBillingData",
                            "billing:GetBillingDetails",
                            "billing:GetBillingNotifications",
                            "billing:GetBillingPreferences",
                            "billing:GetCredits",
                            "billing:GetContractInformation",
                            "billing:GetIAMAccessPreference",
                            "billing:GetSellerOfRecord",
                            "billing:ListBillingViews",
                            "budgets:ViewBudget",
                            "budgets:DescribeBudgetActionsForBudget",
                            "budgets:DescribeBudgetAction",
                            "budgets:DescribeBudgetActionsForAccount",
                            "budgets:DescribeBudgetActionHistories",
                            "ce:DescribeCostCategoryDefinition",
                            "ce:GetCostAndUsage",
                            "ce:ListCostCategoryDefinitions",
                            "ce:ListTagsForResource",
                            "ce:ListCostAllocationTags",
                            "ce:ListCostAllocationTagBackfillHistory",
                            "ce:GetTags",
                            "ce:GetDimensionValues",
                            "consolidatedbilling:ListLinkedAccounts",
                            "consolidatedbilling:GetAccountBillingRole",
                            "cur:GetClassicReport",
                            "cur:GetClassicReportPreferences",
                            "cur:GetUsageReport",
                            "cur:DescribeReportDefinitions",
                            "freetier:GetFreeTierAlertPreference",
                            "freetier:GetFreeTierUsage",
                            "invoicing:GetInvoiceEmailDeliveryPreferences",
                            "invoicing:GetInvoicePDF",
                            "invoicing:ListInvoiceSummaries",
                            "payments:GetPaymentInstrument",
                            "payments:GetPaymentStatus",
                            "payments:ListPaymentPreferences",
                            "payments:ListTagsForResource",
                            "payments:ListPaymentInstruments",
                            "purchase-orders:GetPurchaseOrder",
                            "purchase-orders:ViewPurchaseOrders",
                            "purchase-orders:ListPurchaseOrderInvoices",
                            "purchase-orders:ListPurchaseOrders",
                            "purchase-orders:ListTagsForResource",
                            "sustainability:GetCarbonFootprintSummary",
                            "tax:GetTaxRegistrationDocument",
                            "tax:GetTaxInheritance",
                            "tax:ListTaxRegistrations"
                        ],
                        "Resource": "*"
                    }
                ]
            },
            "tags": []
        },
        {
            "name": "AmazonSageMakerServiceCatalogProductsGlueServiceRolePolicy",
            "arn": "arn:aws:iam::aws:policy/service-role/AmazonSageMakerServiceCatalogProductsGlueServiceRolePolicy",
            "entity": "ANPAZKAPJZG4DOYZH7RTZ",
            "version_id": "v2",
            "type": "AWS",
            "attached": true,
            "document": {
                "Version": "2012-10-17",
                "Statement": [
                    {
                        "Effect": "Allow",
                        "Action": [
                            "glue:BatchCreatePartition",
                            "glue:BatchDeletePartition",
                            "glue:BatchDeleteTable",
                            "glue:BatchDeleteTableVersion",
                            "glue:BatchGetPartition",
                            "glue:CreateDatabase",
                            "glue:CreatePartition",
                            "glue:CreateTable",
                            "glue:DeletePartition",
                            "glue:DeleteTable",
                            "glue:DeleteTableVersion",
                            "glue:GetDatabase",
                            "glue:GetPartition",
                            "glue:GetPartitions",
                            "glue:GetTable",
                            "glue:GetTables",
                            "glue:GetTableVersion",
                            "glue:GetTableVersions",
                            "glue:SearchTables",
                            "glue:UpdatePartition",
                            "glue:UpdateTable",
                            "glue:GetUserDefinedFunctions"
                        ],
                        "Resource": [
                            "arn:aws:glue:*:*:catalog",
                            "arn:aws:glue:*:*:database/default",
                            "arn:aws:glue:*:*:database/global_temp",
                            "arn:aws:glue:*:*:database/sagemaker-*",
                            "arn:aws:glue:*:*:table/sagemaker-*",
                            "arn:aws:glue:*:*:tableVersion/sagemaker-*"
                        ]
                    },
                    {
                        "Effect": "Allow",
                        "Action": [
                            "s3:CreateBucket",
                            "s3:DeleteBucket",
                            "s3:GetBucketAcl",
                            "s3:GetBucketCors",
                            "s3:GetBucketLocation",
                            "s3:ListAllMyBuckets",
                            "s3:ListBucket",
                            "s3:ListBucketMultipartUploads",
                            "s3:PutBucketCors"
                        ],
                        "Resource": [
                            "arn:aws:s3:::aws-glue-*",
                            "arn:aws:s3:::sagemaker-*"
                        ]
                    },
                    {
                        "Effect": "Allow",
                        "Action": [
                            "s3:AbortMultipartUpload",
                            "s3:DeleteObject",
                            "s3:GetObject",
                            "s3:GetObjectVersion",
                            "s3:PutObject"
                        ],
                        "Resource": [
                            "arn:aws:s3:::aws-glue-*",
                            "arn:aws:s3:::sagemaker-*"
                        ]
                    },
                    {
                        "Effect": "Allow",
                        "Action": [
                            "logs:CreateLogDelivery",
                            "logs:CreateLogGroup",
                            "logs:CreateLogStream",
                            "logs:DeleteLogDelivery",
                            "logs:Describe*",
                            "logs:GetLogDelivery",
                            "logs:GetLogEvents",
                            "logs:ListLogDeliveries",
                            "logs:PutLogEvents",
                            "logs:PutResourcePolicy",
                            "logs:UpdateLogDelivery"
                        ],
                        "Resource": "arn:aws:logs:*:*:log-group:/aws/glue/*"
                    }
                ]
            },
            "tags": []
        },
        {
            "name": "AWSCostAndUsageReportAutomationPolicy",
            "arn": "arn:aws:iam::aws:policy/service-role/AWSCostAndUsageReportAutomationPolicy",
            "entity": "ANPAZKAPJZG4KVW6KKXOP",
            "version_id": "v1",
            "type": "AWS",
            "attached": true,
            "document": {
                "Version": "2012-10-17",
                "Statement": [
                    {
                        "Effect": "Allow",
                        "Action": [
                            "organizations:DescribeOrganization"
                        ],
                        "Resource": "*"
                    },
                    {
                        "Effect": "Allow",
                        "Action": [
                            "s3:GetBucketTagging",
                            "s3:PutBucketTagging",
                            "s3:GetBucketPolicy",
                            "s3:PutBucketPolicy",
                            "s3:ListBucket",
                            "s3:CreateBucket"
                        ],
                        "Resource": "arn:aws:s3:::aws-map-cur-bucket-*"
                    },
                    {
                        "Effect": "Allow",
                        "Action": [
                            "cur:PutReportDefinition",
                            "cur:DeleteReportDefinition",
                            "cur:DescribeReportDefinitions"
                        ],
                        "Resource": "arn:aws:cur:*:*:definition/map-migrated-report"
                    },
                    {
                        "Effect": "Allow",
                        "Action": "cur:DescribeReportDefinitions",
                        "Resource": "*"
                    }
                ]
            },
            "tags": []
        },
        {
            "name": "AmazonDevOpsGuruServiceRolePolicy",
            "arn": "arn:aws:iam::aws:policy/aws-service-role/AmazonDevOpsGuruServiceRolePolicy",
            "entity": "ANPAZKAPJZG4LOGPH224B",
            "version_id": "v9",
            "type": "AWS",
            "attached": true,
            "document": {
                "Version": "2012-10-17",
                "Statement": [
                    {
                        "Effect": "Allow",
                        "Action": [
                            "autoscaling:DescribeAutoScalingGroups",
                            "cloudtrail:LookupEvents",
                            "cloudwatch:GetMetricData",
                            "cloudwatch:ListMetrics",
                            "cloudwatch:DescribeAnomalyDetectors",
                            "cloudwatch:DescribeAlarms",
                            "cloudwatch:ListDashboards",
                            "cloudwatch:GetDashboard",
                            "cloudformation:GetTemplate",
                            "cloudformation:ListStacks",
                            "cloudformation:ListStackResources",
                            "cloudformation:DescribeStacks",
                            "cloudformation:ListImports",
                            "codedeploy:BatchGetDeployments",
                            "codedeploy:GetDeploymentGroup",
                            "codedeploy:ListDeployments",
                            "config:DescribeConfigurationRecorderStatus",
                            "config:GetResourceConfigHistory",
                            "events:ListRuleNamesByTarget",
                            "xray:GetServiceGraph",
                            "organizations:ListRoots",
                            "organizations:ListChildren",
                            "organizations:ListDelegatedAdministrators",
                            "pi:GetResourceMetrics",
                            "tag:GetResources",
                            "lambda:GetFunction",
                            "lambda:GetFunctionConcurrency",
                            "lambda:GetAccountSettings",
                            "lambda:ListProvisionedConcurrencyConfigs",
                            "lambda:ListAliases",
                            "lambda:ListEventSourceMappings",
                            "lambda:GetPolicy",
                            "ec2:DescribeSubnets",
                            "application-autoscaling:DescribeScalableTargets",
                            "application-autoscaling:DescribeScalingPolicies",
                            "sqs:GetQueueAttributes",
                            "kinesis:DescribeStream",
                            "kinesis:DescribeLimits",
                            "dynamodb:DescribeTable",
                            "dynamodb:DescribeLimits",
                            "dynamodb:DescribeContinuousBackups",
                            "dynamodb:DescribeStream",
                            "dynamodb:ListStreams",
                            "elasticloadbalancing:DescribeLoadBalancers",
                            "elasticloadbalancing:DescribeLoadBalancerAttributes",
                            "rds:DescribeDBInstances",
                            "rds:DescribeDBClusters",
                            "rds:DescribeOptionGroups",
                            "rds:DescribeDBClusterParameters",
                            "rds:DescribeDBInstanceAutomatedBackups",
                            "rds:DescribeAccountAttributes",
                            "logs:DescribeLogGroups",
                            "logs:DescribeLogStreams",
                            "s3:GetBucketNotification",
                            "s3:GetBucketPolicy",
                            "s3:GetBucketPublicAccessBlock",
                            "s3:GetBucketTagging",
                            "s3:GetBucketWebsite",
                            "s3:GetIntelligentTieringConfiguration",
                            "s3:GetLifecycleConfiguration",
                            "s3:GetReplicationConfiguration",
                            "s3:ListAllMyBuckets",
                            "s3:ListStorageLensConfigurations",
                            "servicequotas:GetServiceQuota",
                            "servicequotas:ListRequestedServiceQuotaChangeHistory",
                            "servicequotas:ListServiceQuotas"
                        ],
                        "Resource": "*"
                    },
                    {
                        "Sid": "AllowPutTargetsOnASpecificRule",
                        "Effect": "Allow",
                        "Action": [
                            "events:PutTargets",
                            "events:PutRule"
                        ],
                        "Resource": "arn:aws:events:*:*:rule/DevOps-Guru-managed-*"
                    },
                    {
                        "Sid": "AllowCreateOpsItem",
                        "Effect": "Allow",
                        "Action": [
                            "ssm:CreateOpsItem"
                        ],
                        "Resource": "*"
                    },
                    {
                        "Sid": "AllowAddTagsToOpsItem",
                        "Effect": "Allow",
                        "Action": [
                            "ssm:AddTagsToResource"
                        ],
                        "Resource": "arn:aws:ssm:*:*:opsitem/*"
                    },
                    {
                        "Sid": "AllowAccessOpsItem",
                        "Effect": "Allow",
                        "Action": [
                            "ssm:GetOpsItem",
                            "ssm:UpdateOpsItem"
                        ],
                        "Resource": "*",
                        "Condition": {
                            "StringEquals": {
                                "aws:ResourceTag/DevOps-GuruInsightSsmOpsItemRelated": "true"
                            }
                        }
                    },
                    {
                        "Sid": "AllowCreateManagedRule",
                        "Effect": "Allow",
                        "Action": "events:PutRule",
                        "Resource": "arn:aws:events:*:*:rule/DevOpsGuruManagedRule*"
                    },
                    {
                        "Sid": "AllowAccessManagedRule",
                        "Effect": "Allow",
                        "Action": [
                            "events:DescribeRule",
                            "events:ListTargetsByRule"
                        ],
                        "Resource": "arn:aws:events:*:*:rule/DevOpsGuruManagedRule*"
                    },
                    {
                        "Sid": "AllowOtherOperationsOnManagedRule",
                        "Effect": "Allow",
                        "Action": [
                            "events:DeleteRule",
                            "events:EnableRule",
                            "events:DisableRule",
                            "events:PutTargets",
                            "events:RemoveTargets"
                        ],
                        "Resource": "arn:aws:events:*:*:rule/DevOpsGuruManagedRule*",
                        "Condition": {
                            "StringEquals": {
                                "events:ManagedBy": "devops-guru.amazonaws.com"
                            }
                        }
                    },
                    {
                        "Sid": "AllowTagBasedFilterLogEvents",
                        "Effect": "Allow",
                        "Action": [
                            "logs:FilterLogEvents"
                        ],
                        "Resource": "arn:aws:logs:*:*:log-group:*",
                        "Condition": {
                            "StringEquals": {
                                "aws:ResourceTag/DevOps-Guru-Analysis": "true"
                            }
                        }
                    },
                    {
                        "Sid": "AllowAPIGatewayGetIntegrations",
                        "Effect": "Allow",
                        "Action": "apigateway:GET",
                        "Resource": [
                            "arn:aws:apigateway:*::/restapis/??????????",
                            "arn:aws:apigateway:*::/restapis/*/resources",
                            "arn:aws:apigateway:*::/restapis/*/resources/*/methods/*/integration"
                        ]
                    }
                ]
            },
            "tags": []
        },
        {
            "name": "AmazonSageMakerCanvasBedrockAccess",
            "arn": "arn:aws:iam::aws:policy/AmazonSageMakerCanvasBedrockAccess",
            "entity": "ANPAZKAPJZG4BVRVHW7NT",
            "version_id": "v1",
            "type": "AWS",
            "attached": true,
            "document": {
                "Version": "2012-10-17",
                "Statement": [
                    {
                        "Sid": "S3CanvasAccess",
                        "Effect": "Allow",
                        "Action": [
                            "s3:GetObject",
                            "s3:PutObject"
                        ],
                        "Resource": [
                            "arn:aws:s3:::sagemaker-*/Canvas",
                            "arn:aws:s3:::sagemaker-*/Canvas/*"
                        ]
                    },
                    {
                        "Sid": "S3BucketAccess",
                        "Effect": "Allow",
                        "Action": [
                            "s3:ListBucket"
                        ],
                        "Resource": [
                            "arn:aws:s3:::sagemaker-*"
                        ]
                    }
                ]
            },
            "tags": []
        },
        {
            "name": "AmazonSageMakerServiceCatalogProductsCodeBuildServiceRolePolicy",
            "arn": "arn:aws:iam::aws:policy/AmazonSageMakerServiceCatalogProductsCodeBuildServiceRolePolicy",
            "entity": "ANPAZKAPJZG4ILK6GZTSE",
            "version_id": "v2",
            "type": "AWS",
            "attached": true,
            "document": {
                "Version": "2012-10-17",
                "Statement": [
                    {
                        "Sid": "AmazonSageMakerCodeBuildCodeCommitPermission",
                        "Effect": "Allow",
                        "Action": [
                            "codecommit:CancelUploadArchive",
                            "codecommit:GetBranch",
                            "codecommit:GetCommit",
                            "codecommit:GetUploadArchiveStatus",
                            "codecommit:UploadArchive"
                        ],
                        "Resource": "arn:aws:codecommit:*:*:sagemaker-*"
                    },
                    {
                        "Sid": "AmazonSageMakerCodeBuildECRReadPermission",
                        "Effect": "Allow",
                        "Action": [
                            "ecr:BatchCheckLayerAvailability",
                            "ecr:BatchGetImage",
                            "ecr:DescribeImageScanFindings",
                            "ecr:DescribeRegistry",
                            "ecr:DescribeImageReplicationStatus",
                            "ecr:DescribeRepositories",
                            "ecr:DescribeImageReplicationStatus",
                            "ecr:GetAuthorizationToken",
                            "ecr:GetDownloadUrlForLayer"
                        ],
                        "Resource": [
                            "*"
                        ]
                    },
                    {
                        "Sid": "AmazonSageMakerCodeBuildECRWritePermission",
                        "Effect": "Allow",
                        "Action": [
                            "ecr:CompleteLayerUpload",
                            "ecr:CreateRepository",
                            "ecr:InitiateLayerUpload",
                            "ecr:PutImage",
                            "ecr:UploadLayerPart"
                        ],
                        "Resource": [
                            "arn:aws:ecr:*:*:repository/sagemaker-*"
                        ]
                    },
                    {
                        "Sid": "AmazonSageMakerCodeBuildPassRoletPermission",
                        "Effect": "Allow",
                        "Action": [
                            "iam:PassRole"
                        ],
                        "Resource": [
                            "arn:aws:iam::*:role/service-role/AmazonSageMakerServiceCatalogProductsEventsRole",
                            "arn:aws:iam::*:role/service-role/AmazonSageMakerServiceCatalogProductsCodePipelineRole",
                            "arn:aws:iam::*:role/service-role/AmazonSageMakerServiceCatalogProductsCloudformationRole",
                            "arn:aws:iam::*:role/service-role/AmazonSageMakerServiceCatalogProductsCodeBuildRole",
                            "arn:aws:iam::*:role/service-role/AmazonSageMakerServiceCatalogProductsExecutionRole"
                        ],
                        "Condition": {
                            "StringEquals": {
                                "iam:PassedToService": [
                                    "events.amazonaws.com",
                                    "codepipeline.amazonaws.com",
                                    "cloudformation.amazonaws.com",
                                    "codebuild.amazonaws.com",
                                    "sagemaker.amazonaws.com"
                                ]
                            }
                        }
                    },
                    {
                        "Sid": "AmazonSageMakerCodeBuildLogPermission",
                        "Effect": "Allow",
                        "Action": [
                            "logs:CreateLogDelivery",
                            "logs:CreateLogGroup",
                            "logs:CreateLogStream",
                            "logs:DeleteLogDelivery",
                            "logs:DescribeLogGroups",
                            "logs:DescribeLogStreams",
                            "logs:DescribeResourcePolicies",
                            "logs:DescribeDestinations",
                            "logs:DescribeExportTasks",
                            "logs:DescribeMetricFilters",
                            "logs:DescribeQueries",
                            "logs:DescribeQueryDefinitions",
                            "logs:DescribeSubscriptionFilters",
                            "logs:GetLogDelivery",
                            "logs:GetLogEvents",
                            "logs:ListLogDeliveries",
                            "logs:PutLogEvents",
                            "logs:PutResourcePolicy",
                            "logs:UpdateLogDelivery"
                        ],
                        "Resource": "arn:aws:logs:*:*:log-group:/aws/codebuild/*"
                    },
                    {
                        "Sid": "AmazonSageMakerCodeBuildS3Permission",
                        "Effect": "Allow",
                        "Action": [
                            "s3:CreateBucket",
                            "s3:DeleteBucket",
                            "s3:GetBucketAcl",
                            "s3:GetBucketCors",
                            "s3:GetBucketLocation",
                            "s3:ListAllMyBuckets",
                            "s3:ListBucket",
                            "s3:ListBucketMultipartUploads",
                            "s3:PutBucketCors",
                            "s3:AbortMultipartUpload",
                            "s3:DeleteObject",
                            "s3:GetObject",
                            "s3:GetObjectVersion",
                            "s3:PutObject"
                        ],
                        "Resource": [
                            "arn:aws:s3:::aws-glue-*",
                            "arn:aws:s3:::sagemaker-*"
                        ]
                    },
                    {
                        "Sid": "AmazonSageMakerCodeBuildSageMakerPermission",
                        "Effect": "Allow",
                        "Action": [
                            "sagemaker:AddAssociation",
                            "sagemaker:AddTags",
                            "sagemaker:AssociateTrialComponent",
                            "sagemaker:BatchDescribeModelPackage",
                            "sagemaker:BatchGetMetrics",
                            "sagemaker:BatchGetRecord",
                            "sagemaker:BatchPutMetrics",
                            "sagemaker:CreateAction",
                            "sagemaker:CreateAlgorithm",
                            "sagemaker:CreateApp",
                            "sagemaker:CreateAppImageConfig",
                            "sagemaker:CreateArtifact",
                            "sagemaker:CreateAutoMLJob",
                            "sagemaker:CreateCodeRepository",
                            "sagemaker:CreateCompilationJob",
                            "sagemaker:CreateContext",
                            "sagemaker:CreateDataQualityJobDefinition",
                            "sagemaker:CreateDeviceFleet",
                            "sagemaker:CreateDomain",
                            "sagemaker:CreateEdgePackagingJob",
                            "sagemaker:CreateEndpoint",
                            "sagemaker:CreateEndpointConfig",
                            "sagemaker:CreateExperiment",
                            "sagemaker:CreateFeatureGroup",
                            "sagemaker:CreateFlowDefinition",
                            "sagemaker:CreateHumanTaskUi",
                            "sagemaker:CreateHyperParameterTuningJob",
                            "sagemaker:CreateImage",
                            "sagemaker:CreateImageVersion",
                            "sagemaker:CreateInferenceRecommendationsJob",
                            "sagemaker:CreateLabelingJob",
                            "sagemaker:CreateLineageGroupPolicy",
                            "sagemaker:CreateModel",
                            "sagemaker:CreateModelBiasJobDefinition",
                            "sagemaker:CreateModelExplainabilityJobDefinition",
                            "sagemaker:CreateModelPackage",
                            "sagemaker:CreateModelPackageGroup",
                            "sagemaker:CreateModelQualityJobDefinition",
                            "sagemaker:CreateMonitoringSchedule",
                            "sagemaker:CreateNotebookInstance",
                            "sagemaker:CreateNotebookInstanceLifecycleConfig",
                            "sagemaker:CreatePipeline",
                            "sagemaker:CreatePresignedDomainUrl",
                            "sagemaker:CreatePresignedNotebookInstanceUrl",
                            "sagemaker:CreateProcessingJob",
                            "sagemaker:CreateProject",
                            "sagemaker:CreateTrainingJob",
                            "sagemaker:CreateTransformJob",
                            "sagemaker:CreateTrial",
                            "sagemaker:CreateTrialComponent",
                            "sagemaker:CreateUserProfile",
                            "sagemaker:CreateWorkforce",
                            "sagemaker:CreateWorkteam",
                            "sagemaker:DeleteAction",
                            "sagemaker:DeleteAlgorithm",
                            "sagemaker:DeleteApp",
                            "sagemaker:DeleteAppImageConfig",
                            "sagemaker:DeleteArtifact",
                            "sagemaker:DeleteAssociation",
                            "sagemaker:DeleteCodeRepository",
                            "sagemaker:DeleteContext",
                            "sagemaker:DeleteDataQualityJobDefinition",
                            "sagemaker:DeleteDeviceFleet",
                            "sagemaker:DeleteDomain",
                            "sagemaker:DeleteEndpoint",
                            "sagemaker:DeleteEndpointConfig",
                            "sagemaker:DeleteExperiment",
                            "sagemaker:DeleteFeatureGroup",
                            "sagemaker:DeleteFlowDefinition",
                            "sagemaker:DeleteHumanLoop",
                            "sagemaker:DeleteHumanTaskUi",
                            "sagemaker:DeleteImage",
                            "sagemaker:DeleteImageVersion",
                            "sagemaker:DeleteLineageGroupPolicy",
                            "sagemaker:DeleteModel",
                            "sagemaker:DeleteModelBiasJobDefinition",
                            "sagemaker:DeleteModelExplainabilityJobDefinition",
                            "sagemaker:DeleteModelPackage",
                            "sagemaker:DeleteModelPackageGroup",
                            "sagemaker:DeleteModelPackageGroupPolicy",
                            "sagemaker:DeleteModelQualityJobDefinition",
                            "sagemaker:DeleteMonitoringSchedule",
                            "sagemaker:DeleteNotebookInstance",
                            "sagemaker:DeleteNotebookInstanceLifecycleConfig",
                            "sagemaker:DeletePipeline",
                            "sagemaker:DeleteProject",
                            "sagemaker:DeleteRecord",
                            "sagemaker:DeleteTags",
                            "sagemaker:DeleteTrial",
                            "sagemaker:DeleteTrialComponent",
                            "sagemaker:DeleteUserProfile",
                            "sagemaker:DeleteWorkforce",
                            "sagemaker:DeleteWorkteam",
                            "sagemaker:DeregisterDevices",
                            "sagemaker:DescribeAction",
                            "sagemaker:DescribeAlgorithm",
                            "sagemaker:DescribeApp",
                            "sagemaker:DescribeAppImageConfig",
                            "sagemaker:DescribeArtifact",
                            "sagemaker:DescribeAutoMLJob",
                            "sagemaker:DescribeCodeRepository",
                            "sagemaker:DescribeCompilationJob",
                            "sagemaker:DescribeContext",
                            "sagemaker:DescribeDataQualityJobDefinition",
                            "sagemaker:DescribeDevice",
                            "sagemaker:DescribeDeviceFleet",
                            "sagemaker:DescribeDomain",
                            "sagemaker:DescribeEdgePackagingJob",
                            "sagemaker:DescribeEndpoint",
                            "sagemaker:DescribeEndpointConfig",
                            "sagemaker:DescribeExperiment",
                            "sagemaker:DescribeFeatureGroup",
                            "sagemaker:DescribeFlowDefinition",
                            "sagemaker:DescribeHumanLoop",
                            "sagemaker:DescribeHumanTaskUi",
                            "sagemaker:DescribeHyperParameterTuningJob",
                            "sagemaker:DescribeImage",
                            "sagemaker:DescribeImageVersion",
                            "sagemaker:DescribeInferenceRecommendationsJob",
                            "sagemaker:DescribeLabelingJob",
                            "sagemaker:DescribeLineageGroup",
                            "sagemaker:DescribeModel",
                            "sagemaker:DescribeModelBiasJobDefinition",
                            "sagemaker:DescribeModelExplainabilityJobDefinition",
                            "sagemaker:DescribeModelPackage",
                            "sagemaker:DescribeModelPackageGroup",
                            "sagemaker:DescribeModelQualityJobDefinition",
                            "sagemaker:DescribeMonitoringSchedule",
                            "sagemaker:DescribeNotebookInstance",
                            "sagemaker:DescribeNotebookInstanceLifecycleConfig",
                            "sagemaker:DescribePipeline",
                            "sagemaker:DescribePipelineDefinitionForExecution",
                            "sagemaker:DescribePipelineExecution",
                            "sagemaker:DescribeProcessingJob",
                            "sagemaker:DescribeProject",
                            "sagemaker:DescribeSubscribedWorkteam",
                            "sagemaker:DescribeTrainingJob",
                            "sagemaker:DescribeTransformJob",
                            "sagemaker:DescribeTrial",
                            "sagemaker:DescribeTrialComponent",
                            "sagemaker:DescribeUserProfile",
                            "sagemaker:DescribeWorkforce",
                            "sagemaker:DescribeWorkteam",
                            "sagemaker:DisableSagemakerServicecatalogPortfolio",
                            "sagemaker:DisassociateTrialComponent",
                            "sagemaker:EnableSagemakerServicecatalogPortfolio",
                            "sagemaker:GetDeviceFleetReport",
                            "sagemaker:GetDeviceRegistration",
                            "sagemaker:GetLineageGroupPolicy",
                            "sagemaker:GetModelPackageGroupPolicy",
                            "sagemaker:GetRecord",
                            "sagemaker:GetSagemakerServicecatalogPortfolioStatus",
                            "sagemaker:GetSearchSuggestions",
                            "sagemaker:InvokeEndpoint",
                            "sagemaker:InvokeEndpointAsync",
                            "sagemaker:ListActions",
                            "sagemaker:ListAlgorithms",
                            "sagemaker:ListAppImageConfigs",
                            "sagemaker:ListApps",
                            "sagemaker:ListArtifacts",
                            "sagemaker:ListAssociations",
                            "sagemaker:ListAutoMLJobs",
                            "sagemaker:ListCandidatesForAutoMLJob",
                            "sagemaker:ListCodeRepositories",
                            "sagemaker:ListCompilationJobs",
                            "sagemaker:ListContexts",
                            "sagemaker:ListDataQualityJobDefinitions",
                            "sagemaker:ListDeviceFleets",
                            "sagemaker:ListDevices",
                            "sagemaker:ListDomains",
                            "sagemaker:ListEdgePackagingJobs",
                            "sagemaker:ListEndpointConfigs",
                            "sagemaker:ListEndpoints",
                            "sagemaker:ListExperiments",
                            "sagemaker:ListFeatureGroups",
                            "sagemaker:ListFlowDefinitions",
                            "sagemaker:ListHumanLoops",
                            "sagemaker:ListHumanTaskUis",
                            "sagemaker:ListHyperParameterTuningJobs",
                            "sagemaker:ListImageVersions",
                            "sagemaker:ListImages",
                            "sagemaker:ListInferenceRecommendationsJobs",
                            "sagemaker:ListLabelingJobs",
                            "sagemaker:ListLabelingJobsForWorkteam",
                            "sagemaker:ListLineageGroups",
                            "sagemaker:ListModelBiasJobDefinitions",
                            "sagemaker:ListModelExplainabilityJobDefinitions",
                            "sagemaker:ListModelMetadata",
                            "sagemaker:ListModelPackageGroups",
                            "sagemaker:ListModelPackages",
                            "sagemaker:ListModelQualityJobDefinitions",
                            "sagemaker:ListModels",
                            "sagemaker:ListMonitoringExecutions",
                            "sagemaker:ListMonitoringSchedules",
                            "sagemaker:ListNotebookInstanceLifecycleConfigs",
                            "sagemaker:ListNotebookInstances",
                            "sagemaker:ListPipelineExecutionSteps",
                            "sagemaker:ListPipelineExecutions",
                            "sagemaker:ListPipelineParametersForExecution",
                            "sagemaker:ListPipelines",
                            "sagemaker:ListProcessingJobs",
                            "sagemaker:ListProjects",
                            "sagemaker:ListSubscribedWorkteams",
                            "sagemaker:ListTags",
                            "sagemaker:ListTrainingJobs",
                            "sagemaker:ListTrainingJobsForHyperParameterTuningJob",
                            "sagemaker:ListTransformJobs",
                            "sagemaker:ListTrialComponents",
                            "sagemaker:ListTrials",
                            "sagemaker:ListUserProfiles",
                            "sagemaker:ListWorkforces",
                            "sagemaker:ListWorkteams",
                            "sagemaker:PutLineageGroupPolicy",
                            "sagemaker:PutModelPackageGroupPolicy",
                            "sagemaker:PutRecord",
                            "sagemaker:QueryLineage",
                            "sagemaker:RegisterDevices",
                            "sagemaker:RenderUiTemplate",
                            "sagemaker:Search",
                            "sagemaker:SendHeartbeat",
                            "sagemaker:SendPipelineExecutionStepFailure",
                            "sagemaker:SendPipelineExecutionStepSuccess",
                            "sagemaker:StartHumanLoop",
                            "sagemaker:StartMonitoringSchedule",
                            "sagemaker:StartNotebookInstance",
                            "sagemaker:StartPipelineExecution",
                            "sagemaker:StopAutoMLJob",
                            "sagemaker:StopCompilationJob",
                            "sagemaker:StopEdgePackagingJob",
                            "sagemaker:StopHumanLoop",
                            "sagemaker:StopHyperParameterTuningJob",
                            "sagemaker:StopInferenceRecommendationsJob",
                            "sagemaker:StopLabelingJob",
                            "sagemaker:StopMonitoringSchedule",
                            "sagemaker:StopNotebookInstance",
                            "sagemaker:StopPipelineExecution",
                            "sagemaker:StopProcessingJob",
                            "sagemaker:StopTrainingJob",
                            "sagemaker:StopTransformJob",
                            "sagemaker:UpdateAction",
                            "sagemaker:UpdateAppImageConfig",
                            "sagemaker:UpdateArtifact",
                            "sagemaker:UpdateCodeRepository",
                            "sagemaker:UpdateContext",
                            "sagemaker:UpdateDeviceFleet",
                            "sagemaker:UpdateDevices",
                            "sagemaker:UpdateDomain",
                            "sagemaker:UpdateEndpoint",
                            "sagemaker:UpdateEndpointWeightsAndCapacities",
                            "sagemaker:UpdateExperiment",
                            "sagemaker:UpdateImage",
                            "sagemaker:UpdateModelPackage",
                            "sagemaker:UpdateMonitoringSchedule",
                            "sagemaker:UpdateNotebookInstance",
                            "sagemaker:UpdateNotebookInstanceLifecycleConfig",
                            "sagemaker:UpdatePipeline",
                            "sagemaker:UpdatePipelineExecution",
                            "sagemaker:UpdateProject",
                            "sagemaker:UpdateTrainingJob",
                            "sagemaker:UpdateTrial",
                            "sagemaker:UpdateTrialComponent",
                            "sagemaker:UpdateUserProfile",
                            "sagemaker:UpdateWorkforce",
                            "sagemaker:UpdateWorkteam"
                        ],
                        "Resource": [
                            "arn:aws:sagemaker:*:*:endpoint/*",
                            "arn:aws:sagemaker:*:*:endpoint-config/*",
                            "arn:aws:sagemaker:*:*:model/*",
                            "arn:aws:sagemaker:*:*:pipeline/*",
                            "arn:aws:sagemaker:*:*:project/*",
                            "arn:aws:sagemaker:*:*:model-package/*"
                        ]
                    },
                    {
                        "Sid": "AmazonSageMakerCodeBuildCodeStarConnectionPermission",
                        "Effect": "Allow",
                        "Action": [
                            "codestar-connections:UseConnection"
                        ],
                        "Resource": [
                            "arn:aws:codestar-connections:*:*:connection/*"
                        ],
                        "Condition": {
                            "StringEqualsIgnoreCase": {
                                "aws:ResourceTag/sagemaker": "true"
                            }
                        }
                    },
                    {
                        "Sid": "AmazonSageMakerCodeBuildCodeConnectionPermission",
                        "Effect": "Allow",
                        "Action": [
                            "codeconnections:UseConnection"
                        ],
                        "Resource": [
                            "arn:aws:codeconnections:*:*:connection/*"
                        ],
                        "Condition": {
                            "StringEqualsIgnoreCase": {
                                "aws:ResourceTag/sagemaker": "true"
                            }
                        }
                    }
                ]
            },
            "tags": []
        },
        {
            "name": "AmazonSageMakerCanvasDataPrepFullAccess",
            "arn": "arn:aws:iam::aws:policy/AmazonSageMakerCanvasDataPrepFullAccess",
            "entity": "ANPAZKAPJZG4CKHJVSVSQ",
            "version_id": "v4",
            "type": "AWS",
            "attached": true,
            "document": {
                "Version": "2012-10-17",
                "Statement": [
                    {
                        "Sid": "SageMakerListFeatureGroupOperation",
                        "Effect": "Allow",
                        "Action": "sagemaker:ListFeatureGroups",
                        "Resource": "*"
                    },
                    {
                        "Sid": "SageMakerFeatureGroupOperations",
                        "Effect": "Allow",
                        "Action": [
                            "sagemaker:CreateFeatureGroup",
                            "sagemaker:DescribeFeatureGroup"
                        ],
                        "Resource": "arn:aws:sagemaker:*:*:feature-group/*"
                    },
                    {
                        "Sid": "SageMakerProcessingJobOperations",
                        "Effect": "Allow",
                        "Action": [
                            "sagemaker:CreateProcessingJob",
                            "sagemaker:DescribeProcessingJob",
                            "sagemaker:AddTags"
                        ],
                        "Resource": "arn:aws:sagemaker:*:*:processing-job/*canvas-data-prep*"
                    },
                    {
                        "Sid": "SageMakerProcessingJobListOperation",
                        "Effect": "Allow",
                        "Action": "sagemaker:ListProcessingJobs",
                        "Resource": "*"
                    },
                    {
                        "Sid": "SageMakerPipelineOperations",
                        "Effect": "Allow",
                        "Action": [
                            "sagemaker:DescribePipeline",
                            "sagemaker:CreatePipeline",
                            "sagemaker:UpdatePipeline",
                            "sagemaker:DeletePipeline",
                            "sagemaker:StartPipelineExecution",
                            "sagemaker:ListPipelineExecutionSteps",
                            "sagemaker:DescribePipelineExecution"
                        ],
                        "Resource": "arn:aws:sagemaker:*:*:pipeline/*canvas-data-prep*"
                    },
                    {
                        "Sid": "KMSListOperations",
                        "Effect": "Allow",
                        "Action": "kms:ListAliases",
                        "Resource": "*"
                    },
                    {
                        "Sid": "KMSOperations",
                        "Effect": "Allow",
                        "Action": "kms:DescribeKey",
                        "Resource": "arn:aws:kms:*:*:key/*"
                    },
                    {
                        "Sid": "S3Operations",
                        "Effect": "Allow",
                        "Action": [
                            "s3:GetObject",
                            "s3:PutObject",
                            "s3:DeleteObject",
                            "s3:GetBucketCors",
                            "s3:GetBucketLocation",
                            "s3:AbortMultipartUpload"
                        ],
                        "Resource": [
                            "arn:aws:s3:::*SageMaker*",
                            "arn:aws:s3:::*Sagemaker*",
                            "arn:aws:s3:::*sagemaker*"
                        ],
                        "Condition": {
                            "StringEquals": {
                                "aws:ResourceAccount": "${aws:PrincipalAccount}"
                            }
                        }
                    },
                    {
                        "Sid": "S3GetObjectOperation",
                        "Effect": "Allow",
                        "Action": "s3:GetObject",
                        "Resource": "arn:aws:s3:::*",
                        "Condition": {
                            "StringEqualsIgnoreCase": {
                                "s3:ExistingObjectTag/SageMaker": "true"
                            },
                            "StringEquals": {
                                "aws:ResourceAccount": "${aws:PrincipalAccount}"
                            }
                        }
                    },
                    {
                        "Sid": "S3ListOperations",
                        "Effect": "Allow",
                        "Action": [
                            "s3:ListBucket",
                            "s3:ListAllMyBuckets"
                        ],
                        "Resource": "*"
                    },
                    {
                        "Sid": "IAMListOperations",
                        "Effect": "Allow",
                        "Action": "iam:ListRoles",
                        "Resource": "*"
                    },
                    {
                        "Sid": "IAMGetOperations",
                        "Effect": "Allow",
                        "Action": "iam:GetRole",
                        "Resource": "arn:aws:iam::*:role/*"
                    },
                    {
                        "Sid": "IAMPassOperation",
                        "Effect": "Allow",
                        "Action": "iam:PassRole",
                        "Resource": "arn:aws:iam::*:role/*",
                        "Condition": {
                            "StringEquals": {
                                "iam:PassedToService": [
                                    "sagemaker.amazonaws.com",
                                    "events.amazonaws.com"
                                ]
                            }
                        }
                    },
                    {
                        "Sid": "EventBridgePutOperation",
                        "Effect": "Allow",
                        "Action": [
                            "events:PutRule"
                        ],
                        "Resource": "arn:aws:events:*:*:rule/*",
                        "Condition": {
                            "StringEquals": {
                                "aws:RequestTag/sagemaker:is-canvas-data-prep-job": "true"
                            }
                        }
                    },
                    {
                        "Sid": "EventBridgeOperations",
                        "Effect": "Allow",
                        "Action": [
                            "events:DescribeRule",
                            "events:PutTargets"
                        ],
                        "Resource": "arn:aws:events:*:*:rule/*",
                        "Condition": {
                            "StringEquals": {
                                "aws:ResourceTag/sagemaker:is-canvas-data-prep-job": "true"
                            }
                        }
                    },
                    {
                        "Sid": "EventBridgeTagBasedOperations",
                        "Effect": "Allow",
                        "Action": [
                            "events:TagResource"
                        ],
                        "Resource": "arn:aws:events:*:*:rule/*",
                        "Condition": {
                            "StringEquals": {
                                "aws:RequestTag/sagemaker:is-canvas-data-prep-job": "true",
                                "aws:ResourceTag/sagemaker:is-canvas-data-prep-job": "true"
                            }
                        }
                    },
                    {
                        "Sid": "EventBridgeListTagOperation",
                        "Effect": "Allow",
                        "Action": "events:ListTagsForResource",
                        "Resource": "*"
                    },
                    {
                        "Sid": "GlueOperations",
                        "Effect": "Allow",
                        "Action": [
                            "glue:GetDatabases",
                            "glue:GetTable",
                            "glue:GetTables",
                            "glue:SearchTables"
                        ],
                        "Resource": [
                            "arn:aws:glue:*:*:table/*",
                            "arn:aws:glue:*:*:catalog",
                            "arn:aws:glue:*:*:database/*"
                        ]
                    },
                    {
                        "Sid": "EMROperations",
                        "Effect": "Allow",
                        "Action": [
                            "elasticmapreduce:DescribeCluster",
                            "elasticmapreduce:ListInstanceGroups"
                        ],
                        "Resource": "arn:aws:elasticmapreduce:*:*:cluster/*"
                    },
                    {
                        "Sid": "EMRListOperation",
                        "Effect": "Allow",
                        "Action": "elasticmapreduce:ListClusters",
                        "Resource": "*"
                    },
                    {
                        "Sid": "AthenaListDataCatalogOperation",
                        "Effect": "Allow",
                        "Action": "athena:ListDataCatalogs",
                        "Resource": "*"
                    },
                    {
                        "Sid": "AthenaQueryExecutionOperations",
                        "Effect": "Allow",
                        "Action": [
                            "athena:GetQueryExecution",
                            "athena:GetQueryResults",
                            "athena:StartQueryExecution",
                            "athena:StopQueryExecution"
                        ],
                        "Resource": "arn:aws:athena:*:*:workgroup/*"
                    },
                    {
                        "Sid": "AthenaDataCatalogOperations",
                        "Effect": "Allow",
                        "Action": [
                            "athena:ListDatabases",
                            "athena:ListTableMetadata"
                        ],
                        "Resource": "arn:aws:athena:*:*:datacatalog/*"
                    },
                    {
                        "Sid": "RedshiftOperations",
                        "Effect": "Allow",
                        "Action": [
                            "redshift-data:DescribeStatement",
                            "redshift-data:CancelStatement",
                            "redshift-data:GetStatementResult"
                        ],
                        "Resource": "*"
                    },
                    {
                        "Sid": "RedshiftArnBasedOperations",
                        "Effect": "Allow",
                        "Action": [
                            "redshift-data:ExecuteStatement",
                            "redshift-data:ListSchemas",
                            "redshift-data:ListTables"
                        ],
                        "Resource": "arn:aws:redshift:*:*:cluster:*"
                    },
                    {
                        "Sid": "RedshiftGetCredentialsOperation",
                        "Effect": "Allow",
                        "Action": "redshift:GetClusterCredentials",
                        "Resource": [
                            "arn:aws:redshift:*:*:dbuser:*/sagemaker_access*",
                            "arn:aws:redshift:*:*:dbname:*"
                        ]
                    },
                    {
                        "Sid": "SecretsManagerARNBasedOperation",
                        "Effect": "Allow",
                        "Action": "secretsmanager:CreateSecret",
                        "Resource": "arn:aws:secretsmanager:*:*:secret:AmazonSageMaker-*"
                    },
                    {
                        "Sid": "SecretManagerTagBasedOperation",
                        "Effect": "Allow",
                        "Action": [
                            "secretsmanager:DescribeSecret",
                            "secretsmanager:GetSecretValue"
                        ],
                        "Resource": "arn:aws:secretsmanager:*:*:secret:AmazonSageMaker-*",
                        "Condition": {
                            "StringEquals": {
                                "aws:ResourceTag/SageMaker": "true",
                                "aws:ResourceAccount": "${aws:PrincipalAccount}"
                            }
                        }
                    },
                    {
                        "Sid": "RDSOperation",
                        "Effect": "Allow",
                        "Action": "rds:DescribeDBInstances",
                        "Resource": "*"
                    },
                    {
                        "Sid": "LoggingOperation",
                        "Effect": "Allow",
                        "Action": [
                            "logs:CreateLogGroup",
                            "logs:CreateLogStream",
                            "logs:PutLogEvents"
                        ],
                        "Resource": "arn:aws:logs:*:*:log-group:/aws/sagemaker/studio:*"
                    },
                    {
                        "Sid": "EMRServerlessCreateApplicationOperation",
                        "Effect": "Allow",
                        "Action": "emr-serverless:CreateApplication",
                        "Resource": "arn:aws:emr-serverless:*:*:/*",
                        "Condition": {
                            "StringEquals": {
                                "aws:RequestTag/sagemaker:is-canvas-resource": "True",
                                "aws:ResourceAccount": "${aws:PrincipalAccount}"
                            }
                        }
                    },
                    {
                        "Sid": "EMRServerlessListApplicationOperation",
                        "Effect": "Allow",
                        "Action": "emr-serverless:ListApplications",
                        "Resource": "arn:aws:emr-serverless:*:*:/*",
                        "Condition": {
                            "StringEquals": {
                                "aws:ResourceAccount": "${aws:PrincipalAccount}"
                            }
                        }
                    },
                    {
                        "Sid": "EMRServerlessApplicationOperations",
                        "Effect": "Allow",
                        "Action": [
                            "emr-serverless:UpdateApplication",
                            "emr-serverless:GetApplication"
                        ],
                        "Resource": "arn:aws:emr-serverless:*:*:/applications/*",
                        "Condition": {
                            "StringEquals": {
                                "aws:ResourceTag/sagemaker:is-canvas-resource": "True",
                                "aws:ResourceAccount": "${aws:PrincipalAccount}"
                            }
                        }
                    },
                    {
                        "Sid": "EMRServerlessStartJobRunOperation",
                        "Effect": "Allow",
                        "Action": "emr-serverless:StartJobRun",
                        "Resource": "arn:aws:emr-serverless:*:*:/applications/*",
                        "Condition": {
                            "StringEquals": {
                                "aws:RequestTag/sagemaker:is-canvas-resource": "True",
                                "aws:ResourceAccount": "${aws:PrincipalAccount}"
                            }
                        }
                    },
                    {
                        "Sid": "EMRServerlessListJobRunOperation",
                        "Effect": "Allow",
                        "Action": "emr-serverless:ListJobRuns",
                        "Resource": "arn:aws:emr-serverless:*:*:/applications/*",
                        "Condition": {
                            "StringEquals": {
                                "aws:ResourceTag/sagemaker:is-canvas-resource": "True",
                                "aws:ResourceAccount": "${aws:PrincipalAccount}"
                            }
                        }
                    },
                    {
                        "Sid": "EMRServerlessJobRunOperations",
                        "Effect": "Allow",
                        "Action": [
                            "emr-serverless:GetJobRun",
                            "emr-serverless:CancelJobRun"
                        ],
                        "Resource": "arn:aws:emr-serverless:*:*:/applications/*/jobruns/*",
                        "Condition": {
                            "StringEquals": {
                                "aws:ResourceTag/sagemaker:is-canvas-resource": "True",
                                "aws:ResourceAccount": "${aws:PrincipalAccount}"
                            }
                        }
                    },
                    {
                        "Sid": "EMRServerlessTagResourceOperation",
                        "Effect": "Allow",
                        "Action": "emr-serverless:TagResource",
                        "Resource": "arn:aws:emr-serverless:*:*:/*",
                        "Condition": {
                            "StringEquals": {
                                "aws:RequestTag/sagemaker:is-canvas-resource": "True",
                                "aws:ResourceAccount": "${aws:PrincipalAccount}"
                            }
                        }
                    },
                    {
                        "Sid": "IAMPassOperationForEMRServerless",
                        "Effect": "Allow",
                        "Action": "iam:PassRole",
                        "Resource": [
                            "arn:aws:iam::*:role/service-role/AmazonSageMakerCanvasEMRSExecutionAccess-*",
                            "arn:aws:iam::*:role/AmazonSageMakerCanvasEMRSExecutionAccess-*"
                        ],
                        "Condition": {
                            "StringEquals": {
                                "iam:PassedToService": "emr-serverless.amazonaws.com",
                                "aws:ResourceAccount": "${aws:PrincipalAccount}"
                            }
                        }
                    }
                ]
            },
            "tags": []
        },
        {
            "name": "s3FullAccessRmfx-app-file-uploads",
            "arn": "arn:aws:iam::975049982984:policy/s3FullAccessRmfx-app-file-uploads",
            "entity": "ANPA6GBMCAQEALL474SD5",
            "version_id": "v7",
            "type": "Custom",
            "attached": true,
            "document": {
                "Version": "2012-10-17",
                "Statement": [
                    {
                        "Effect": "Allow",
                        "Action": [
                            "s3:*",
                            "s3-object-lambda:*"
                        ],
                        "Resource": [
                            "arn:aws:s3:::rmfx-app-file-uploads",
                            "arn:aws:s3:::rmfx-app-file-uploads/*"
                        ]
                    },
                    {
                        "Effect": "Allow",
                        "Action": [
                            "cognito-identity:*",
                            "cognito-idp:AdminCreateUser",
                            "cognito-idp:AdminGetUser",
                            "cognito-idp:AdminDeleteUser",
                            "cognito-idp:AdminUpdateUserAttributes",
                            "cognito-idp:ListUsers",
                            "cognito-idp:AdminInitiateAuth",
                            "cognito-idp:AdminRespondToAuthChallenge"
                        ],
                        "Resource": [
                            "arn:aws:cognito-idp:ap-south-1:975049982984:userpool/ap-south-1_woyFqJyIi"
                        ]
                    },
                    {
                        "Effect": "Allow",
                        "Action": [
                            "ses:SendRawEmail",
                            "ses:SendEmail"
                        ],
                        "Resource": "arn:aws:ses:us-east-1:975049982984:identity/rmfx-dev.com"
                    }
                ]
            },
            "tags": []
        },
        {
            "name": "rmfx-prod-backend-server-s3-access",
            "arn": "arn:aws:iam::975049982984:policy/rmfx-prod-backend-server-s3-access",
            "entity": "ANPA6GBMCAQEAPETLBHC4",
            "version_id": "v1",
            "type": "Custom",
            "attached": true,
            "document": {
                "Version": "2012-10-17",
                "Statement": [
                    {
                        "Effect": "Allow",
                        "Action": [
                            "s3:*",
                            "s3-object-lambda:*"
                        ],
                        "Resource": [
                            "arn:aws:s3:::rmfx-app-file-uploads-prod",
                            "arn:aws:s3:::rmfx-app-file-uploads-prod/*"
                        ]
                    }
                ]
            },
            "tags": []
        },
        {
            "name": "AWSNeptuneNotebook-1724209661436",
            "arn": "arn:aws:iam::975049982984:policy/service-role/AWSNeptuneNotebook-1724209661436",
            "entity": "ANPA6GBMCAQEB6HEFREI2",
            "version_id": "v6",
            "type": "Custom",
            "attached": true,
            "document": {
                "Version": "2012-10-17",
                "Statement": [
                    {
                        "Sid": "S3ListBucketAndGetObject",
                        "Effect": "Allow",
                        "Action": [
                            "s3:*",
                            "bedrock:*"
                        ],
                        "Resource": [
                            "arn:aws:s3:::aws-neptune-notebook",
                            "arn:aws:s3:::aws-neptune-notebook/*",
                            "arn:aws:s3:::*"
                        ]
                    },
                    {
                        "Sid": "DBAccess",
                        "Effect": "Allow",
                        "Action": "neptune-db:*",
                        "Resource": [
                            "arn:aws:neptune-db:us-east-1:975049982984:cluster-7YOKGBJDIXHVD7QM2AN4NRLMUM/*"
                        ]
                    },
                    {
                        "Sid": "LogGroupAccess",
                        "Effect": "Allow",
                        "Action": [
                            "logs:CreateLogGroup",
                            "logs:CreateLogStream",
                            "logs:PutLogEvents"
                        ],
                        "Resource": [
                            "arn:aws:logs:us-east-1:975049982984:log-group:/aws/sagemaker/*"
                        ]
                    },
                    {
                        "Sid": "SageMakerNotebookAccess",
                        "Effect": "Allow",
                        "Action": [
                            "sagemaker:DescribeNotebookInstance",
                            "bedrock:*"
                        ],
                        "Resource": [
                            "arn:aws:sagemaker:us-east-1:975049982984:notebook-instance/*",
                            "*"
                        ]
                    }
                ]
            },
            "tags": []
        },
        {
            "name": "AWSNeptuneNotebook-1724132302637",
            "arn": "arn:aws:iam::975049982984:policy/service-role/AWSNeptuneNotebook-1724132302637",
            "entity": "ANPA6GBMCAQEE64M72KUY",
            "version_id": "v1",
            "type": "Custom",
            "attached": true,
            "document": {
                "Version": "2012-10-17",
                "Statement": [
                    {
                        "Sid": "S3ListBucketAndGetObject",
                        "Effect": "Allow",
                        "Action": [
                            "s3:GetObject",
                            "s3:ListBucket"
                        ],
                        "Resource": [
                            "arn:aws:s3:::aws-neptune-notebook",
                            "arn:aws:s3:::aws-neptune-notebook/*"
                        ]
                    },
                    {
                        "Sid": "DBAccess",
                        "Effect": "Allow",
                        "Action": "neptune-db:*",
                        "Resource": [
                            "arn:aws:neptune-db:us-east-1:975049982984:cluster-W3GNM4HAYDOKXRRCNSQ6U4MXXQ/*"
                        ]
                    },
                    {
                        "Sid": "LogGroupAccess",
                        "Effect": "Allow",
                        "Action": [
                            "logs:CreateLogGroup",
                            "logs:CreateLogStream",
                            "logs:PutLogEvents"
                        ],
                        "Resource": [
                            "arn:aws:logs:us-east-1:975049982984:log-group:/aws/sagemaker/*"
                        ]
                    },
                    {
                        "Sid": "SageMakerNotebookAccess",
                        "Effect": "Allow",
                        "Action": "sagemaker:DescribeNotebookInstance",
                        "Resource": [
                            "arn:aws:sagemaker:us-east-1:975049982984:notebook-instance/*"
                        ]
                    }
                ]
            },
            "tags": []
        },
        {
            "name": "AWSNeptuneNotebook-1723958063619",
            "arn": "arn:aws:iam::975049982984:policy/service-role/AWSNeptuneNotebook-1723958063619",
            "entity": "ANPA6GBMCAQEECHJGB7WV",
            "version_id": "v1",
            "type": "Custom",
            "attached": true,
            "document": {
                "Version": "2012-10-17",
                "Statement": [
                    {
                        "Sid": "S3ListBucketAndGetObject",
                        "Effect": "Allow",
                        "Action": [
                            "s3:GetObject",
                            "s3:ListBucket"
                        ],
                        "Resource": [
                            "arn:aws:s3:::aws-neptune-notebook",
                            "arn:aws:s3:::aws-neptune-notebook/*"
                        ]
                    },
                    {
                        "Sid": "DBAccess",
                        "Effect": "Allow",
                        "Action": "neptune-db:*",
                        "Resource": [
                            "arn:aws:neptune-db:us-east-1:975049982984:cluster-DPRPES65CYWAZTGQ6MTYR7KFHE/*"
                        ]
                    },
                    {
                        "Sid": "LogGroupAccess",
                        "Effect": "Allow",
                        "Action": [
                            "logs:CreateLogGroup",
                            "logs:CreateLogStream",
                            "logs:PutLogEvents"
                        ],
                        "Resource": [
                            "arn:aws:logs:us-east-1:975049982984:log-group:/aws/sagemaker/*"
                        ]
                    },
                    {
                        "Sid": "SageMakerNotebookAccess",
                        "Effect": "Allow",
                        "Action": "sagemaker:DescribeNotebookInstance",
                        "Resource": [
                            "arn:aws:sagemaker:us-east-1:975049982984:notebook-instance/*"
                        ]
                    }
                ]
            },
            "tags": []
        },
        {
            "name": "rds-proxy-policy-1724735674544",
            "arn": "arn:aws:iam::975049982984:policy/service-role/rds-proxy-policy-1724735674544",
            "entity": "ANPA6GBMCAQEELSKFQIJD",
            "version_id": "v1",
            "type": "Custom",
            "attached": true,
            "document": {
                "Version": "2012-10-17",
                "Statement": [
                    {
                        "Sid": "GetSecretValue",
                        "Action": [
                            "secretsmanager:GetSecretValue"
                        ],
                        "Effect": "Allow",
                        "Resource": [
                            "arn:aws:secretsmanager:us-east-1:975049982984:secret:rmfxdb-cred-HWxK8y"
                        ]
                    },
                    {
                        "Sid": "DecryptSecretValue",
                        "Action": [
                            "kms:Decrypt"
                        ],
                        "Effect": "Allow",
                        "Resource": [
                            "arn:aws:kms:us-east-1:975049982984:key/98a2da38-2a57-4ac2-af9c-3d860f3b21dc"
                        ],
                        "Condition": {
                            "StringEquals": {
                                "kms:ViaService": "secretsmanager.us-east-1.amazonaws.com"
                            }
                        }
                    }
                ]
            },
            "tags": []
        },
        {
            "name": "AmazonSageMakerServiceCatalogProductsUseRole-20240819T212777",
            "arn": "arn:aws:iam::975049982984:policy/service-role/AmazonSageMakerServiceCatalogProductsUseRole-20240819T212777",
            "entity": "ANPA6GBMCAQEFH5M5DW66",
            "version_id": "v1",
            "type": "Custom",
            "attached": true,
            "document": {
                "Version": "2012-10-17",
                "Statement": [
                    {
                        "Action": [
                            "cloudformation:CreateChangeSet",
                            "cloudformation:CreateStack",
                            "cloudformation:DescribeChangeSet",
                            "cloudformation:DeleteChangeSet",
                            "cloudformation:DeleteStack",
                            "cloudformation:DescribeStacks",
                            "cloudformation:ExecuteChangeSet",
                            "cloudformation:SetStackPolicy",
                            "cloudformation:UpdateStack"
                        ],
                        "Resource": "arn:aws:cloudformation:*:*:stack/sagemaker-*",
                        "Effect": "Allow"
                    },
                    {
                        "Action": [
                            "cloudwatch:PutMetricData"
                        ],
                        "Resource": "*",
                        "Effect": "Allow"
                    },
                    {
                        "Action": [
                            "codebuild:BatchGetBuilds",
                            "codebuild:StartBuild"
                        ],
                        "Resource": [
                            "arn:aws:codebuild:*:*:project/sagemaker-*",
                            "arn:aws:codebuild:*:*:build/sagemaker-*"
                        ],
                        "Effect": "Allow"
                    },
                    {
                        "Action": [
                            "codecommit:CancelUploadArchive",
                            "codecommit:GetBranch",
                            "codecommit:GetCommit",
                            "codecommit:GetUploadArchiveStatus",
                            "codecommit:UploadArchive"
                        ],
                        "Resource": "arn:aws:codecommit:*:*:sagemaker-*",
                        "Effect": "Allow"
                    },
                    {
                        "Action": [
                            "codepipeline:StartPipelineExecution"
                        ],
                        "Resource": "arn:aws:codepipeline:*:*:sagemaker-*",
                        "Effect": "Allow"
                    },
                    {
                        "Action": [
                            "ec2:DescribeRouteTables"
                        ],
                        "Resource": "*",
                        "Effect": "Allow"
                    },
                    {
                        "Action": [
                            "ecr:BatchCheckLayerAvailability",
                            "ecr:BatchGetImage",
                            "ecr:Describe*",
                            "ecr:GetAuthorizationToken",
                            "ecr:GetDownloadUrlForLayer"
                        ],
                        "Resource": "*",
                        "Effect": "Allow"
                    },
                    {
                        "Effect": "Allow",
                        "Action": [
                            "ecr:BatchDeleteImage",
                            "ecr:CompleteLayerUpload",
                            "ecr:CreateRepository",
                            "ecr:DeleteRepository",
                            "ecr:InitiateLayerUpload",
                            "ecr:PutImage",
                            "ecr:UploadLayerPart"
                        ],
                        "Resource": [
                            "arn:aws:ecr:*:*:repository/sagemaker-*"
                        ]
                    },
                    {
                        "Action": [
                            "events:DeleteRule",
                            "events:DescribeRule",
                            "events:PutRule",
                            "events:PutTargets",
                            "events:RemoveTargets"
                        ],
                        "Resource": [
                            "arn:aws:events:*:*:rule/sagemaker-*"
                        ],
                        "Effect": "Allow"
                    },
                    {
                        "Action": [
                            "firehose:PutRecord",
                            "firehose:PutRecordBatch"
                        ],
                        "Resource": "arn:aws:firehose:*:*:deliverystream/sagemaker-*",
                        "Effect": "Allow"
                    },
                    {
                        "Action": [
                            "glue:BatchCreatePartition",
                            "glue:BatchDeletePartition",
                            "glue:BatchDeleteTable",
                            "glue:BatchDeleteTableVersion",
                            "glue:BatchGetPartition",
                            "glue:CreateDatabase",
                            "glue:CreatePartition",
                            "glue:CreateTable",
                            "glue:DeletePartition",
                            "glue:DeleteTable",
                            "glue:DeleteTableVersion",
                            "glue:GetDatabase",
                            "glue:GetPartition",
                            "glue:GetPartitions",
                            "glue:GetTable",
                            "glue:GetTables",
                            "glue:GetTableVersion",
                            "glue:GetTableVersions",
                            "glue:SearchTables",
                            "glue:UpdatePartition",
                            "glue:UpdateTable",
                            "glue:GetUserDefinedFunctions"
                        ],
                        "Resource": [
                            "arn:aws:glue:*:*:catalog",
                            "arn:aws:glue:*:*:database/default",
                            "arn:aws:glue:*:*:database/global_temp",
                            "arn:aws:glue:*:*:database/sagemaker-*",
                            "arn:aws:glue:*:*:table/sagemaker-*",
                            "arn:aws:glue:*:*:tableVersion/sagemaker-*"
                        ],
                        "Effect": "Allow"
                    },
                    {
                        "Action": [
                            "iam:PassRole"
                        ],
                        "Resource": [
                            "arn:aws:iam::*:role/service-role/AmazonSageMakerServiceCatalogProductsUse*"
                        ],
                        "Effect": "Allow"
                    },
                    {
                        "Effect": "Allow",
                        "Action": [
                            "lambda:InvokeFunction"
                        ],
                        "Resource": [
                            "arn:aws:lambda:*:*:function:sagemaker-*"
                        ]
                    },
                    {
                        "Action": [
                            "logs:CreateLogDelivery",
                            "logs:CreateLogGroup",
                            "logs:CreateLogStream",
                            "logs:DeleteLogDelivery",
                            "logs:Describe*",
                            "logs:GetLogDelivery",
                            "logs:GetLogEvents",
                            "logs:ListLogDeliveries",
                            "logs:PutLogEvents",
                            "logs:PutResourcePolicy",
                            "logs:UpdateLogDelivery"
                        ],
                        "Resource": "*",
                        "Effect": "Allow"
                    },
                    {
                        "Effect": "Allow",
                        "Action": [
                            "s3:CreateBucket",
                            "s3:DeleteBucket",
                            "s3:GetBucketAcl",
                            "s3:GetBucketCors",
                            "s3:GetBucketLocation",
                            "s3:ListAllMyBuckets",
                            "s3:ListBucket",
                            "s3:ListBucketMultipartUploads",
                            "s3:PutBucketCors",
                            "s3:PutObjectAcl"
                        ],
                        "Resource": [
                            "arn:aws:s3:::aws-glue-*",
                            "arn:aws:s3:::sagemaker-*"
                        ]
                    },
                    {
                        "Effect": "Allow",
                        "Action": [
                            "s3:AbortMultipartUpload",
                            "s3:DeleteObject",
                            "s3:GetObject",
                            "s3:GetObjectVersion",
                            "s3:PutObject"
                        ],
                        "Resource": [
                            "arn:aws:s3:::aws-glue-*",
                            "arn:aws:s3:::sagemaker-*"
                        ]
                    },
                    {
                        "Effect": "Allow",
                        "Action": [
                            "sagemaker:*"
                        ],
                        "NotResource": [
                            "arn:aws:sagemaker:*:*:domain/*",
                            "arn:aws:sagemaker:*:*:user-profile/*",
                            "arn:aws:sagemaker:*:*:app/*",
                            "arn:aws:sagemaker:*:*:flow-definition/*"
                        ]
                    },
                    {
                        "Action": [
                            "states:DescribeExecution",
                            "states:DescribeStateMachine",
                            "states:DescribeStateMachineForExecution",
                            "states:GetExecutionHistory",
                            "states:ListExecutions",
                            "states:ListTagsForResource",
                            "states:StartExecution",
                            "states:StopExecution",
                            "states:TagResource",
                            "states:UntagResource",
                            "states:UpdateStateMachine"
                        ],
                        "Resource": [
                            "arn:aws:states:*:*:stateMachine:sagemaker-*",
                            "arn:aws:states:*:*:execution:sagemaker-*:*"
                        ],
                        "Effect": "Allow"
                    },
                    {
                        "Action": [
                            "states:ListStateMachines"
                        ],
                        "Resource": "*",
                        "Effect": "Allow"
                    },
                    {
                        "Effect": "Allow",
                        "Action": [
                            "codestar-connections:UseConnection"
                        ],
                        "Resource": "arn:aws:codestar-connections:*:*:connection/*",
                        "Condition": {
                            "StringEqualsIgnoreCase": {
                                "aws:ResourceTag/sagemaker": "true"
                            }
                        }
                    }
                ]
            },
            "tags": []
        },
        {
            "name": "AWSNeptuneNotebook-1724208407913",
            "arn": "arn:aws:iam::975049982984:policy/service-role/AWSNeptuneNotebook-1724208407913",
            "entity": "ANPA6GBMCAQEGRETNAI7O",
            "version_id": "v1",
            "type": "Custom",
            "attached": true,
            "document": {
                "Version": "2012-10-17",
                "Statement": [
                    {
                        "Sid": "S3ListBucketAndGetObject",
                        "Effect": "Allow",
                        "Action": [
                            "s3:GetObject",
                            "s3:ListBucket"
                        ],
                        "Resource": [
                            "arn:aws:s3:::aws-neptune-notebook",
                            "arn:aws:s3:::aws-neptune-notebook/*"
                        ]
                    },
                    {
                        "Sid": "DBAccess",
                        "Effect": "Allow",
                        "Action": "neptune-db:*",
                        "Resource": [
                            "arn:aws:neptune-db:us-east-1:975049982984:cluster-7YOKGBJDIXHVD7QM2AN4NRLMUM/*"
                        ]
                    },
                    {
                        "Sid": "LogGroupAccess",
                        "Effect": "Allow",
                        "Action": [
                            "logs:CreateLogGroup",
                            "logs:CreateLogStream",
                            "logs:PutLogEvents"
                        ],
                        "Resource": [
                            "arn:aws:logs:us-east-1:975049982984:log-group:/aws/sagemaker/*"
                        ]
                    },
                    {
                        "Sid": "SageMakerNotebookAccess",
                        "Effect": "Allow",
                        "Action": "sagemaker:DescribeNotebookInstance",
                        "Resource": [
                            "arn:aws:sagemaker:us-east-1:975049982984:notebook-instance/*"
                        ]
                    }
                ]
            },
            "tags": []
        },
        {
            "name": "multiplePolicies",
            "arn": "arn:aws:iam::975049982984:policy/multiplePolicies",
            "entity": "ANPA6GBMCAQEIF2KWEK4W",
            "version_id": "v2",
            "type": "Custom",
            "attached": true,
            "document": {
                "Version": "2012-10-17",
                "Statement": [
                    {
                        "Sid": "MultiplePolicies",
                        "Action": [
                            "ec2:DescribeInstances",
                            "ec2-instance-connect:SendSSHPublicKey"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                    },
                    {
                        "Sid": "CreateOwnAccessKeys",
                        "Effect": "Allow",
                        "Action": [
                            "iam:CreateAccessKey",
                            "iam:GetUser",
                            "iam:ListAccessKeys",
                            "iam:TagUser"
                        ],
                        "Resource": "arn:aws:iam::*:user/${aws:username}"
                    },
                    {
                        "Sid": "ManageOwnAccessKeys",
                        "Effect": "Allow",
                        "Action": [
                            "iam:CreateAccessKey",
                            "iam:DeleteAccessKey",
                            "iam:GetAccessKeyLastUsed",
                            "iam:GetUser",
                            "iam:ListAccessKeys",
                            "iam:UpdateAccessKey",
                            "iam:TagUser"
                        ],
                        "Resource": "arn:aws:iam::*:user/${aws:username}"
                    }
                ]
            },
            "tags": []
        },
        {
            "name": "AzureAD_SSOUserRole_Policy",
            "arn": "arn:aws:iam::975049982984:policy/AzureAD_SSOUserRole_Policy",
            "entity": "ANPA6GBMCAQEJYLF7H24K",
            "version_id": "v2",
            "type": "Custom",
            "attached": false,
            "document": {
                "Version": "2012-10-17",
                "Statement": [
                    {
                        "Effect": "Allow",
                        "Action": [
                            "iam:ListRoles"
                        ],
                        "Resource": "*"
                    }
                ]
            },
            "tags": [
                {
                    "Key": "name",
                    "Value": "saml"
                }
            ]
        },
        {
            "name": "bedrock-invocation-logging-policy-1724815136544",
            "arn": "arn:aws:iam::975049982984:policy/service-role/bedrock-invocation-logging-policy-1724815136544",
            "entity": "ANPA6GBMCAQEKR7RQZU6A",
            "version_id": "v1",
            "type": "Custom",
            "attached": true,
            "document": {
                "Version": "2012-10-17",
                "Statement": [
                    {
                        "Sid": "AmazonBedrockModelInvocationCWDeliveryRole",
                        "Effect": "Allow",
                        "Action": [
                            "logs:CreateLogStream",
                            "logs:PutLogEvents"
                        ],
                        "Resource": "arn:aws:logs:us-east-1:975049982984:log-group:bedrock-invocation-logs:log-stream:aws/bedrock/modelinvocations"
                    }
                ]
            },
            "tags": []
        },
        {
            "name": "rmfx-prod-backend-server-cognito",
            "arn": "arn:aws:iam::975049982984:policy/rmfx-prod-backend-server-cognito",
            "entity": "ANPA6GBMCAQEMB4DMVJRL",
            "version_id": "v2",
            "type": "Custom",
            "attached": true,
            "document": {
                "Version": "2012-10-17",
                "Statement": [
                    {
                        "Effect": "Allow",
                        "Action": [
                            "cognito-identity:*",
                            "cognito-idp:AdminCreateUser",
                            "cognito-idp:AdminGetUser",
                            "cognito-idp:AdminDeleteUser",
                            "cognito-idp:AdminUpdateUserAttributes",
                            "cognito-idp:ListUsers",
                            "cognito-idp:AdminInitiateAuth",
                            "cognito-idp:AdminRespondToAuthChallenge"
                        ],
                        "Resource": [
                            "arn:aws:cognito-idp:us-east-1:975049982984:userpool/us-east-1_2eCvGu1gR"
                        ]
                    }
                ]
            },
            "tags": []
        },
        {
            "name": "bedrock-invocation-logs-policy-1724815008598",
            "arn": "arn:aws:iam::975049982984:policy/service-role/bedrock-invocation-logs-policy-1724815008598",
            "entity": "ANPA6GBMCAQENSQNVKZDG",
            "version_id": "v1",
            "type": "Custom",
            "attached": true,
            "document": {
                "Version": "2012-10-17",
                "Statement": [
                    {
                        "Sid": "AmazonBedrockModelInvocationCWDeliveryRole",
                        "Effect": "Allow",
                        "Action": [
                            "logs:CreateLogStream",
                            "logs:PutLogEvents"
                        ],
                        "Resource": "arn:aws:logs:us-east-1:975049982984:log-group:bedrock-invocation-logs:log-stream:aws/bedrock/modelinvocations"
                    }
                ]
            },
            "tags": []
        },
        {
            "name": "NeptuneServiceLinked",
            "arn": "arn:aws:iam::975049982984:policy/NeptuneServiceLinked",
            "entity": "ANPA6GBMCAQEPAHRBAVFI",
            "version_id": "v1",
            "type": "Custom",
            "attached": false,
            "document": {
                "Version": "2012-10-17",
                "Statement": [
                    {
                        "Action": "iam:CreateServiceLinkedRole",
                        "Effect": "Allow",
                        "Resource": "arn:aws:iam::*:role/aws-service-role/rds.amazonaws.com/AWSServiceRoleForRDS",
                        "Condition": {
                            "StringLike": {
                                "iam:AWSServiceName": "rds.amazonaws.com"
                            }
                        }
                    }
                ]
            },
            "tags": []
        },
        {
            "name": "AmazonSageMaker-ExecutionPolicy-20240819T212690",
            "arn": "arn:aws:iam::975049982984:policy/service-role/AmazonSageMaker-ExecutionPolicy-20240819T212690",
            "entity": "ANPA6GBMCAQEPODZBGBWG",
            "version_id": "v1",
            "type": "Custom",
            "attached": true,
            "document": {
                "Version": "2012-10-17",
                "Statement": [
                    {
                        "Effect": "Allow",
                        "Action": [
                            "s3:GetObject",
                            "s3:PutObject",
                            "s3:DeleteObject",
                            "s3:ListBucket"
                        ],
                        "Resource": [
                            "arn:aws:s3:::*"
                        ]
                    }
                ]
            },
            "tags": []
        },
        {
            "name": "Dev-Cognito-Policy",
            "arn": "arn:aws:iam::975049982984:user/service-account-backend",
            "entity": "service-account-backend",
            "version_id": "v1",
            "type": "Inline",
            "attached": true,
            "document": {
                "Version": "2012-10-17",
                "Statement": [
                    {
                        "Effect": "Allow",
                        "Action": [
                            "cognito-identity:*",
                            "cognito-idp:AdminCreateUser",
                            "cognito-idp:AdminGetUser",
                            "cognito-idp:AdminDeleteUser",
                            "cognito-idp:AdminUpdateUserAttributes",
                            "cognito-idp:ListUsers",
                            "cognito-idp:AdminInitiateAuth",
                            "cognito-idp:AdminRespondToAuthChallenge"
                        ],
                        "Resource": [
                            "arn:aws:cognito-idp:us-east-1:975049982984:userpool/us-east-1_Fle6n58Dq"
                        ]
                    }
                ]
            },
            "tags": []
        },
        {
            "name": "RMFX-Dev-SES-Policy",
            "arn": "arn:aws:iam::975049982984:user/service-account-backend",
            "entity": "service-account-backend",
            "version_id": "v1",
            "type": "Inline",
            "attached": true,
            "document": {
                "Version": "2012-10-17",
                "Statement": [
                    {
                        "Effect": "Allow",
                        "Action": [
                            "ses:SendRawEmail",
                            "ses:SendEmail"
                        ],
                        "Resource": "arn:aws:ses:us-east-1:975049982984:identity/rmfx-dev.com"
                    }
                ]
            },
            "tags": []
        },
        {
            "name": "Service-Account-Local-S3-Policy",
            "arn": "arn:aws:iam::975049982984:user/service-account-backend",
            "entity": "service-account-backend",
            "version_id": "v1",
            "type": "Inline",
            "attached": true,
            "document": {
                "Version": "2012-10-17",
                "Statement": [
                    {
                        "Effect": "Allow",
                        "Action": [
                            "s3:*",
                            "s3-object-lambda:*"
                        ],
                        "Resource": [
                            "arn:aws:s3:::rmfx-app-file-uploads",
                            "arn:aws:s3:::rmfx-app-file-uploads/*"
                        ]
                    }
                ]
            },
            "tags": []
        },
        {
            "name": "Service-Account-RDS",
            "arn": "arn:aws:iam::975049982984:user/service-account-backend",
            "entity": "service-account-backend",
            "version_id": "v1",
            "type": "Inline",
            "attached": true,
            "document": {
                "Version": "2012-10-17",
                "Statement": [
                    {
                        "Sid": "VisualEditor0",
                        "Effect": "Allow",
                        "Action": [
                            "rds:ModifyRecommendation",
                            "rds:ModifyDBRecommendation",
                            "rds:CancelExportTask",
                            "rds:DescribeDBRecommendations",
                            "rds:DescribeDBEngineVersions",
                            "rds:CrossRegionCommunication",
                            "rds:DescribeEngineDefaultParameters",
                            "rds:DescribeRecommendations",
                            "rds:DescribeReservedDBInstancesOfferings",
                            "rds:ModifyCertificates",
                            "rds:DescribeRecommendationGroups",
                            "rds:DescribeOrderableDBInstanceOptions",
                            "rds:DescribeEngineDefaultClusterParameters",
                            "rds:DescribeOptionGroupOptions",
                            "rds:DescribeSourceRegions",
                            "rds:CreateDBProxy",
                            "rds:DescribeCertificates",
                            "rds:DescribeEventCategories",
                            "rds:DescribeAccountAttributes",
                            "rds:DescribeEvents"
                        ],
                        "Resource": "*"
                    },
                    {
                        "Sid": "VisualEditor1",
                        "Effect": "Allow",
                        "Action": "rds:*",
                        "Resource": "arn:aws:rds:us-east-1:975049982984:db:dev-database"
                    }
                ]
            },
            "tags": []
        },
        {
            "name": "dev-cloudfront-policy",
            "arn": "arn:aws:iam::975049982984:role/Dev-Application-Role",
            "entity": "Dev-Application-Role",
            "version_id": "v1",
            "type": "Inline",
            "attached": true,
            "document": {
                "Version": "2012-10-17",
                "Statement": [
                    {
                        "Sid": "cfflistbuckets",
                        "Action": [
                            "s3:ListAllMyBuckets"
                        ],
                        "Effect": "Allow",
                        "Resource": "arn:aws:s3:::rmfx-app-file-uploads"
                    },
                    {
                        "Sid": "cffullaccess",
                        "Action": [
                            "acm:ListCertificates",
                            "cloudfront:*",
                            "cloudfront-keyvaluestore:*"
                        ],
                        "Effect": "Allow",
                        "Resource": "arn:aws:cloudfront::975049982984:distribution/EYYJ3M19CAWDN"
                    }
                ]
            },
            "tags": []
        },
        {
            "name": "Dev-Cognito-Policy",
            "arn": "arn:aws:iam::975049982984:role/Dev-Application-Role",
            "entity": "Dev-Application-Role",
            "version_id": "v1",
            "type": "Inline",
            "attached": true,
            "document": {
                "Version": "2012-10-17",
                "Statement": [
                    {
                        "Effect": "Allow",
                        "Action": [
                            "cognito-identity:*",
                            "cognito-idp:AdminCreateUser",
                            "cognito-idp:AdminGetUser",
                            "cognito-idp:AdminDeleteUser",
                            "cognito-idp:AdminUpdateUserAttributes",
                            "cognito-idp:ListUsers",
                            "cognito-idp:AdminInitiateAuth",
                            "cognito-idp:AdminRespondToAuthChallenge"
                        ],
                        "Resource": [
                            "arn:aws:cognito-idp:us-east-1:975049982984:userpool/us-east-1_Fle6n58Dq"
                        ]
                    }
                ]
            },
            "tags": []
        },
        {
            "name": "RDS-Postgress-Dev-Instance",
            "arn": "arn:aws:iam::975049982984:role/Dev-Application-Role",
            "entity": "Dev-Application-Role",
            "version_id": "v1",
            "type": "Inline",
            "attached": true,
            "document": {
                "Version": "2012-10-17",
                "Statement": [
                    {
                        "Effect": "Allow",
                        "Action": [
                            "rds:*",
                            "application-autoscaling:DeleteScalingPolicy",
                            "application-autoscaling:DeregisterScalableTarget",
                            "application-autoscaling:DescribeScalableTargets",
                            "application-autoscaling:DescribeScalingActivities",
                            "application-autoscaling:DescribeScalingPolicies",
                            "application-autoscaling:PutScalingPolicy",
                            "application-autoscaling:RegisterScalableTarget",
                            "cloudwatch:DescribeAlarms",
                            "cloudwatch:GetMetricStatistics",
                            "cloudwatch:PutMetricAlarm",
                            "cloudwatch:DeleteAlarms",
                            "cloudwatch:ListMetrics",
                            "cloudwatch:GetMetricData",
                            "ec2:DescribeAccountAttributes",
                            "ec2:DescribeAvailabilityZones",
                            "ec2:DescribeCoipPools",
                            "ec2:DescribeInternetGateways",
                            "ec2:DescribeLocalGatewayRouteTablePermissions",
                            "ec2:DescribeLocalGatewayRouteTables",
                            "ec2:DescribeLocalGatewayRouteTableVpcAssociations",
                            "ec2:DescribeLocalGateways",
                            "ec2:DescribeSecurityGroups",
                            "ec2:DescribeSubnets",
                            "ec2:DescribeVpcAttribute",
                            "ec2:DescribeVpcs",
                            "ec2:GetCoipPoolUsage",
                            "sns:ListSubscriptions",
                            "sns:ListTopics",
                            "sns:Publish",
                            "logs:DescribeLogStreams",
                            "logs:GetLogEvents",
                            "outposts:GetOutpostInstanceTypes",
                            "devops-guru:GetResourceCollection"
                        ],
                        "Resource": "arn:aws:rds:us-east-1:975049982984:db:dev-database"
                    },
                    {
                        "Effect": "Allow",
                        "Action": "pi:*",
                        "Resource": [
                            "arn:aws:pi:*:*:metrics/rds/*",
                            "arn:aws:pi:*:*:perf-reports/rds/*"
                        ]
                    },
                    {
                        "Effect": "Allow",
                        "Action": "iam:CreateServiceLinkedRole",
                        "Resource": "*",
                        "Condition": {
                            "StringLike": {
                                "iam:AWSServiceName": [
                                    "rds.amazonaws.com",
                                    "rds.application-autoscaling.amazonaws.com"
                                ]
                            }
                        }
                    },
                    {
                        "Action": [
                            "devops-guru:SearchInsights",
                            "devops-guru:ListAnomaliesForInsight"
                        ],
                        "Effect": "Allow",
                        "Resource": "*",
                        "Condition": {
                            "ForAllValues:StringEquals": {
                                "devops-guru:ServiceNames": [
                                    "RDS"
                                ]
                            },
                            "Null": {
                                "devops-guru:ServiceNames": "false"
                            }
                        }
                    }
                ]
            },
            "tags": []
        },
        {
            "name": "Prod-Cognito-Policy",
            "arn": "arn:aws:iam::975049982984:role/Prod-Application-Role",
            "entity": "Prod-Application-Role",
            "version_id": "v1",
            "type": "Inline",
            "attached": true,
            "document": {
                "Version": "2012-10-17",
                "Statement": [
                    {
                        "Effect": "Allow",
                        "Action": [
                            "cognito-identity:*",
                            "cognito-idp:AdminCreateUser",
                            "cognito-idp:AdminGetUser",
                            "cognito-idp:AdminDeleteUser",
                            "cognito-idp:AdminUpdateUserAttributes",
                            "cognito-idp:ListUsers",
                            "cognito-idp:AdminInitiateAuth",
                            "cognito-idp:AdminRespondToAuthChallenge"
                        ],
                        "Resource": [
                            "arn:aws:cognito-idp:us-east-1:975049982984:userpool/us-east-1_zUmjBXSMG"
                        ]
                    }
                ]
            },
            "tags": []
        },
        {
            "name": "Prod-RDS-Policy",
            "arn": "arn:aws:iam::975049982984:role/Prod-Application-Role",
            "entity": "Prod-Application-Role",
            "version_id": "v1",
            "type": "Inline",
            "attached": true,
            "document": {
                "Version": "2012-10-17",
                "Statement": [
                    {
                        "Effect": "Allow",
                        "Action": [
                            "rds:*"
                        ],
                        "Resource": "arn:aws:rds:us-east-1:975049982984:db:prod-database"
                    }
                ]
            },
            "tags": []
        },
        {
            "name": "Prod-S3-Bucket-Policy",
            "arn": "arn:aws:iam::975049982984:role/Prod-Application-Role",
            "entity": "Prod-Application-Role",
            "version_id": "v1",
            "type": "Inline",
            "attached": true,
            "document": {
                "Version": "2012-10-17",
                "Statement": [
                    {
                        "Effect": "Allow",
                        "Action": [
                            "s3:*",
                            "s3-object-lambda:*"
                        ],
                        "Resource": [
                            "arn:aws:s3:::rmfx-app-file-uploads-prod",
                            "arn:aws:s3:::rmfx-app-file-uploads-prod/*"
                        ]
                    }
                ]
            },
            "tags": []
        }
    ],
    "saml_providers": [
        {
            "Arn": "arn:aws:iam::975049982984:saml-provider/microsoft",
            "ValidUntil": "2124-08-28T02:49:11+00:00",
            "CreateDate": "2024-08-28T02:49:11+00:00"
        },
        {
            "Arn": "arn:aws:iam::975049982984:saml-provider/AWSSSO_a6c158234b02d7c0_DO_NOT_DELETE",
            "ValidUntil": "2124-08-30T13:10:21+00:00",
            "CreateDate": "2024-08-30T13:10:21+00:00"
        }
    ],
    "server_certificates": [],
    "access_keys_metadata": {
        "('iyersri', 'arn:aws:iam::975049982984:user/iyersri')": [],
        "('service-account-backend', 'arn:aws:iam::975049982984:user/service-account-backend')": [
            {
                "UserName": "service-account-backend",
                "AccessKeyId": "AKIA6GBMCAQEHSSED556",
                "Status": "Active",
                "CreateDate": "2024-09-15T06:45:20+00:00"
            },
            {
                "UserName": "service-account-backend",
                "AccessKeyId": "AKIA6GBMCAQEATECQFOD",
                "Status": "Active",
                "CreateDate": "2024-09-26T13:09:27+00:00"
            }
        ],
        "('vibhor', 'arn:aws:iam::975049982984:user/vibhor')": [
            {
                "UserName": "vibhor",
                "AccessKeyId": "AKIA6GBMCAQEK46HXF56",
                "Status": "Active",
                "CreateDate": "2024-07-25T10:40:26+00:00"
            }
        ]
    },
    "last_accessed_services": {
        "('iyersri', 'arn:aws:iam::975049982984:user/iyersri')": [
            {
                "ServiceName": "AWS App2Container",
                "ServiceNamespace": "a2c",
                "TotalAuthenticatedEntities": 0
            },
            {
                "ServiceName": "Alexa for Business",
                "ServiceNamespace": "a4b",
                "TotalAuthenticatedEntities": 0
            },
            {
                "ServiceName": "AWS IAM Access Analyzer",
                "LastAuthenticated": "2024-08-23T03:35:49+00:00",
                "ServiceNamespace": "access-analyzer",
                "LastAuthenticatedEntity": "arn:aws:iam::975049982984:user/iyersri",
                "LastAuthenticatedRegion": "us-east-1",
                "TotalAuthenticatedEntities": 1
            },
            {
                "ServiceName": "AWS Account Management",
                "LastAuthenticated": "2024-08-24T17:35:33+00:00",
                "ServiceNamespace": "account",
                "LastAuthenticatedEntity": "arn:aws:iam::975049982984:user/iyersri",
                "LastAuthenticatedRegion": "us-east-1",
                "TotalAuthenticatedEntities": 1
            },
            {
                "ServiceName": "AWS Certificate Manager",
                "ServiceNamespace": "acm",
                "TotalAuthenticatedEntities": 0
            },
            {
                "ServiceName": "AWS Private Certificate Authority",
                "ServiceNamespace": "acm-pca",
                "TotalAuthenticatedEntities": 0
            },
            {
                "ServiceName": "AWS Activate",
                "ServiceNamespace": "activate",
                "TotalAuthenticatedEntities": 0
            },
            {
                "ServiceName": "Amazon Managed Workflows for Apache Airflow",
                "ServiceNamespace": "airflow",
                "TotalAuthenticatedEntities": 0
            },
            {
                "ServiceName": "AWS Amplify",
                "ServiceNamespace": "amplify",
                "TotalAuthenticatedEntities": 0
            },
            {
                "ServiceName": "AWS Amplify Admin",
                "ServiceNamespace": "amplifybackend",
                "TotalAuthenticatedEntities": 0
            },
            {
                "ServiceName": "AWS Amplify UI Builder",
                "ServiceNamespace": "amplifyuibuilder",
                "TotalAuthenticatedEntities": 0
            },
            {
                "ServiceName": "Amazon OpenSearch Serverless",
                "ServiceNamespace": "aoss",
                "TotalAuthenticatedEntities": 0
            },
            {
                "ServiceName": "Manage - Amazon API Gateway",
                "ServiceNamespace": "apigateway",
                "TotalAuthenticatedEntities": 0
            },
            {
                "ServiceName": "Amazon AppIntegrations",
                "ServiceNamespace": "app-integrations",
                "TotalAuthenticatedEntities": 0
            },
            {
                "ServiceName": "AWS AppConfig",
                "ServiceNamespace": "appconfig",
                "TotalAuthenticatedEntities": 0
            },
            {
                "ServiceName": "AWS AppFabric",
                "ServiceNamespace": "appfabric",
                "TotalAuthenticatedEntities": 0
            },
            {
                "ServiceName": "Amazon AppFlow",
                "ServiceNamespace": "appflow",
                "TotalAuthenticatedEntities": 0
            },
            {
                "ServiceName": "AWS Application Auto Scaling",
                "ServiceNamespace": "application-autoscaling",
                "TotalAuthenticatedEntities": 0
            },
            {
                "ServiceName": "AWS Application Cost Profiler Service",
                "ServiceNamespace": "application-cost-profiler",
                "TotalAuthenticatedEntities": 0
            },
            {
                "ServiceName": "Amazon CloudWatch Application Signals",
                "ServiceNamespace": "application-signals",
                "TotalAuthenticatedEntities": 0
            },
            {
                "ServiceName": "AWS Application Transformation Service",
                "ServiceNamespace": "application-transformation",
                "TotalAuthenticatedEntities": 0
            },
            {
                "ServiceName": "Amazon CloudWatch Application Insights",
                "ServiceNamespace": "applicationinsights",
                "TotalAuthenticatedEntities": 0
            },
            {
                "ServiceName": "AWS App Mesh",
                "ServiceNamespace": "appmesh",
                "TotalAuthenticatedEntities": 0
            },
            {
                "ServiceName": "AWS App Mesh Preview",
                "ServiceNamespace": "appmesh-preview",
                "TotalAuthenticatedEntities": 0
            },
            {
                "ServiceName": "AWS App Runner",
                "ServiceNamespace": "apprunner",
                "TotalAuthenticatedEntities": 0
            },
            {
                "ServiceName": "Amazon AppStream 2.0",
                "ServiceNamespace": "appstream",
                "TotalAuthenticatedEntities": 0
            },
            {
                "ServiceName": "AWS App Studio",
                "ServiceNamespace": "appstudio",
                "TotalAuthenticatedEntities": 0
            },
            {
                "ServiceName": "AWS AppSync",
                "ServiceNamespace": "appsync",
                "TotalAuthenticatedEntities": 0
            },
            {
                "ServiceName": "AWS Mainframe Modernization Application Testing provides tools and resources for automated functional equivalence testing for your migration projects.",
                "ServiceNamespace": "apptest",
                "TotalAuthenticatedEntities": 0
            },
            {
                "ServiceName": "Amazon Managed Service for Prometheus",
                "ServiceNamespace": "aps",
                "TotalAuthenticatedEntities": 0
            },
            {
                "ServiceName": "Amazon Route 53 Application Recovery Controller - Zonal Shift",
                "ServiceNamespace": "arc-zonal-shift",
                "TotalAuthenticatedEntities": 0
            },
            {
                "ServiceName": "Application Discovery Arsenal",
                "ServiceNamespace": "arsenal",
                "TotalAuthenticatedEntities": 0
            },
            {
                "ServiceName": "AWS Artifact",
                "ServiceNamespace": "artifact",
                "TotalAuthenticatedEntities": 0
            },
            {
                "ServiceName": "Amazon Athena",
                "ServiceNamespace": "athena",
                "TotalAuthenticatedEntities": 0
            },
            {
                "ServiceName": "AWS Audit Manager",
                "ServiceNamespace": "auditmanager",
                "TotalAuthenticatedEntities": 0
            },
            {
                "ServiceName": "Amazon EC2 Auto Scaling",
                "ServiceNamespace": "autoscaling",
                "TotalAuthenticatedEntities": 0
            },
            {
                "ServiceName": "AWS Auto Scaling",
                "ServiceNamespace": "autoscaling-plans",
                "TotalAuthenticatedEntities": 0
            },
            {
                "ServiceName": "AWS Marketplace",
                "LastAuthenticated": "2024-08-28T03:31:57+00:00",
                "ServiceNamespace": "aws-marketplace",
                "LastAuthenticatedEntity": "arn:aws:iam::975049982984:user/iyersri",
                "LastAuthenticatedRegion": "us-east-1",
                "TotalAuthenticatedEntities": 1
            },
            {
                "ServiceName": "AWS Marketplace Management Portal",
                "ServiceNamespace": "aws-marketplace-management",
                "TotalAuthenticatedEntities": 0
            },
            {
                "ServiceName": "AWS Billing Console",
                "LastAuthenticated": "2024-08-24T17:35:33+00:00",
                "ServiceNamespace": "aws-portal",
                "LastAuthenticatedEntity": "arn:aws:iam::975049982984:user/iyersri",
                "LastAuthenticatedRegion": "us-east-1",
                "TotalAuthenticatedEntities": 1
            },
            {
                "ServiceName": "AWS Connector Service",
                "ServiceNamespace": "awsconnector",
                "TotalAuthenticatedEntities": 0
            },
            {
                "ServiceName": "AWS B2B Data Interchange",
                "ServiceNamespace": "b2bi",
                "TotalAuthenticatedEntities": 0
            },
            {
                "ServiceName": "AWS Backup",
                "ServiceNamespace": "backup",
                "TotalAuthenticatedEntities": 0
            },
            {
                "ServiceName": "AWS Backup Gateway",
                "ServiceNamespace": "backup-gateway",
                "TotalAuthenticatedEntities": 0
            },
            {
                "ServiceName": "AWS Backup storage",
                "ServiceNamespace": "backup-storage",
                "TotalAuthenticatedEntities": 0
            },
            {
                "ServiceName": "AWS Batch",
                "ServiceNamespace": "batch",
                "TotalAuthenticatedEntities": 0
            },
            {
                "ServiceName": "AWS Billing And Cost Management Data Exports",
                "ServiceNamespace": "bcm-data-exports",
                "TotalAuthenticatedEntities": 0
            },
            {
                "ServiceName": "Amazon Bedrock",
                "LastAuthenticated": "2024-08-28T03:33:50+00:00",
                "ServiceNamespace": "bedrock",
                "LastAuthenticatedEntity": "arn:aws:iam::975049982984:user/iyersri",
                "LastAuthenticatedRegion": "us-west-2",
                "TotalAuthenticatedEntities": 1
            },
            {
                "ServiceName": "AWS Billing",
                "LastAuthenticated": "2024-08-24T17:35:33+00:00",
                "ServiceNamespace": "billing",
                "LastAuthenticatedEntity": "arn:aws:iam::975049982984:user/iyersri",
                "LastAuthenticatedRegion": "us-east-1",
                "TotalAuthenticatedEntities": 1
            },
            {
                "ServiceName": "AWS Billing Conductor",
                "ServiceNamespace": "billingconductor",
                "TotalAuthenticatedEntities": 0
            },
            {
                "ServiceName": "Amazon Braket",
                "ServiceNamespace": "braket",
                "TotalAuthenticatedEntities": 0
            },
            {
                "ServiceName": "AWS Budget Service",
                "LastAuthenticated": "2024-08-24T17:35:22+00:00",
                "ServiceNamespace": "budgets",
                "LastAuthenticatedEntity": "arn:aws:iam::975049982984:user/iyersri",
                "LastAuthenticatedRegion": "us-east-1",
                "TotalAuthenticatedEntities": 1
            },
            {
                "ServiceName": "AWS BugBust",
                "ServiceNamespace": "bugbust",
                "TotalAuthenticatedEntities": 0
            },
            {
                "ServiceName": "Amazon Connect Cases",
                "ServiceNamespace": "cases",
                "TotalAuthenticatedEntities": 0
            },
            {
                "ServiceName": "Amazon Keyspaces (for Apache Cassandra)",
                "ServiceNamespace": "cassandra",
                "TotalAuthenticatedEntities": 0
            },
            {
                "ServiceName": "AWS Cost Explorer Service",
                "LastAuthenticated": "2024-08-28T13:18:47+00:00",
                "ServiceNamespace": "ce",
                "LastAuthenticatedEntity": "arn:aws:iam::975049982984:user/iyersri",
                "LastAuthenticatedRegion": "us-east-1",
                "TotalAuthenticatedEntities": 1
            },
            {
                "ServiceName": "AWS Chatbot",
                "ServiceNamespace": "chatbot",
                "TotalAuthenticatedEntities": 0
            },
            {
                "ServiceName": "Amazon Chime",
                "ServiceNamespace": "chime",
                "TotalAuthenticatedEntities": 0
            },
            {
                "ServiceName": "AWS Clean Rooms",
                "LastAuthenticated": "2024-08-20T01:19:55+00:00",
                "ServiceNamespace": "cleanrooms",
                "LastAuthenticatedEntity": "arn:aws:iam::975049982984:user/iyersri",
                "LastAuthenticatedRegion": "us-east-1",
                "TotalAuthenticatedEntities": 1
            },
            {
                "ServiceName": "AWS Clean Rooms ML",
                "ServiceNamespace": "cleanrooms-ml",
                "TotalAuthenticatedEntities": 0
            },
            {
                "ServiceName": "AWS Cloud9",
                "ServiceNamespace": "cloud9",
                "TotalAuthenticatedEntities": 0
            },
            {
                "ServiceName": "Amazon Cloud Directory",
                "ServiceNamespace": "clouddirectory",
                "TotalAuthenticatedEntities": 0
            },
            {
                "ServiceName": "AWS CloudFormation",
                "ServiceNamespace": "cloudformation",
                "TotalAuthenticatedEntities": 0
            },
            {
                "ServiceName": "Amazon CloudFront",
                "ServiceNamespace": "cloudfront",
                "TotalAuthenticatedEntities": 0
            },
            {
                "ServiceName": "Amazon CloudFront KeyValueStore",
                "ServiceNamespace": "cloudfront-keyvaluestore",
                "TotalAuthenticatedEntities": 0
            },
            {
                "ServiceName": "AWS CloudHSM",
                "ServiceNamespace": "cloudhsm",
                "TotalAuthenticatedEntities": 0
            },
            {
                "ServiceName": "Amazon CloudSearch",
                "ServiceNamespace": "cloudsearch",
                "TotalAuthenticatedEntities": 0
            },
            {
                "ServiceName": "AWS CloudShell",
                "ServiceNamespace": "cloudshell",
                "TotalAuthenticatedEntities": 0
            },
            {
                "ServiceName": "AWS CloudTrail",
                "ServiceNamespace": "cloudtrail",
                "TotalAuthenticatedEntities": 0
            },
            {
                "ServiceName": "AWS CloudTrail Data",
                "ServiceNamespace": "cloudtrail-data",
                "TotalAuthenticatedEntities": 0
            },
            {
                "ServiceName": "Amazon CloudWatch",
                "LastAuthenticated": "2024-08-28T13:17:25+00:00",
                "ServiceNamespace": "cloudwatch",
                "LastAuthenticatedEntity": "arn:aws:iam::975049982984:user/iyersri",
                "LastAuthenticatedRegion": "us-east-1",
                "TotalAuthenticatedEntities": 1
            },
            {
                "ServiceName": "AWS CodeArtifact",
                "ServiceNamespace": "codeartifact",
                "TotalAuthenticatedEntities": 0
            },
            {
                "ServiceName": "AWS CodeBuild",
                "ServiceNamespace": "codebuild",
                "TotalAuthenticatedEntities": 0
            },
            {
                "ServiceName": "Amazon CodeCatalyst",
                "ServiceNamespace": "codecatalyst",
                "TotalAuthenticatedEntities": 0
            },
            {
                "ServiceName": "AWS CodeCommit",
                "ServiceNamespace": "codecommit",
                "TotalAuthenticatedEntities": 0
            },
            {
                "ServiceName": "AWS CodeConnections",
                "ServiceNamespace": "codeconnections",
                "TotalAuthenticatedEntities": 0
            },
            {
                "ServiceName": "AWS CodeDeploy",
                "ServiceNamespace": "codedeploy",
                "TotalAuthenticatedEntities": 0
            },
            {
                "ServiceName": "AWS CodeDeploy secure host commands service",
                "ServiceNamespace": "codedeploy-commands-secure",
                "TotalAuthenticatedEntities": 0
            },
            {
                "ServiceName": "Amazon CodeGuru",
                "ServiceNamespace": "codeguru",
                "TotalAuthenticatedEntities": 0
            },
            {
                "ServiceName": "Amazon CodeGuru Profiler",
                "ServiceNamespace": "codeguru-profiler",
                "TotalAuthenticatedEntities": 0
            },
            {
                "ServiceName": "Amazon CodeGuru Reviewer",
                "ServiceNamespace": "codeguru-reviewer",
                "TotalAuthenticatedEntities": 0
            },
            {
                "ServiceName": "Amazon CodeGuru Security",
                "ServiceNamespace": "codeguru-security",
                "TotalAuthenticatedEntities": 0
            },
            {
                "ServiceName": "AWS CodePipeline",
                "ServiceNamespace": "codepipeline",
                "TotalAuthenticatedEntities": 0
            },
            {
                "ServiceName": "AWS CodeStar",
                "ServiceNamespace": "codestar",
                "TotalAuthenticatedEntities": 0
            },
            {
                "ServiceName": "AWS CodeStar Connections",
                "ServiceNamespace": "codestar-connections",
                "TotalAuthenticatedEntities": 0
            },
            {
                "ServiceName": "AWS CodeStar Notifications",
                "ServiceNamespace": "codestar-notifications",
                "TotalAuthenticatedEntities": 0
            },
            {
                "ServiceName": "Amazon CodeWhisperer",
                "ServiceNamespace": "codewhisperer",
                "TotalAuthenticatedEntities": 0
            },
            {
                "ServiceName": "Amazon Cognito Identity",
                "ServiceNamespace": "cognito-identity",
                "TotalAuthenticatedEntities": 0
            },
            {
                "ServiceName": "Amazon Cognito User Pools",
                "ServiceNamespace": "cognito-idp",
                "TotalAuthenticatedEntities": 0
            },
            {
                "ServiceName": "Amazon Cognito Sync",
                "ServiceNamespace": "cognito-sync",
                "TotalAuthenticatedEntities": 0
            },
            {
                "ServiceName": "Amazon Comprehend",
                "ServiceNamespace": "comprehend",
                "TotalAuthenticatedEntities": 0
            },
            {
                "ServiceName": "Amazon Comprehend Medical",
                "ServiceNamespace": "comprehendmedical",
                "TotalAuthenticatedEntities": 0
            },
            {
                "ServiceName": "AWS Compute Optimizer",
                "ServiceNamespace": "compute-optimizer",
                "TotalAuthenticatedEntities": 0
            },
            {
                "ServiceName": "AWS Config",
                "ServiceNamespace": "config",
                "TotalAuthenticatedEntities": 0
            },
            {
                "ServiceName": "Amazon Connect",
                "ServiceNamespace": "connect",
                "TotalAuthenticatedEntities": 0
            },
            {
                "ServiceName": "High-volume outbound communications",
                "ServiceNamespace": "connect-campaigns",
                "TotalAuthenticatedEntities": 0
            },
            {
                "ServiceName": "AWS Console Mobile App",
                "ServiceNamespace": "consoleapp",
                "TotalAuthenticatedEntities": 0
            },
            {
                "ServiceName": "AWS Consolidated Billing",
                "ServiceNamespace": "consolidatedbilling",
                "TotalAuthenticatedEntities": 0
            },
            {
                "ServiceName": "AWS Control Catalog",
                "ServiceNamespace": "controlcatalog",
                "TotalAuthenticatedEntities": 0
            },
            {
                "ServiceName": "AWS Control Tower",
                "ServiceNamespace": "controltower",
                "TotalAuthenticatedEntities": 0
            },
            {
                "ServiceName": "AWS Cost Optimization Hub",
                "LastAuthenticated": "2024-08-28T13:18:47+00:00",
                "ServiceNamespace": "cost-optimization-hub",
                "LastAuthenticatedEntity": "arn:aws:iam::975049982984:user/iyersri",
                "LastAuthenticatedRegion": "us-east-1",
                "TotalAuthenticatedEntities": 1
            },
            {
                "ServiceName": "AWS Cost and Usage Report",
                "ServiceNamespace": "cur",
                "TotalAuthenticatedEntities": 0
            },
            {
                "ServiceName": "AWS Customer Verification Service",
                "ServiceNamespace": "customer-verification",
                "TotalAuthenticatedEntities": 0
            },
            {
                "ServiceName": "AWS Glue DataBrew",
                "ServiceNamespace": "databrew",
                "TotalAuthenticatedEntities": 0
            },
            {
                "ServiceName": "AWS Data Exchange",
                "ServiceNamespace": "dataexchange",
                "TotalAuthenticatedEntities": 0
            },
            {
                "ServiceName": "AWS Data Pipeline",
                "ServiceNamespace": "datapipeline",
                "TotalAuthenticatedEntities": 0
            },
            {
                "ServiceName": "AWS DataSync",
                "ServiceNamespace": "datasync",
                "TotalAuthenticatedEntities": 0
            },
            {
                "ServiceName": "Amazon DataZone",
                "ServiceNamespace": "datazone",
                "TotalAuthenticatedEntities": 0
            },
            {
                "ServiceName": "Amazon DynamoDB Accelerator (DAX)",
                "ServiceNamespace": "dax",
                "TotalAuthenticatedEntities": 0
            },
            {
                "ServiceName": "Database Query Metadata Service",
                "ServiceNamespace": "dbqms",
                "TotalAuthenticatedEntities": 0
            },
            {
                "ServiceName": "AWS Deadline Cloud",
                "ServiceNamespace": "deadline",
                "TotalAuthenticatedEntities": 0
            },
            {
                "ServiceName": "AWS DeepComposer",
                "ServiceNamespace": "deepcomposer",
                "TotalAuthenticatedEntities": 0
            },
            {
                "ServiceName": "AWS DeepLens",
                "ServiceNamespace": "deeplens",
                "TotalAuthenticatedEntities": 0
            },
            {
                "ServiceName": "AWS DeepRacer",
                "ServiceNamespace": "deepracer",
                "TotalAuthenticatedEntities": 0
            },
            {
                "ServiceName": "Amazon Detective",
                "ServiceNamespace": "detective",
                "TotalAuthenticatedEntities": 0
            },
            {
                "ServiceName": "AWS Device Farm",
                "ServiceNamespace": "devicefarm",
                "TotalAuthenticatedEntities": 0
            },
            {
                "ServiceName": "Amazon DevOps Guru",
                "ServiceNamespace": "devops-guru",
                "TotalAuthenticatedEntities": 0
            },
            {
                "ServiceName": "AWS Direct Connect",
                "ServiceNamespace": "directconnect",
                "TotalAuthenticatedEntities": 0
            },
            {
                "ServiceName": "AWS Application Discovery Service",
                "ServiceNamespace": "discovery",
                "TotalAuthenticatedEntities": 0
            },
            {
                "ServiceName": "Amazon Data Lifecycle Manager",
                "ServiceNamespace": "dlm",
                "TotalAuthenticatedEntities": 0
            },
            {
                "ServiceName": "AWS Database Migration Service",
                "ServiceNamespace": "dms",
                "TotalAuthenticatedEntities": 0
            },
            {
                "ServiceName": "Amazon DocumentDB Elastic Clusters",
                "ServiceNamespace": "docdb-elastic",
                "TotalAuthenticatedEntities": 0
            },
            {
                "ServiceName": "AWS Elastic Disaster Recovery",
                "ServiceNamespace": "drs",
                "TotalAuthenticatedEntities": 0
            },
            {
                "ServiceName": "AWS Directory Service",
                "ServiceNamespace": "ds",
                "TotalAuthenticatedEntities": 0
            },
            {
                "ServiceName": "AWS Directory Service Data",
                "ServiceNamespace": "ds-data",
                "TotalAuthenticatedEntities": 0
            },
            {
                "ServiceName": "Amazon DynamoDB",
                "ServiceNamespace": "dynamodb",
                "TotalAuthenticatedEntities": 0
            },
            {
                "ServiceName": "Amazon Elastic Block Store",
                "ServiceNamespace": "ebs",
                "TotalAuthenticatedEntities": 0
            },
            {
                "ServiceName": "Amazon EC2",
                "LastAuthenticated": "2024-08-28T13:18:47+00:00",
                "ServiceNamespace": "ec2",
                "LastAuthenticatedEntity": "arn:aws:iam::975049982984:user/iyersri",
                "LastAuthenticatedRegion": "us-west-2",
                "TotalAuthenticatedEntities": 1
            },
            {
                "ServiceName": "Amazon EC2 Instance Connect",
                "ServiceNamespace": "ec2-instance-connect",
                "TotalAuthenticatedEntities": 0
            },
            {
                "ServiceName": "Amazon Message Delivery Service",
                "ServiceNamespace": "ec2messages",
                "TotalAuthenticatedEntities": 0
            },
            {
                "ServiceName": "Amazon Elastic Container Registry",
                "ServiceNamespace": "ecr",
                "TotalAuthenticatedEntities": 0
            },
            {
                "ServiceName": "Amazon Elastic Container Registry Public",
                "ServiceNamespace": "ecr-public",
                "TotalAuthenticatedEntities": 0
            },
            {
                "ServiceName": "Amazon Elastic Container Service",
                "ServiceNamespace": "ecs",
                "TotalAuthenticatedEntities": 0
            },
            {
                "ServiceName": "Amazon Elastic Kubernetes Service",
                "ServiceNamespace": "eks",
                "TotalAuthenticatedEntities": 0
            },
            {
                "ServiceName": "Amazon EKS Auth",
                "ServiceNamespace": "eks-auth",
                "TotalAuthenticatedEntities": 0
            },
            {
                "ServiceName": "Amazon Elastic Inference",
                "ServiceNamespace": "elastic-inference",
                "TotalAuthenticatedEntities": 0
            },
            {
                "ServiceName": "Amazon ElastiCache",
                "ServiceNamespace": "elasticache",
                "TotalAuthenticatedEntities": 0
            },
            {
                "ServiceName": "AWS Elastic Beanstalk",
                "ServiceNamespace": "elasticbeanstalk",
                "TotalAuthenticatedEntities": 0
            },
            {
                "ServiceName": "Amazon Elastic File System",
                "ServiceNamespace": "elasticfilesystem",
                "TotalAuthenticatedEntities": 0
            },
            {
                "ServiceName": "Elastic Load Balancing",
                "ServiceNamespace": "elasticloadbalancing",
                "TotalAuthenticatedEntities": 0
            },
            {
                "ServiceName": "Amazon Elastic MapReduce",
                "ServiceNamespace": "elasticmapreduce",
                "TotalAuthenticatedEntities": 0
            },
            {
                "ServiceName": "Amazon Elastic Transcoder",
                "ServiceNamespace": "elastictranscoder",
                "TotalAuthenticatedEntities": 0
            },
            {
                "ServiceName": "AWS Elemental Appliances and Software Activation Service",
                "ServiceNamespace": "elemental-activations",
                "TotalAuthenticatedEntities": 0
            },
            {
                "ServiceName": "AWS Elemental Appliances and Software",
                "ServiceNamespace": "elemental-appliances-software",
                "TotalAuthenticatedEntities": 0
            },
            {
                "ServiceName": "AWS Elemental Support Cases",
                "ServiceNamespace": "elemental-support-cases",
                "TotalAuthenticatedEntities": 0
            },
            {
                "ServiceName": "AWS Elemental Support Content",
                "ServiceNamespace": "elemental-support-content",
                "TotalAuthenticatedEntities": 0
            },
            {
                "ServiceName": "Amazon EMR on EKS (EMR Containers)",
                "ServiceNamespace": "emr-containers",
                "TotalAuthenticatedEntities": 0
            },
            {
                "ServiceName": "Amazon EMR Serverless",
                "ServiceNamespace": "emr-serverless",
                "TotalAuthenticatedEntities": 0
            },
            {
                "ServiceName": "AWS Entity Resolution",
                "ServiceNamespace": "entityresolution",
                "TotalAuthenticatedEntities": 0
            },
            {
                "ServiceName": "Amazon OpenSearch Service",
                "ServiceNamespace": "es",
                "TotalAuthenticatedEntities": 0
            },
            {
                "ServiceName": "Amazon EventBridge",
                "ServiceNamespace": "events",
                "TotalAuthenticatedEntities": 0
            },
            {
                "ServiceName": "Amazon CloudWatch Evidently",
                "ServiceNamespace": "evidently",
                "TotalAuthenticatedEntities": 0
            },
            {
                "ServiceName": "Amazon API Gateway",
                "ServiceNamespace": "execute-api",
                "TotalAuthenticatedEntities": 0
            },
            {
                "ServiceName": "Amazon FinSpace",
                "ServiceNamespace": "finspace",
                "TotalAuthenticatedEntities": 0
            },
            {
                "ServiceName": "Amazon FinSpace API",
                "ServiceNamespace": "finspace-api",
                "TotalAuthenticatedEntities": 0
            },
            {
                "ServiceName": "Amazon Kinesis Firehose",
                "ServiceNamespace": "firehose",
                "TotalAuthenticatedEntities": 0
            },
            {
                "ServiceName": "AWS Fault Injection Service",
                "ServiceNamespace": "fis",
                "TotalAuthenticatedEntities": 0
            },
            {
                "ServiceName": "AWS Firewall Manager",
                "ServiceNamespace": "fms",
                "TotalAuthenticatedEntities": 0
            },
            {
                "ServiceName": "Amazon Forecast",
                "ServiceNamespace": "forecast",
                "TotalAuthenticatedEntities": 0
            },
            {
                "ServiceName": "Amazon Fraud Detector",
                "ServiceNamespace": "frauddetector",
                "TotalAuthenticatedEntities": 0
            },
            {
                "ServiceName": "Amazon FreeRTOS",
                "ServiceNamespace": "freertos",
                "TotalAuthenticatedEntities": 0
            },
            {
                "ServiceName": "AWS Free Tier",
                "LastAuthenticated": "2024-08-24T17:35:33+00:00",
                "ServiceNamespace": "freetier",
                "LastAuthenticatedEntity": "arn:aws:iam::975049982984:user/iyersri",
                "LastAuthenticatedRegion": "us-east-1",
                "TotalAuthenticatedEntities": 1
            },
            {
                "ServiceName": "Amazon FSx",
                "ServiceNamespace": "fsx",
                "TotalAuthenticatedEntities": 0
            },
            {
                "ServiceName": "Amazon GameLift",
                "ServiceNamespace": "gamelift",
                "TotalAuthenticatedEntities": 0
            },
            {
                "ServiceName": "Amazon Location",
                "ServiceNamespace": "geo",
                "TotalAuthenticatedEntities": 0
            },
            {
                "ServiceName": "Amazon S3 Glacier",
                "ServiceNamespace": "glacier",
                "TotalAuthenticatedEntities": 0
            },
            {
                "ServiceName": "AWS Global Accelerator",
                "ServiceNamespace": "globalaccelerator",
                "TotalAuthenticatedEntities": 0
            },
            {
                "ServiceName": "AWS Glue",
                "ServiceNamespace": "glue",
                "TotalAuthenticatedEntities": 0
            },
            {
                "ServiceName": "Amazon Managed Grafana",
                "ServiceNamespace": "grafana",
                "TotalAuthenticatedEntities": 0
            },
            {
                "ServiceName": "AWS IoT Greengrass",
                "ServiceNamespace": "greengrass",
                "TotalAuthenticatedEntities": 0
            },
            {
                "ServiceName": "AWS Ground Station",
                "ServiceNamespace": "groundstation",
                "TotalAuthenticatedEntities": 0
            },
            {
                "ServiceName": "Amazon GroundTruth Labeling",
                "ServiceNamespace": "groundtruthlabeling",
                "TotalAuthenticatedEntities": 0
            },
            {
                "ServiceName": "Amazon GuardDuty",
                "ServiceNamespace": "guardduty",
                "TotalAuthenticatedEntities": 0
            },
            {
                "ServiceName": "AWS Health APIs and Notifications",
                "LastAuthenticated": "2024-08-28T13:18:47+00:00",
                "ServiceNamespace": "health",
                "LastAuthenticatedEntity": "arn:aws:iam::975049982984:user/iyersri",
                "LastAuthenticatedRegion": "us-east-1",
                "TotalAuthenticatedEntities": 1
            },
            {
                "ServiceName": "AWS HealthLake",
                "ServiceNamespace": "healthlake",
                "TotalAuthenticatedEntities": 0
            },
            {
                "ServiceName": "Amazon Honeycode",
                "ServiceNamespace": "honeycode",
                "TotalAuthenticatedEntities": 0
            },
            {
                "ServiceName": "AWS Identity and Access Management",
                "LastAuthenticated": "2024-08-28T03:32:53+00:00",
                "ServiceNamespace": "iam",
                "LastAuthenticatedEntity": "arn:aws:iam::975049982984:user/iyersri",
                "LastAuthenticatedRegion": "us-east-1",
                "TotalAuthenticatedEntities": 1
            },
            {
                "ServiceName": "AWS Identity Sync",
                "ServiceNamespace": "identity-sync",
                "TotalAuthenticatedEntities": 0
            },
            {
                "ServiceName": "AWS Identity Store",
                "ServiceNamespace": "identitystore",
                "TotalAuthenticatedEntities": 0
            },
            {
                "ServiceName": "AWS Identity Store Auth",
                "ServiceNamespace": "identitystore-auth",
                "TotalAuthenticatedEntities": 0
            },
            {
                "ServiceName": "Amazon EC2 Image Builder",
                "ServiceNamespace": "imagebuilder",
                "TotalAuthenticatedEntities": 0
            },
            {
                "ServiceName": "AWS Import Export",
                "ServiceNamespace": "importexport",
                "TotalAuthenticatedEntities": 0
            },
            {
                "ServiceName": "Amazon Inspector",
                "ServiceNamespace": "inspector",
                "TotalAuthenticatedEntities": 0
            },
            {
                "ServiceName": "Amazon InspectorScan",
                "ServiceNamespace": "inspector-scan",
                "TotalAuthenticatedEntities": 0
            },
            {
                "ServiceName": "Amazon Inspector2",
                "ServiceNamespace": "inspector2",
                "TotalAuthenticatedEntities": 0
            },
            {
                "ServiceName": "Amazon CloudWatch Internet Monitor",
                "ServiceNamespace": "internetmonitor",
                "TotalAuthenticatedEntities": 0
            },
            {
                "ServiceName": "AWS Invoicing Service",
                "LastAuthenticated": "2024-08-24T17:35:33+00:00",
                "ServiceNamespace": "invoicing",
                "LastAuthenticatedEntity": "arn:aws:iam::975049982984:user/iyersri",
                "LastAuthenticatedRegion": "us-east-1",
                "TotalAuthenticatedEntities": 1
            },
            {
                "ServiceName": "AWS IoT",
                "ServiceNamespace": "iot",
                "TotalAuthenticatedEntities": 0
            },
            {
                "ServiceName": "AWS IoT Device Tester",
                "ServiceNamespace": "iot-device-tester",
                "TotalAuthenticatedEntities": 0
            },
            {
                "ServiceName": "AWS IoT 1-Click",
                "ServiceNamespace": "iot1click",
                "TotalAuthenticatedEntities": 0
            },
            {
                "ServiceName": "AWS IoT Analytics",
                "ServiceNamespace": "iotanalytics",
                "TotalAuthenticatedEntities": 0
            },
            {
                "ServiceName": "AWS IoT Core Device Advisor",
                "ServiceNamespace": "iotdeviceadvisor",
                "TotalAuthenticatedEntities": 0
            },
            {
                "ServiceName": "AWS IoT Events",
                "ServiceNamespace": "iotevents",
                "TotalAuthenticatedEntities": 0
            },
            {
                "ServiceName": "AWS IoT Fleet Hub for Device Management",
                "ServiceNamespace": "iotfleethub",
                "TotalAuthenticatedEntities": 0
            },
            {
                "ServiceName": "AWS IoT FleetWise",
                "ServiceNamespace": "iotfleetwise",
                "TotalAuthenticatedEntities": 0
            },
            {
                "ServiceName": "AWS IoT Jobs DataPlane",
                "ServiceNamespace": "iotjobsdata",
                "TotalAuthenticatedEntities": 0
            },
            {
                "ServiceName": "AWS IoT SiteWise",
                "ServiceNamespace": "iotsitewise",
                "TotalAuthenticatedEntities": 0
            },
            {
                "ServiceName": "AWS IoT TwinMaker",
                "ServiceNamespace": "iottwinmaker",
                "TotalAuthenticatedEntities": 0
            },
            {
                "ServiceName": "AWS IoT Wireless",
                "ServiceNamespace": "iotwireless",
                "TotalAuthenticatedEntities": 0
            },
            {
                "ServiceName": "AWS IQ",
                "ServiceNamespace": "iq",
                "TotalAuthenticatedEntities": 0
            }
        ],
        "('service-account-backend', 'arn:aws:iam::975049982984:user/service-account-backend')": [
            {
                "ServiceName": "Amazon Cognito User Pools",
                "LastAuthenticated": "2024-10-01T05:52:37+00:00",
                "ServiceNamespace": "cognito-idp",
                "LastAuthenticatedEntity": "arn:aws:iam::975049982984:user/service-account-backend",
                "LastAuthenticatedRegion": "us-east-1",
                "TotalAuthenticatedEntities": 1
            },
            {
                "ServiceName": "Amazon RDS",
                "ServiceNamespace": "rds",
                "TotalAuthenticatedEntities": 0
            },
            {
                "ServiceName": "Amazon S3",
                "LastAuthenticated": "2024-09-27T05:21:55+00:00",
                "ServiceNamespace": "s3",
                "LastAuthenticatedEntity": "arn:aws:iam::975049982984:user/service-account-backend",
                "LastAuthenticatedRegion": "us-east-1",
                "TotalAuthenticatedEntities": 1
            },
            {
                "ServiceName": "Amazon SES",
                "LastAuthenticated": "2024-09-13T12:20:24+00:00",
                "ServiceNamespace": "ses",
                "LastAuthenticatedEntity": "arn:aws:iam::975049982984:user/service-account-backend",
                "LastAuthenticatedRegion": "us-east-1",
                "TotalAuthenticatedEntities": 1
            }
        ],
        "('vibhor', 'arn:aws:iam::975049982984:user/vibhor')": [
            {
                "ServiceName": "AWS App2Container",
                "ServiceNamespace": "a2c",
                "TotalAuthenticatedEntities": 0
            },
            {
                "ServiceName": "Alexa for Business",
                "ServiceNamespace": "a4b",
                "TotalAuthenticatedEntities": 0
            },
            {
                "ServiceName": "AWS IAM Access Analyzer",
                "LastAuthenticated": "2024-08-30T23:45:55+00:00",
                "ServiceNamespace": "access-analyzer",
                "LastAuthenticatedEntity": "arn:aws:iam::975049982984:user/vibhor",
                "LastAuthenticatedRegion": "us-east-1",
                "TotalAuthenticatedEntities": 1
            },
            {
                "ServiceName": "AWS Account Management",
                "LastAuthenticated": "2024-08-30T14:16:45+00:00",
                "ServiceNamespace": "account",
                "LastAuthenticatedEntity": "arn:aws:iam::975049982984:user/vibhor",
                "LastAuthenticatedRegion": "us-east-1",
                "TotalAuthenticatedEntities": 1
            },
            {
                "ServiceName": "AWS Certificate Manager",
                "LastAuthenticated": "2024-08-01T17:08:09+00:00",
                "ServiceNamespace": "acm",
                "LastAuthenticatedEntity": "arn:aws:iam::975049982984:user/vibhor",
                "LastAuthenticatedRegion": "us-east-1",
                "TotalAuthenticatedEntities": 1
            },
            {
                "ServiceName": "AWS Private Certificate Authority",
                "LastAuthenticated": "2024-08-01T12:38:29+00:00",
                "ServiceNamespace": "acm-pca",
                "LastAuthenticatedEntity": "arn:aws:iam::975049982984:user/vibhor",
                "LastAuthenticatedRegion": "us-east-1",
                "TotalAuthenticatedEntities": 1
            },
            {
                "ServiceName": "AWS Activate",
                "ServiceNamespace": "activate",
                "TotalAuthenticatedEntities": 0
            },
            {
                "ServiceName": "Amazon Managed Workflows for Apache Airflow",
                "ServiceNamespace": "airflow",
                "TotalAuthenticatedEntities": 0
            },
            {
                "ServiceName": "AWS Amplify",
                "ServiceNamespace": "amplify",
                "TotalAuthenticatedEntities": 0
            },
            {
                "ServiceName": "AWS Amplify Admin",
                "ServiceNamespace": "amplifybackend",
                "TotalAuthenticatedEntities": 0
            },
            {
                "ServiceName": "AWS Amplify UI Builder",
                "ServiceNamespace": "amplifyuibuilder",
                "TotalAuthenticatedEntities": 0
            },
            {
                "ServiceName": "Amazon OpenSearch Serverless",
                "ServiceNamespace": "aoss",
                "TotalAuthenticatedEntities": 0
            },
            {
                "ServiceName": "Manage - Amazon API Gateway",
                "ServiceNamespace": "apigateway",
                "TotalAuthenticatedEntities": 0
            },
            {
                "ServiceName": "Amazon AppIntegrations",
                "ServiceNamespace": "app-integrations",
                "TotalAuthenticatedEntities": 0
            },
            {
                "ServiceName": "AWS AppConfig",
                "ServiceNamespace": "appconfig",
                "TotalAuthenticatedEntities": 0
            },
            {
                "ServiceName": "AWS AppFabric",
                "ServiceNamespace": "appfabric",
                "TotalAuthenticatedEntities": 0
            },
            {
                "ServiceName": "Amazon AppFlow",
                "ServiceNamespace": "appflow",
                "TotalAuthenticatedEntities": 0
            },
            {
                "ServiceName": "AWS Application Auto Scaling",
                "ServiceNamespace": "application-autoscaling",
                "TotalAuthenticatedEntities": 0
            },
            {
                "ServiceName": "AWS Application Cost Profiler Service",
                "ServiceNamespace": "application-cost-profiler",
                "TotalAuthenticatedEntities": 0
            },
            {
                "ServiceName": "Amazon CloudWatch Application Signals",
                "ServiceNamespace": "application-signals",
                "TotalAuthenticatedEntities": 0
            },
            {
                "ServiceName": "AWS Application Transformation Service",
                "ServiceNamespace": "application-transformation",
                "TotalAuthenticatedEntities": 0
            },
            {
                "ServiceName": "Amazon CloudWatch Application Insights",
                "ServiceNamespace": "applicationinsights",
                "TotalAuthenticatedEntities": 0
            },
            {
                "ServiceName": "AWS App Mesh",
                "ServiceNamespace": "appmesh",
                "TotalAuthenticatedEntities": 0
            },
            {
                "ServiceName": "AWS App Mesh Preview",
                "ServiceNamespace": "appmesh-preview",
                "TotalAuthenticatedEntities": 0
            },
            {
                "ServiceName": "AWS App Runner",
                "ServiceNamespace": "apprunner",
                "TotalAuthenticatedEntities": 0
            },
            {
                "ServiceName": "Amazon AppStream 2.0",
                "ServiceNamespace": "appstream",
                "TotalAuthenticatedEntities": 0
            },
            {
                "ServiceName": "AWS App Studio",
                "ServiceNamespace": "appstudio",
                "TotalAuthenticatedEntities": 0
            },
            {
                "ServiceName": "AWS AppSync",
                "ServiceNamespace": "appsync",
                "TotalAuthenticatedEntities": 0
            },
            {
                "ServiceName": "AWS Mainframe Modernization Application Testing provides tools and resources for automated functional equivalence testing for your migration projects.",
                "ServiceNamespace": "apptest",
                "TotalAuthenticatedEntities": 0
            },
            {
                "ServiceName": "Amazon Managed Service for Prometheus",
                "ServiceNamespace": "aps",
                "TotalAuthenticatedEntities": 0
            },
            {
                "ServiceName": "Amazon Route 53 Application Recovery Controller - Zonal Shift",
                "LastAuthenticated": "2024-08-01T19:23:58+00:00",
                "ServiceNamespace": "arc-zonal-shift",
                "LastAuthenticatedEntity": "arn:aws:iam::975049982984:user/vibhor",
                "LastAuthenticatedRegion": "us-east-1",
                "TotalAuthenticatedEntities": 1
            },
            {
                "ServiceName": "Application Discovery Arsenal",
                "ServiceNamespace": "arsenal",
                "TotalAuthenticatedEntities": 0
            },
            {
                "ServiceName": "AWS Artifact",
                "ServiceNamespace": "artifact",
                "TotalAuthenticatedEntities": 0
            },
            {
                "ServiceName": "Amazon Athena",
                "ServiceNamespace": "athena",
                "TotalAuthenticatedEntities": 0
            },
            {
                "ServiceName": "AWS Audit Manager",
                "ServiceNamespace": "auditmanager",
                "TotalAuthenticatedEntities": 0
            },
            {
                "ServiceName": "Amazon EC2 Auto Scaling",
                "LastAuthenticated": "2024-08-29T03:10:05+00:00",
                "ServiceNamespace": "autoscaling",
                "LastAuthenticatedEntity": "arn:aws:iam::975049982984:user/vibhor",
                "LastAuthenticatedRegion": "us-east-1",
                "TotalAuthenticatedEntities": 1
            },
            {
                "ServiceName": "AWS Auto Scaling",
                "ServiceNamespace": "autoscaling-plans",
                "TotalAuthenticatedEntities": 0
            },
            {
                "ServiceName": "AWS Marketplace",
                "ServiceNamespace": "aws-marketplace",
                "TotalAuthenticatedEntities": 0
            },
            {
                "ServiceName": "AWS Marketplace Management Portal",
                "ServiceNamespace": "aws-marketplace-management",
                "TotalAuthenticatedEntities": 0
            },
            {
                "ServiceName": "AWS Billing Console",
                "LastAuthenticated": "2024-08-30T14:16:45+00:00",
                "ServiceNamespace": "aws-portal",
                "LastAuthenticatedEntity": "arn:aws:iam::975049982984:user/vibhor",
                "LastAuthenticatedRegion": "us-east-1",
                "TotalAuthenticatedEntities": 1
            },
            {
                "ServiceName": "AWS Connector Service",
                "ServiceNamespace": "awsconnector",
                "TotalAuthenticatedEntities": 0
            },
            {
                "ServiceName": "AWS B2B Data Interchange",
                "ServiceNamespace": "b2bi",
                "TotalAuthenticatedEntities": 0
            },
            {
                "ServiceName": "AWS Backup",
                "ServiceNamespace": "backup",
                "TotalAuthenticatedEntities": 0
            },
            {
                "ServiceName": "AWS Backup Gateway",
                "ServiceNamespace": "backup-gateway",
                "TotalAuthenticatedEntities": 0
            },
            {
                "ServiceName": "AWS Backup storage",
                "ServiceNamespace": "backup-storage",
                "TotalAuthenticatedEntities": 0
            },
            {
                "ServiceName": "AWS Batch",
                "ServiceNamespace": "batch",
                "TotalAuthenticatedEntities": 0
            },
            {
                "ServiceName": "AWS Billing And Cost Management Data Exports",
                "ServiceNamespace": "bcm-data-exports",
                "TotalAuthenticatedEntities": 0
            },
            {
                "ServiceName": "Amazon Bedrock",
                "ServiceNamespace": "bedrock",
                "TotalAuthenticatedEntities": 0
            },
            {
                "ServiceName": "AWS Billing",
                "LastAuthenticated": "2024-08-30T14:16:45+00:00",
                "ServiceNamespace": "billing",
                "LastAuthenticatedEntity": "arn:aws:iam::975049982984:user/vibhor",
                "LastAuthenticatedRegion": "us-east-1",
                "TotalAuthenticatedEntities": 1
            },
            {
                "ServiceName": "AWS Billing Conductor",
                "ServiceNamespace": "billingconductor",
                "TotalAuthenticatedEntities": 0
            },
            {
                "ServiceName": "Amazon Braket",
                "ServiceNamespace": "braket",
                "TotalAuthenticatedEntities": 0
            },
            {
                "ServiceName": "AWS Budget Service",
                "LastAuthenticated": "2024-08-30T14:16:39+00:00",
                "ServiceNamespace": "budgets",
                "LastAuthenticatedEntity": "arn:aws:iam::975049982984:user/vibhor",
                "LastAuthenticatedRegion": "us-east-1",
                "TotalAuthenticatedEntities": 1
            },
            {
                "ServiceName": "AWS BugBust",
                "ServiceNamespace": "bugbust",
                "TotalAuthenticatedEntities": 0
            },
            {
                "ServiceName": "Amazon Connect Cases",
                "ServiceNamespace": "cases",
                "TotalAuthenticatedEntities": 0
            },
            {
                "ServiceName": "Amazon Keyspaces (for Apache Cassandra)",
                "ServiceNamespace": "cassandra",
                "TotalAuthenticatedEntities": 0
            },
            {
                "ServiceName": "AWS Cost Explorer Service",
                "LastAuthenticated": "2024-08-30T14:16:39+00:00",
                "ServiceNamespace": "ce",
                "LastAuthenticatedEntity": "arn:aws:iam::975049982984:user/vibhor",
                "LastAuthenticatedRegion": "us-east-1",
                "TotalAuthenticatedEntities": 1
            },
            {
                "ServiceName": "AWS Chatbot",
                "ServiceNamespace": "chatbot",
                "TotalAuthenticatedEntities": 0
            },
            {
                "ServiceName": "Amazon Chime",
                "ServiceNamespace": "chime",
                "TotalAuthenticatedEntities": 0
            },
            {
                "ServiceName": "AWS Clean Rooms",
                "ServiceNamespace": "cleanrooms",
                "TotalAuthenticatedEntities": 0
            },
            {
                "ServiceName": "AWS Clean Rooms ML",
                "ServiceNamespace": "cleanrooms-ml",
                "TotalAuthenticatedEntities": 0
            },
            {
                "ServiceName": "AWS Cloud9",
                "ServiceNamespace": "cloud9",
                "TotalAuthenticatedEntities": 0
            },
            {
                "ServiceName": "Amazon Cloud Directory",
                "ServiceNamespace": "clouddirectory",
                "TotalAuthenticatedEntities": 0
            },
            {
                "ServiceName": "AWS CloudFormation",
                "ServiceNamespace": "cloudformation",
                "TotalAuthenticatedEntities": 0
            },
            {
                "ServiceName": "Amazon CloudFront",
                "ServiceNamespace": "cloudfront",
                "TotalAuthenticatedEntities": 0
            },
            {
                "ServiceName": "Amazon CloudFront KeyValueStore",
                "ServiceNamespace": "cloudfront-keyvaluestore",
                "TotalAuthenticatedEntities": 0
            },
            {
                "ServiceName": "AWS CloudHSM",
                "ServiceNamespace": "cloudhsm",
                "TotalAuthenticatedEntities": 0
            },
            {
                "ServiceName": "Amazon CloudSearch",
                "ServiceNamespace": "cloudsearch",
                "TotalAuthenticatedEntities": 0
            },
            {
                "ServiceName": "AWS CloudShell",
                "ServiceNamespace": "cloudshell",
                "TotalAuthenticatedEntities": 0
            },
            {
                "ServiceName": "AWS CloudTrail",
                "LastAuthenticated": "2024-08-21T04:02:31+00:00",
                "ServiceNamespace": "cloudtrail",
                "LastAuthenticatedEntity": "arn:aws:iam::975049982984:user/vibhor",
                "LastAuthenticatedRegion": "us-east-1",
                "TotalAuthenticatedEntities": 1
            },
            {
                "ServiceName": "AWS CloudTrail Data",
                "ServiceNamespace": "cloudtrail-data",
                "TotalAuthenticatedEntities": 0
            },
            {
                "ServiceName": "Amazon CloudWatch",
                "LastAuthenticated": "2024-08-29T15:01:06+00:00",
                "ServiceNamespace": "cloudwatch",
                "LastAuthenticatedEntity": "arn:aws:iam::975049982984:user/vibhor",
                "LastAuthenticatedRegion": "us-east-1",
                "TotalAuthenticatedEntities": 1
            },
            {
                "ServiceName": "AWS CodeArtifact",
                "ServiceNamespace": "codeartifact",
                "TotalAuthenticatedEntities": 0
            },
            {
                "ServiceName": "AWS CodeBuild",
                "ServiceNamespace": "codebuild",
                "TotalAuthenticatedEntities": 0
            },
            {
                "ServiceName": "Amazon CodeCatalyst",
                "ServiceNamespace": "codecatalyst",
                "TotalAuthenticatedEntities": 0
            },
            {
                "ServiceName": "AWS CodeCommit",
                "ServiceNamespace": "codecommit",
                "TotalAuthenticatedEntities": 0
            },
            {
                "ServiceName": "AWS CodeConnections",
                "ServiceNamespace": "codeconnections",
                "TotalAuthenticatedEntities": 0
            },
            {
                "ServiceName": "AWS CodeDeploy",
                "ServiceNamespace": "codedeploy",
                "TotalAuthenticatedEntities": 0
            },
            {
                "ServiceName": "AWS CodeDeploy secure host commands service",
                "ServiceNamespace": "codedeploy-commands-secure",
                "TotalAuthenticatedEntities": 0
            },
            {
                "ServiceName": "Amazon CodeGuru",
                "ServiceNamespace": "codeguru",
                "TotalAuthenticatedEntities": 0
            },
            {
                "ServiceName": "Amazon CodeGuru Profiler",
                "ServiceNamespace": "codeguru-profiler",
                "TotalAuthenticatedEntities": 0
            },
            {
                "ServiceName": "Amazon CodeGuru Reviewer",
                "ServiceNamespace": "codeguru-reviewer",
                "TotalAuthenticatedEntities": 0
            },
            {
                "ServiceName": "Amazon CodeGuru Security",
                "ServiceNamespace": "codeguru-security",
                "TotalAuthenticatedEntities": 0
            },
            {
                "ServiceName": "AWS CodePipeline",
                "ServiceNamespace": "codepipeline",
                "TotalAuthenticatedEntities": 0
            },
            {
                "ServiceName": "AWS CodeStar",
                "ServiceNamespace": "codestar",
                "TotalAuthenticatedEntities": 0
            },
            {
                "ServiceName": "AWS CodeStar Connections",
                "ServiceNamespace": "codestar-connections",
                "TotalAuthenticatedEntities": 0
            },
            {
                "ServiceName": "AWS CodeStar Notifications",
                "ServiceNamespace": "codestar-notifications",
                "TotalAuthenticatedEntities": 0
            },
            {
                "ServiceName": "Amazon CodeWhisperer",
                "ServiceNamespace": "codewhisperer",
                "TotalAuthenticatedEntities": 0
            },
            {
                "ServiceName": "Amazon Cognito Identity",
                "ServiceNamespace": "cognito-identity",
                "TotalAuthenticatedEntities": 0
            },
            {
                "ServiceName": "Amazon Cognito User Pools",
                "ServiceNamespace": "cognito-idp",
                "TotalAuthenticatedEntities": 0
            },
            {
                "ServiceName": "Amazon Cognito Sync",
                "ServiceNamespace": "cognito-sync",
                "TotalAuthenticatedEntities": 0
            },
            {
                "ServiceName": "Amazon Comprehend",
                "ServiceNamespace": "comprehend",
                "TotalAuthenticatedEntities": 0
            },
            {
                "ServiceName": "Amazon Comprehend Medical",
                "ServiceNamespace": "comprehendmedical",
                "TotalAuthenticatedEntities": 0
            },
            {
                "ServiceName": "AWS Compute Optimizer",
                "LastAuthenticated": "2024-08-29T03:19:27+00:00",
                "ServiceNamespace": "compute-optimizer",
                "LastAuthenticatedEntity": "arn:aws:iam::975049982984:user/vibhor",
                "LastAuthenticatedRegion": "us-east-1",
                "TotalAuthenticatedEntities": 1
            },
            {
                "ServiceName": "AWS Config",
                "LastAuthenticated": "2024-07-25T10:49:07+00:00",
                "ServiceNamespace": "config",
                "LastAuthenticatedEntity": "arn:aws:iam::975049982984:user/vibhor",
                "LastAuthenticatedRegion": "us-west-1",
                "TotalAuthenticatedEntities": 1
            },
            {
                "ServiceName": "Amazon Connect",
                "ServiceNamespace": "connect",
                "TotalAuthenticatedEntities": 0
            },
            {
                "ServiceName": "High-volume outbound communications",
                "ServiceNamespace": "connect-campaigns",
                "TotalAuthenticatedEntities": 0
            },
            {
                "ServiceName": "AWS Console Mobile App",
                "ServiceNamespace": "consoleapp",
                "TotalAuthenticatedEntities": 0
            },
            {
                "ServiceName": "AWS Consolidated Billing",
                "ServiceNamespace": "consolidatedbilling",
                "TotalAuthenticatedEntities": 0
            },
            {
                "ServiceName": "AWS Control Catalog",
                "ServiceNamespace": "controlcatalog",
                "TotalAuthenticatedEntities": 0
            },
            {
                "ServiceName": "AWS Control Tower",
                "ServiceNamespace": "controltower",
                "TotalAuthenticatedEntities": 0
            },
            {
                "ServiceName": "AWS Cost Optimization Hub",
                "LastAuthenticated": "2024-08-30T14:16:38+00:00",
                "ServiceNamespace": "cost-optimization-hub",
                "LastAuthenticatedEntity": "arn:aws:iam::975049982984:user/vibhor",
                "LastAuthenticatedRegion": "us-east-1",
                "TotalAuthenticatedEntities": 1
            },
            {
                "ServiceName": "AWS Cost and Usage Report",
                "ServiceNamespace": "cur",
                "TotalAuthenticatedEntities": 0
            },
            {
                "ServiceName": "AWS Customer Verification Service",
                "ServiceNamespace": "customer-verification",
                "TotalAuthenticatedEntities": 0
            },
            {
                "ServiceName": "AWS Glue DataBrew",
                "ServiceNamespace": "databrew",
                "TotalAuthenticatedEntities": 0
            },
            {
                "ServiceName": "AWS Data Exchange",
                "ServiceNamespace": "dataexchange",
                "TotalAuthenticatedEntities": 0
            },
            {
                "ServiceName": "AWS Data Pipeline",
                "ServiceNamespace": "datapipeline",
                "TotalAuthenticatedEntities": 0
            },
            {
                "ServiceName": "AWS DataSync",
                "ServiceNamespace": "datasync",
                "TotalAuthenticatedEntities": 0
            },
            {
                "ServiceName": "Amazon DataZone",
                "ServiceNamespace": "datazone",
                "TotalAuthenticatedEntities": 0
            },
            {
                "ServiceName": "Amazon DynamoDB Accelerator (DAX)",
                "ServiceNamespace": "dax",
                "TotalAuthenticatedEntities": 0
            },
            {
                "ServiceName": "Database Query Metadata Service",
                "ServiceNamespace": "dbqms",
                "TotalAuthenticatedEntities": 0
            },
            {
                "ServiceName": "AWS Deadline Cloud",
                "ServiceNamespace": "deadline",
                "TotalAuthenticatedEntities": 0
            },
            {
                "ServiceName": "AWS DeepComposer",
                "ServiceNamespace": "deepcomposer",
                "TotalAuthenticatedEntities": 0
            },
            {
                "ServiceName": "AWS DeepLens",
                "ServiceNamespace": "deeplens",
                "TotalAuthenticatedEntities": 0
            },
            {
                "ServiceName": "AWS DeepRacer",
                "ServiceNamespace": "deepracer",
                "TotalAuthenticatedEntities": 0
            },
            {
                "ServiceName": "Amazon Detective",
                "ServiceNamespace": "detective",
                "TotalAuthenticatedEntities": 0
            },
            {
                "ServiceName": "AWS Device Farm",
                "ServiceNamespace": "devicefarm",
                "TotalAuthenticatedEntities": 0
            },
            {
                "ServiceName": "Amazon DevOps Guru",
                "ServiceNamespace": "devops-guru",
                "TotalAuthenticatedEntities": 0
            },
            {
                "ServiceName": "AWS Direct Connect",
                "ServiceNamespace": "directconnect",
                "TotalAuthenticatedEntities": 0
            },
            {
                "ServiceName": "AWS Application Discovery Service",
                "ServiceNamespace": "discovery",
                "TotalAuthenticatedEntities": 0
            },
            {
                "ServiceName": "Amazon Data Lifecycle Manager",
                "ServiceNamespace": "dlm",
                "TotalAuthenticatedEntities": 0
            },
            {
                "ServiceName": "AWS Database Migration Service",
                "ServiceNamespace": "dms",
                "TotalAuthenticatedEntities": 0
            },
            {
                "ServiceName": "Amazon DocumentDB Elastic Clusters",
                "ServiceNamespace": "docdb-elastic",
                "TotalAuthenticatedEntities": 0
            },
            {
                "ServiceName": "AWS Elastic Disaster Recovery",
                "ServiceNamespace": "drs",
                "TotalAuthenticatedEntities": 0
            },
            {
                "ServiceName": "AWS Directory Service",
                "LastAuthenticated": "2024-08-22T12:37:39+00:00",
                "ServiceNamespace": "ds",
                "LastAuthenticatedEntity": "arn:aws:iam::975049982984:user/vibhor",
                "LastAuthenticatedRegion": "us-east-1",
                "TotalAuthenticatedEntities": 1
            },
            {
                "ServiceName": "AWS Directory Service Data",
                "ServiceNamespace": "ds-data",
                "TotalAuthenticatedEntities": 0
            },
            {
                "ServiceName": "Amazon DynamoDB",
                "ServiceNamespace": "dynamodb",
                "TotalAuthenticatedEntities": 0
            },
            {
                "ServiceName": "Amazon Elastic Block Store",
                "ServiceNamespace": "ebs",
                "TotalAuthenticatedEntities": 0
            },
            {
                "ServiceName": "Amazon EC2",
                "LastAuthenticated": "2024-08-31T00:09:00+00:00",
                "ServiceNamespace": "ec2",
                "LastAuthenticatedEntity": "arn:aws:iam::975049982984:user/vibhor",
                "LastAuthenticatedRegion": "us-east-1",
                "TotalAuthenticatedEntities": 1
            },
            {
                "ServiceName": "Amazon EC2 Instance Connect",
                "LastAuthenticated": "2024-08-29T03:19:31+00:00",
                "ServiceNamespace": "ec2-instance-connect",
                "LastAuthenticatedEntity": "arn:aws:iam::975049982984:user/vibhor",
                "LastAuthenticatedRegion": "us-east-1",
                "TotalAuthenticatedEntities": 1
            },
            {
                "ServiceName": "Amazon Message Delivery Service",
                "ServiceNamespace": "ec2messages",
                "TotalAuthenticatedEntities": 0
            },
            {
                "ServiceName": "Amazon Elastic Container Registry",
                "ServiceNamespace": "ecr",
                "TotalAuthenticatedEntities": 0
            },
            {
                "ServiceName": "Amazon Elastic Container Registry Public",
                "ServiceNamespace": "ecr-public",
                "TotalAuthenticatedEntities": 0
            },
            {
                "ServiceName": "Amazon Elastic Container Service",
                "ServiceNamespace": "ecs",
                "TotalAuthenticatedEntities": 0
            },
            {
                "ServiceName": "Amazon Elastic Kubernetes Service",
                "ServiceNamespace": "eks",
                "TotalAuthenticatedEntities": 0
            },
            {
                "ServiceName": "Amazon EKS Auth",
                "ServiceNamespace": "eks-auth",
                "TotalAuthenticatedEntities": 0
            },
            {
                "ServiceName": "Amazon Elastic Inference",
                "ServiceNamespace": "elastic-inference",
                "TotalAuthenticatedEntities": 0
            },
            {
                "ServiceName": "Amazon ElastiCache",
                "LastAuthenticated": "2024-08-21T04:13:20+00:00",
                "ServiceNamespace": "elasticache",
                "LastAuthenticatedEntity": "arn:aws:iam::975049982984:user/vibhor",
                "LastAuthenticatedRegion": "us-east-1",
                "TotalAuthenticatedEntities": 1
            },
            {
                "ServiceName": "AWS Elastic Beanstalk",
                "ServiceNamespace": "elasticbeanstalk",
                "TotalAuthenticatedEntities": 0
            },
            {
                "ServiceName": "Amazon Elastic File System",
                "ServiceNamespace": "elasticfilesystem",
                "TotalAuthenticatedEntities": 0
            },
            {
                "ServiceName": "Elastic Load Balancing",
                "LastAuthenticated": "2024-08-29T03:10:05+00:00",
                "ServiceNamespace": "elasticloadbalancing",
                "LastAuthenticatedEntity": "arn:aws:iam::975049982984:user/vibhor",
                "LastAuthenticatedRegion": "us-east-1",
                "TotalAuthenticatedEntities": 1
            },
            {
                "ServiceName": "Amazon Elastic MapReduce",
                "ServiceNamespace": "elasticmapreduce",
                "TotalAuthenticatedEntities": 0
            },
            {
                "ServiceName": "Amazon Elastic Transcoder",
                "ServiceNamespace": "elastictranscoder",
                "TotalAuthenticatedEntities": 0
            },
            {
                "ServiceName": "AWS Elemental Appliances and Software Activation Service",
                "ServiceNamespace": "elemental-activations",
                "TotalAuthenticatedEntities": 0
            },
            {
                "ServiceName": "AWS Elemental Appliances and Software",
                "ServiceNamespace": "elemental-appliances-software",
                "TotalAuthenticatedEntities": 0
            },
            {
                "ServiceName": "AWS Elemental Support Cases",
                "ServiceNamespace": "elemental-support-cases",
                "TotalAuthenticatedEntities": 0
            },
            {
                "ServiceName": "AWS Elemental Support Content",
                "ServiceNamespace": "elemental-support-content",
                "TotalAuthenticatedEntities": 0
            },
            {
                "ServiceName": "Amazon EMR on EKS (EMR Containers)",
                "ServiceNamespace": "emr-containers",
                "TotalAuthenticatedEntities": 0
            },
            {
                "ServiceName": "Amazon EMR Serverless",
                "ServiceNamespace": "emr-serverless",
                "TotalAuthenticatedEntities": 0
            },
            {
                "ServiceName": "AWS Entity Resolution",
                "ServiceNamespace": "entityresolution",
                "TotalAuthenticatedEntities": 0
            },
            {
                "ServiceName": "Amazon OpenSearch Service",
                "ServiceNamespace": "es",
                "TotalAuthenticatedEntities": 0
            },
            {
                "ServiceName": "Amazon EventBridge",
                "ServiceNamespace": "events",
                "TotalAuthenticatedEntities": 0
            },
            {
                "ServiceName": "Amazon CloudWatch Evidently",
                "ServiceNamespace": "evidently",
                "TotalAuthenticatedEntities": 0
            },
            {
                "ServiceName": "Amazon API Gateway",
                "ServiceNamespace": "execute-api",
                "TotalAuthenticatedEntities": 0
            },
            {
                "ServiceName": "Amazon FinSpace",
                "ServiceNamespace": "finspace",
                "TotalAuthenticatedEntities": 0
            },
            {
                "ServiceName": "Amazon FinSpace API",
                "ServiceNamespace": "finspace-api",
                "TotalAuthenticatedEntities": 0
            },
            {
                "ServiceName": "Amazon Kinesis Firehose",
                "ServiceNamespace": "firehose",
                "TotalAuthenticatedEntities": 0
            },
            {
                "ServiceName": "AWS Fault Injection Service",
                "ServiceNamespace": "fis",
                "TotalAuthenticatedEntities": 0
            },
            {
                "ServiceName": "AWS Firewall Manager",
                "ServiceNamespace": "fms",
                "TotalAuthenticatedEntities": 0
            },
            {
                "ServiceName": "Amazon Forecast",
                "ServiceNamespace": "forecast",
                "TotalAuthenticatedEntities": 0
            },
            {
                "ServiceName": "Amazon Fraud Detector",
                "ServiceNamespace": "frauddetector",
                "TotalAuthenticatedEntities": 0
            },
            {
                "ServiceName": "Amazon FreeRTOS",
                "ServiceNamespace": "freertos",
                "TotalAuthenticatedEntities": 0
            },
            {
                "ServiceName": "AWS Free Tier",
                "LastAuthenticated": "2024-08-30T14:16:45+00:00",
                "ServiceNamespace": "freetier",
                "LastAuthenticatedEntity": "arn:aws:iam::975049982984:user/vibhor",
                "LastAuthenticatedRegion": "us-east-1",
                "TotalAuthenticatedEntities": 1
            },
            {
                "ServiceName": "Amazon FSx",
                "ServiceNamespace": "fsx",
                "TotalAuthenticatedEntities": 0
            },
            {
                "ServiceName": "Amazon GameLift",
                "ServiceNamespace": "gamelift",
                "TotalAuthenticatedEntities": 0
            },
            {
                "ServiceName": "Amazon Location",
                "ServiceNamespace": "geo",
                "TotalAuthenticatedEntities": 0
            },
            {
                "ServiceName": "Amazon S3 Glacier",
                "ServiceNamespace": "glacier",
                "TotalAuthenticatedEntities": 0
            },
            {
                "ServiceName": "AWS Global Accelerator",
                "ServiceNamespace": "globalaccelerator",
                "TotalAuthenticatedEntities": 0
            },
            {
                "ServiceName": "AWS Glue",
                "ServiceNamespace": "glue",
                "TotalAuthenticatedEntities": 0
            },
            {
                "ServiceName": "Amazon Managed Grafana",
                "ServiceNamespace": "grafana",
                "TotalAuthenticatedEntities": 0
            },
            {
                "ServiceName": "AWS IoT Greengrass",
                "ServiceNamespace": "greengrass",
                "TotalAuthenticatedEntities": 0
            },
            {
                "ServiceName": "AWS Ground Station",
                "ServiceNamespace": "groundstation",
                "TotalAuthenticatedEntities": 0
            },
            {
                "ServiceName": "Amazon GroundTruth Labeling",
                "ServiceNamespace": "groundtruthlabeling",
                "TotalAuthenticatedEntities": 0
            },
            {
                "ServiceName": "Amazon GuardDuty",
                "LastAuthenticated": "2024-08-22T12:37:14+00:00",
                "ServiceNamespace": "guardduty",
                "LastAuthenticatedEntity": "arn:aws:iam::975049982984:user/vibhor",
                "LastAuthenticatedRegion": "us-east-1",
                "TotalAuthenticatedEntities": 1
            },
            {
                "ServiceName": "AWS Health APIs and Notifications",
                "LastAuthenticated": "2024-08-30T14:16:30+00:00",
                "ServiceNamespace": "health",
                "LastAuthenticatedEntity": "arn:aws:iam::975049982984:user/vibhor",
                "LastAuthenticatedRegion": "us-east-1",
                "TotalAuthenticatedEntities": 1
            },
            {
                "ServiceName": "AWS HealthLake",
                "ServiceNamespace": "healthlake",
                "TotalAuthenticatedEntities": 0
            },
            {
                "ServiceName": "Amazon Honeycode",
                "ServiceNamespace": "honeycode",
                "TotalAuthenticatedEntities": 0
            },
            {
                "ServiceName": "AWS Identity and Access Management",
                "LastAuthenticated": "2024-08-31T00:11:08+00:00",
                "ServiceNamespace": "iam",
                "LastAuthenticatedEntity": "arn:aws:iam::975049982984:user/vibhor",
                "LastAuthenticatedRegion": "us-east-1",
                "TotalAuthenticatedEntities": 1
            },
            {
                "ServiceName": "AWS Identity Sync",
                "ServiceNamespace": "identity-sync",
                "TotalAuthenticatedEntities": 0
            },
            {
                "ServiceName": "AWS Identity Store",
                "ServiceNamespace": "identitystore",
                "TotalAuthenticatedEntities": 0
            },
            {
                "ServiceName": "AWS Identity Store Auth",
                "LastAuthenticated": "2024-08-30T13:35:16+00:00",
                "ServiceNamespace": "identitystore-auth",
                "LastAuthenticatedEntity": "arn:aws:iam::975049982984:user/vibhor",
                "LastAuthenticatedRegion": "us-east-1",
                "TotalAuthenticatedEntities": 1
            },
            {
                "ServiceName": "Amazon EC2 Image Builder",
                "ServiceNamespace": "imagebuilder",
                "TotalAuthenticatedEntities": 0
            },
            {
                "ServiceName": "AWS Import Export",
                "ServiceNamespace": "importexport",
                "TotalAuthenticatedEntities": 0
            },
            {
                "ServiceName": "Amazon Inspector",
                "ServiceNamespace": "inspector",
                "TotalAuthenticatedEntities": 0
            },
            {
                "ServiceName": "Amazon InspectorScan",
                "ServiceNamespace": "inspector-scan",
                "TotalAuthenticatedEntities": 0
            },
            {
                "ServiceName": "Amazon Inspector2",
                "ServiceNamespace": "inspector2",
                "TotalAuthenticatedEntities": 0
            },
            {
                "ServiceName": "Amazon CloudWatch Internet Monitor",
                "ServiceNamespace": "internetmonitor",
                "TotalAuthenticatedEntities": 0
            },
            {
                "ServiceName": "AWS Invoicing Service",
                "LastAuthenticated": "2024-08-30T14:16:45+00:00",
                "ServiceNamespace": "invoicing",
                "LastAuthenticatedEntity": "arn:aws:iam::975049982984:user/vibhor",
                "LastAuthenticatedRegion": "us-east-1",
                "TotalAuthenticatedEntities": 1
            },
            {
                "ServiceName": "AWS IoT",
                "ServiceNamespace": "iot",
                "TotalAuthenticatedEntities": 0
            },
            {
                "ServiceName": "AWS IoT Device Tester",
                "ServiceNamespace": "iot-device-tester",
                "TotalAuthenticatedEntities": 0
            },
            {
                "ServiceName": "AWS IoT 1-Click",
                "ServiceNamespace": "iot1click",
                "TotalAuthenticatedEntities": 0
            },
            {
                "ServiceName": "AWS IoT Analytics",
                "ServiceNamespace": "iotanalytics",
                "TotalAuthenticatedEntities": 0
            },
            {
                "ServiceName": "AWS IoT Core Device Advisor",
                "ServiceNamespace": "iotdeviceadvisor",
                "TotalAuthenticatedEntities": 0
            },
            {
                "ServiceName": "AWS IoT Events",
                "ServiceNamespace": "iotevents",
                "TotalAuthenticatedEntities": 0
            },
            {
                "ServiceName": "AWS IoT Fleet Hub for Device Management",
                "ServiceNamespace": "iotfleethub",
                "TotalAuthenticatedEntities": 0
            },
            {
                "ServiceName": "AWS IoT FleetWise",
                "ServiceNamespace": "iotfleetwise",
                "TotalAuthenticatedEntities": 0
            },
            {
                "ServiceName": "AWS IoT Jobs DataPlane",
                "ServiceNamespace": "iotjobsdata",
                "TotalAuthenticatedEntities": 0
            },
            {
                "ServiceName": "AWS IoT SiteWise",
                "ServiceNamespace": "iotsitewise",
                "TotalAuthenticatedEntities": 0
            },
            {
                "ServiceName": "AWS IoT TwinMaker",
                "ServiceNamespace": "iottwinmaker",
                "TotalAuthenticatedEntities": 0
            },
            {
                "ServiceName": "AWS IoT Wireless",
                "ServiceNamespace": "iotwireless",
                "TotalAuthenticatedEntities": 0
            },
            {
                "ServiceName": "AWS IQ",
                "ServiceNamespace": "iq",
                "TotalAuthenticatedEntities": 0
            }
        ]
    },
    "user_temporary_credentials_usage": {
        "('iyersri', 'arn:aws:iam::975049982984:user/iyersri')": false,
        "('service-account-backend', 'arn:aws:iam::975049982984:user/service-account-backend')": true,
        "('vibhor', 'arn:aws:iam::975049982984:user/vibhor')": true
    }
}